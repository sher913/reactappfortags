2021-09-02 16:24:46,097;INFO;started!
2021-09-02 16:30:28,383;INFO;started!
2021-09-02 16:31:44,134;INFO;started!
2021-09-02 16:32:09,966;INFO;started!
2021-09-02 16:33:30,180;INFO;started!
2021-09-02 16:36:43,304;INFO;started!
2021-09-02 16:36:47,032;ERROR;<class 'datahub.metadata.schema_classes.GlobalTagsClass'> is not defined properly
2021-09-02 16:38:50,279;INFO;started!
2021-09-02 16:39:02,237;ERROR;<class 'datahub.metadata.schema_classes.GlobalTagsClass'> is not defined properly
2021-09-02 16:39:24,655;INFO;started!
2021-09-02 16:49:28,473;INFO;started!
2021-09-02 16:50:01,110;INFO;started!
2021-09-02 16:50:47,383;INFO;started!
2021-09-02 16:51:55,910;INFO;started!
2021-09-02 16:53:58,722;INFO;started!
2021-09-02 16:54:18,030;INFO;started!
2021-09-02 16:55:45,787;INFO;started!
2021-09-02 16:55:47,466;ERROR;<class 'datahub.metadata.schema_classes.GlobalTagsClass'> is not defined properly
2021-09-02 16:56:07,902;ERROR;<class 'datahub.metadata.schema_classes.GlobalTagsClass'> is not defined properly
2021-09-02 16:56:19,338;INFO;started!
2021-09-02 16:58:19,668;INFO;started!
2021-09-02 16:58:49,270;INFO;started!
2021-09-02 16:58:52,511;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 16:58:52,536;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 16:59:02,932;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:a'}, {'tag': 'urn:li:tag:s'}, {'tag': 'urn:li:tag:d'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 16:59:02,969;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 16:59:55,366;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 16:59:55,387;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:04:38,132;INFO;started!
2021-09-02 17:04:44,031;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:04:44,089;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:05:18,044;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:05:18,069;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:07:17,937;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:07:17,963;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:08:03,193;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:08:03,234;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:09:56,305;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:09:56,344;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:13:21,794;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:13:21,831;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:13:51,374;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:13:51,415;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:14:06,646;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:14:06,678;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:14:55,696;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:14:55,743;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:16:15,941;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:16:15,978;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:17:46,920;INFO;started!
2021-09-02 17:18:04,949;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:18:04,999;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:19:35,566;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:19:35,599;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:20:57,197;INFO;started!
2021-09-02 17:21:04,804;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:21:04,846;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:21:04,861;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:21:04,914;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:22:08,436;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:22:08,491;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:22:08,514;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:22:08,546;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:22:08,567;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:22:08,602;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:22:08,623;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:22:08,666;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:22:08,688;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:22:08,731;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:22:08,749;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:22:08,794;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:25:50,444;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:25:50,469;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:26:22,162;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:26:22,187;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:26:44,114;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:26:44,148;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:30:09,294;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:30:09,336;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:30:09,355;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}, {'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:30:09,390;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:30:09,408;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:30:09,453;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:30:09,476;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:30:09,527;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:30:09,551;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:30:09,592;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:30:09,615;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:30:09,650;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:34:34,589;INFO;started!
2021-09-02 17:34:54,547;INFO;started!
2021-09-02 17:34:55,449;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [[], SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:34:55,454;DEBUG;The datum DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [[], SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}) is not an example of the schema {
  "type": "record",
  "Entity": {
    "keyAspect": "datasetKey",
    "name": "dataset"
  },
  "name": "DatasetSnapshot",
  "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
  "fields": [
    {
      "java": {
        "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
      },
      "type": "string",
      "name": "urn",
      "doc": "URN for the entity the metadata snapshot is associated with."
    },
    {
      "type": {
        "type": "array",
        "items": [
          {
            "type": "record",
            "Aspect": {
              "name": "datasetKey"
            },
            "name": "DatasetKey",
            "namespace": "com.linkedin.pegasus2avro.metadata.key",
            "fields": [
              {
                "Searchable": {
                  "addToFilters": true,
                  "fieldType": "URN"
                },
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                },
                "type": "string",
                "name": "platform",
                "doc": "Data platform urn associated with the dataset"
              },
              {
                "Searchable": {
                  "boostScore": 10.0,
                  "enableAutocomplete": true,
                  "fieldType": "TEXT_PARTIAL"
                },
                "type": "string",
                "name": "name",
                "doc": "Dataset native name e.g. <db>.<table>, /dir/subdir/<name>, or <name>"
              },
              {
                "Searchable": {
                  "addToFilters": true,
                  "fieldType": "TEXT_PARTIAL",
                  "queryByDefault": false
                },
                "type": {
                  "type": "enum",
                  "symbolDocs": {
                    "CORP": "Designates corporation fabrics",
                    "DEV": "Designates development fabrics",
                    "EI": "Designates early-integration (staging) fabrics",
                    "PROD": "Designates production fabrics"
                  },
                  "name": "FabricType",
                  "namespace": "com.linkedin.pegasus2avro.common",
                  "symbols": [
                    "DEV",
                    "EI",
                    "PROD",
                    "CORP"
                  ],
                  "doc": "Fabric group type"
                },
                "name": "origin",
                "doc": "Fabric type where dataset belongs to or where it was generated."
              }
            ],
            "doc": "Key for a Dataset"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "datasetProperties"
            },
            "name": "DatasetProperties",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "type": {
                  "type": "map",
                  "values": "string"
                },
                "name": "customProperties",
                "default": {},
                "doc": "Custom property bag."
              },
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.url.Url",
                  "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "externalUrl",
                "default": null,
                "doc": "URL where the reference exist"
              },
              {
                "Searchable": {
                  "fieldType": "TEXT",
                  "hasValuesFieldName": "hasDescription"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "description",
                "default": null,
                "doc": "Documentation of the dataset"
              },
              {
                "java": {
                  "class": "java.net.URI"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "uri",
                "default": null,
                "doc": "The abstracted URI such as hdfs:///data/tracking/PageViewEvent, file:///dir/file_name. Uri should not include any environment specific properties. Some datasets might not have a standardized uri, which makes this field optional (i.e. kafka topic)."
              },
              {
                "type": {
                  "type": "array",
                  "items": "string"
                },
                "name": "tags",
                "default": [],
                "doc": "[Legacy] Unstructured tags for the dataset. Structured tags can be applied via the `GlobalTags` aspect."
              }
            ],
            "doc": "Properties associated with a Dataset"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "editableDatasetProperties"
            },
            "name": "EditableDatasetProperties",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "type": {
                  "type": "record",
                  "name": "AuditStamp",
                  "namespace": "com.linkedin.pegasus2avro.common",
                  "fields": [
                    {
                      "type": "long",
                      "name": "time",
                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
                    },
                    {
                      "java": {
                        "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                      },
                      "type": "string",
                      "name": "actor",
                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."
                    },
                    {
                      "java": {
                        "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                      },
                      "type": [
                        "null",
                        "string"
                      ],
                      "name": "impersonator",
                      "default": null,
                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."
                    }
                  ],
                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."
                },
                "name": "created",
                "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource"
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "lastModified",
                "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created"
              },
              {
                "type": [
                  "null",
                  "com.linkedin.pegasus2avro.common.AuditStamp"
                ],
                "name": "deleted",
                "default": null,
                "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
              },
              {
                "Searchable": {
                  "fieldName": "editedDescription",
                  "fieldType": "TEXT"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "description",
                "default": null,
                "doc": "Documentation of the dataset"
              }
            ],
            "doc": "EditableDatasetProperties stores editable changes made to dataset properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "datasetDeprecation"
            },
            "name": "DatasetDeprecation",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "Searchable": {
                  "fieldType": "BOOLEAN",
                  "weightsPerFieldValue": {
                    "true": 0.5
                  }
                },
                "type": "boolean",
                "name": "deprecated",
                "doc": "Whether the dataset is deprecated by owner."
              },
              {
                "type": [
                  "null",
                  "long"
                ],
                "name": "decommissionTime",
                "default": null,
                "doc": "The time user plan to decommission this dataset."
              },
              {
                "type": "string",
                "name": "note",
                "doc": "Additional information about the dataset deprecation plan, such as the wiki, doc, RB."
              },
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "actor",
                "default": null,
                "doc": "The corpuser URN which will be credited for modifying this deprecation content."
              }
            ],
            "doc": "Dataset deprecation status"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "datasetUpstreamLineage"
            },
            "name": "DatasetUpstreamLineage",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "DatasetFieldMapping",
                    "namespace": "com.linkedin.pegasus2avro.dataset",
                    "fields": [
                      {
                        "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                        "name": "created",
                        "doc": "Audit stamp containing who reported the field mapping and when"
                      },
                      {
                        "type": [
                          {
                            "type": "enum",
                            "symbolDocs": {
                              "BLACKBOX": "Field transformation expressed as unknown black box function.",
                              "IDENTITY": "Field transformation expressed as Identity function."
                            },
                            "name": "TransformationType",
                            "namespace": "com.linkedin.pegasus2avro.common.fieldtransformer",
                            "symbols": [
                              "BLACKBOX",
                              "IDENTITY"
                            ],
                            "doc": "Type of the transformation involved in generating destination fields from source fields."
                          },
                          {
                            "type": "record",
                            "name": "UDFTransformer",
                            "namespace": "com.linkedin.pegasus2avro.common.fieldtransformer",
                            "fields": [
                              {
                                "type": "string",
                                "name": "udf",
                                "doc": "A UDF mentioning how the source fields got transformed to destination field. This is the FQCN(Fully Qualified Class Name) of the udf."
                              }
                            ],
                            "doc": "Field transformation expressed in UDF"
                          }
                        ],
                        "name": "transformation",
                        "doc": "Transfomration function between the fields involved"
                      },
                      {
                        "type": {
                          "type": "array",
                          "items": [
                            "string"
                          ]
                        },
                        "name": "sourceFields",
                        "doc": "Source fields from which the fine grained lineage is derived"
                      },
                      {
                        "java": {
                          "class": "com.linkedin.pegasus2avro.common.urn.DatasetFieldUrn"
                        },
                        "type": "string",
                        "name": "destinationField",
                        "doc": "Destination field which is derived from source fields"
                      }
                    ],
                    "doc": "Representation of mapping between fields in source dataset to the field in destination dataset"
                  }
                },
                "name": "fieldMappings",
                "doc": "Upstream to downstream field level lineage mappings"
              }
            ],
            "doc": "Fine Grained upstream lineage for fields in a dataset"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "upstreamLineage"
            },
            "name": "UpstreamLineage",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "Upstream",
                    "namespace": "com.linkedin.pegasus2avro.dataset",
                    "fields": [
                      {
                        "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                        "name": "auditStamp",
                        "doc": "Audit stamp containing who reported the lineage and when"
                      },
                      {
                        "Relationship": {
                          "entityTypes": [
                            "dataset"
                          ],
                          "name": "DownstreamOf"
                        },
                        "Searchable": {
                          "fieldName": "upstreams",
                          "fieldType": "URN",
                          "queryByDefault": false
                        },
                        "java": {
                          "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                        },
                        "type": "string",
                        "name": "dataset",
                        "doc": "The upstream dataset the lineage points to"
                      },
                      {
                        "type": {
                          "type": "enum",
                          "symbolDocs": {
                            "COPY": "Direct copy without modification",
                            "TRANSFORMED": "Transformed data with modification (format or content change)",
                            "VIEW": "Represents a view defined on the sources e.g. Hive view defined on underlying hive tables or a Hive table pointing to a HDFS dataset or DALI view defined on multiple sources"
                          },
                          "name": "DatasetLineageType",
                          "namespace": "com.linkedin.pegasus2avro.dataset",
                          "symbols": [
                            "COPY",
                            "TRANSFORMED",
                            "VIEW"
                          ],
                          "doc": "The various types of supported dataset lineage"
                        },
                        "name": "type",
                        "doc": "The type of the lineage"
                      }
                    ],
                    "doc": "Upstream lineage information about a dataset including the source reporting the lineage"
                  }
                },
                "name": "upstreams",
                "doc": "List of upstream dataset lineage information"
              }
            ],
            "doc": "Upstream lineage of a dataset"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "institutionalMemory"
            },
            "name": "InstitutionalMemory",
            "namespace": "com.linkedin.pegasus2avro.common",
            "fields": [
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "InstitutionalMemoryMetadata",
                    "namespace": "com.linkedin.pegasus2avro.common",
                    "fields": [
                      {
                        "java": {
                          "class": "com.linkedin.pegasus2avro.common.url.Url",
                          "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                        },
                        "type": "string",
                        "name": "url",
                        "doc": "Link to an engineering design document or a wiki page."
                      },
                      {
                        "type": "string",
                        "name": "description",
                        "doc": "Description of the link."
                      },
                      {
                        "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                        "name": "createStamp",
                        "doc": "Audit stamp associated with creation of this record"
                      }
                    ],
                    "doc": "Metadata corresponding to a record of institutional memory."
                  }
                },
                "name": "elements",
                "doc": "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."
              }
            ],
            "doc": "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."
          },
          {
            "type": "record",
            "Aspect": {
              "name": "ownership"
            },
            "name": "Ownership",
            "namespace": "com.linkedin.pegasus2avro.common",
            "fields": [
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "Owner",
                    "namespace": "com.linkedin.pegasus2avro.common",
                    "fields": [
                      {
                        "Relationship": {
                          "entityTypes": [
                            "corpUser",
                            "corpGroup"
                          ],
                          "name": "OwnedBy"
                        },
                        "Searchable": {
                          "fieldName": "owners",
                          "fieldType": "URN",
                          "hasValuesFieldName": "hasOwners",
                          "queryByDefault": false
                        },
                        "java": {
                          "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                        },
                        "type": "string",
                        "name": "owner",
                        "doc": "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\n(Caveat: only corpuser is currently supported in the frontend.)"
                      },
                      {
                        "type": {
                          "type": "enum",
                          "symbolDocs": {
                            "CONSUMER": "A person, group, or service that consumes the data",
                            "DATAOWNER": "A person or group that is owning the data",
                            "DELEGATE": "A person or a group that overseas the operation, e.g. a DBA or SRE.",
                            "DEVELOPER": "A person or group that is in charge of developing the code",
                            "PRODUCER": "A person, group, or service that produces/generates the data",
                            "STAKEHOLDER": "A person or a group that has direct business interest"
                          },
                          "name": "OwnershipType",
                          "namespace": "com.linkedin.pegasus2avro.common",
                          "symbols": [
                            "DEVELOPER",
                            "DATAOWNER",
                            "DELEGATE",
                            "PRODUCER",
                            "CONSUMER",
                            "STAKEHOLDER"
                          ],
                          "doc": "Owner category or owner role"
                        },
                        "name": "type",
                        "doc": "The type of the ownership"
                      },
                      {
                        "type": [
                          "null",
                          {
                            "type": "record",
                            "name": "OwnershipSource",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "fields": [
                              {
                                "type": {
                                  "type": "enum",
                                  "symbolDocs": {
                                    "AUDIT": "Auditing system or audit logs",
                                    "DATABASE": "Database, e.g. GRANTS table",
                                    "FILE_SYSTEM": "File system, e.g. file/directory owner",
                                    "ISSUE_TRACKING_SYSTEM": "Issue tracking system, e.g. Jira",
                                    "MANUAL": "Manually provided by a user",
                                    "OTHER": "Other sources",
                                    "SERVICE": "Other ownership-like service, e.g. Nuage, ACL service etc",
                                    "SOURCE_CONTROL": "SCM system, e.g. GIT, SVN"
                                  },
                                  "name": "OwnershipSourceType",
                                  "namespace": "com.linkedin.pegasus2avro.common",
                                  "symbols": [
                                    "AUDIT",
                                    "DATABASE",
                                    "FILE_SYSTEM",
                                    "ISSUE_TRACKING_SYSTEM",
                                    "MANUAL",
                                    "SERVICE",
                                    "SOURCE_CONTROL",
                                    "OTHER"
                                  ]
                                },
                                "name": "type",
                                "doc": "The type of the source"
                              },
                              {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "name": "url",
                                "default": null,
                                "doc": "A reference URL for the source"
                              }
                            ],
                            "doc": "Source/provider of the ownership information"
                          }
                        ],
                        "name": "source",
                        "default": null,
                        "doc": "Source information for the ownership"
                      }
                    ],
                    "doc": "Ownership information"
                  }
                },
                "name": "owners",
                "doc": "List of owners of the entity."
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "lastModified",
                "doc": "Audit stamp containing who last modified the record and when."
              }
            ],
            "doc": "Ownership information of an entity."
          },
          {
            "type": "record",
            "Aspect": {
              "name": "status"
            },
            "name": "Status",
            "namespace": "com.linkedin.pegasus2avro.common",
            "fields": [
              {
                "Searchable": {
                  "fieldType": "BOOLEAN"
                },
                "type": "boolean",
                "name": "removed",
                "default": false,
                "doc": "whether the entity is removed or not"
              }
            ],
            "doc": "The status metadata of an entity, e.g. dataset, metric, feature, etc."
          },
          {
            "type": "record",
            "Aspect": {
              "name": "schemaMetadata"
            },
            "name": "SchemaMetadata",
            "namespace": "com.linkedin.pegasus2avro.schema",
            "fields": [
              {
                "validate": {
                  "strlen": {
                    "max": 500,
                    "min": 1
                  }
                },
                "type": "string",
                "name": "schemaName",
                "doc": "Schema name e.g. PageViewEvent, identity.Profile, ams.account_management_tracking"
              },
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DataPlatformUrn"
                },
                "type": "string",
                "name": "platform",
                "doc": "Standardized platform urn where schema is defined. The data platform Urn (urn:li:platform:{platform_name})"
              },
              {
                "type": "long",
                "name": "version",
                "doc": "Every change to SchemaMetadata in the resource results in a new version. Version is server assigned. This version is differ from platform native schema version."
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "created",
                "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource"
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "lastModified",
                "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created"
              },
              {
                "type": [
                  "null",
                  "com.linkedin.pegasus2avro.common.AuditStamp"
                ],
                "name": "deleted",
                "default": null,
                "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
              },
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "dataset",
                "default": null,
                "doc": "Dataset this schema metadata is associated with."
              },
              {
                "type": [
                  "null",
                  "string"
                ],
                "name": "cluster",
                "default": null,
                "doc": "The cluster this schema metadata resides from"
              },
              {
                "type": "string",
                "name": "hash",
                "doc": "the SHA1 hash of the schema content"
              },
              {
                "type": [
                  {
                    "type": "record",
                    "name": "EspressoSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "documentSchema",
                        "doc": "The native espresso document schema."
                      },
                      {
                        "type": "string",
                        "name": "tableSchema",
                        "doc": "The espresso table schema definition."
                      }
                    ],
                    "doc": "Schema text of an espresso table schema."
                  },
                  {
                    "type": "record",
                    "name": "OracleDDL",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "tableSchema",
                        "doc": "The native schema in the dataset's platform. This is a human readable (json blob) table schema."
                      }
                    ],
                    "doc": "Schema holder for oracle data definition language that describes an oracle table."
                  },
                  {
                    "type": "record",
                    "name": "MySqlDDL",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "tableSchema",
                        "doc": "The native schema in the dataset's platform. This is a human readable (json blob) table schema."
                      }
                    ],
                    "doc": "Schema holder for MySql data definition language that describes an MySql table."
                  },
                  {
                    "type": "record",
                    "name": "PrestoDDL",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "rawSchema",
                        "doc": "The raw schema in the dataset's platform. This includes the DDL and the columns extracted from DDL."
                      }
                    ],
                    "doc": "Schema holder for presto data definition language that describes a presto view."
                  },
                  {
                    "type": "record",
                    "name": "KafkaSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "documentSchema",
                        "doc": "The native kafka document schema. This is a human readable avro document schema."
                      }
                    ],
                    "doc": "Schema holder for kafka schema."
                  },
                  {
                    "type": "record",
                    "name": "BinaryJsonSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "schema",
                        "doc": "The native schema text for binary JSON file format."
                      }
                    ],
                    "doc": "Schema text of binary JSON schema."
                  },
                  {
                    "type": "record",
                    "name": "OrcSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "schema",
                        "doc": "The native schema for ORC file format."
                      }
                    ],
                    "doc": "Schema text of an ORC schema."
                  },
                  {
                    "type": "record",
                    "name": "Schemaless",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [],
                    "doc": "The dataset has no specific schema associated with it"
                  },
                  {
                    "type": "record",
                    "name": "KeyValueSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "keySchema",
                        "doc": "The raw schema for the key in the key-value store."
                      },
                      {
                        "type": "string",
                        "name": "valueSchema",
                        "doc": "The raw schema for the value in the key-value store."
                      }
                    ],
                    "doc": "Schema text of a key-value store schema."
                  },
                  {
                    "type": "record",
                    "name": "OtherSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "rawSchema",
                        "doc": "The native schema in the dataset's platform."
                      }
                    ],
                    "doc": "Schema holder for undefined schema types."
                  }
                ],
                "name": "platformSchema",
                "doc": "The native schema in the dataset's platform."
              },
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "SchemaField",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "Searchable": {
                          "fieldName": "fieldPaths",
                          "fieldType": "TEXT_PARTIAL"
                        },
                        "type": "string",
                        "name": "fieldPath",
                        "doc": "Flattened name of the field. Field is computed from jsonPath field. For data translation rules refer to wiki page above."
                      },
                      {
                        "type": [
                          "null",
                          "string"
                        ],
                        "name": "jsonPath",
                        "default": null,
                        "doc": "Flattened name of a field in JSON Path notation."
                      },
                      {
                        "type": "boolean",
                        "name": "nullable",
                        "default": false,
                        "doc": "Indicates if this field is optional or nullable"
                      },
                      {
                        "Searchable": {
                          "boostScore": 0.1,
                          "fieldName": "fieldDescriptions",
                          "fieldType": "TEXT"
                        },
                        "type": [
                          "null",
                          "string"
                        ],
                        "name": "description",
                        "default": null,
                        "doc": "Description"
                      },
                      {
                        "type": {
                          "type": "record",
                          "name": "SchemaFieldDataType",
                          "namespace": "com.linkedin.pegasus2avro.schema",
                          "fields": [
                            {
                              "type": [
                                {
                                  "type": "record",
                                  "name": "BooleanType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Boolean field type."
                                },
                                {
                                  "type": "record",
                                  "name": "FixedType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Fixed field type."
                                },
                                {
                                  "type": "record",
                                  "name": "StringType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "String field type."
                                },
                                {
                                  "type": "record",
                                  "name": "BytesType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Bytes field type."
                                },
                                {
                                  "type": "record",
                                  "name": "NumberType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Number data type: long, integer, short, etc.."
                                },
                                {
                                  "type": "record",
                                  "name": "DateType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Date field type."
                                },
                                {
                                  "type": "record",
                                  "name": "TimeType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Time field type. This should also be used for datetimes."
                                },
                                {
                                  "type": "record",
                                  "name": "EnumType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Enum field type."
                                },
                                {
                                  "type": "record",
                                  "name": "NullType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Null field type."
                                },
                                {
                                  "type": "record",
                                  "name": "MapType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [
                                    {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "name": "keyType",
                                      "default": null,
                                      "doc": "Key type in a map"
                                    },
                                    {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "name": "valueType",
                                      "default": null,
                                      "doc": "Type of the value in a map"
                                    }
                                  ],
                                  "doc": "Map field type."
                                },
                                {
                                  "type": "record",
                                  "name": "ArrayType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [
                                    {
                                      "type": [
                                        "null",
                                        {
                                          "type": "array",
                                          "items": "string"
                                        }
                                      ],
                                      "name": "nestedType",
                                      "default": null,
                                      "doc": "List of types this array holds."
                                    }
                                  ],
                                  "doc": "Array field type."
                                },
                                {
                                  "type": "record",
                                  "name": "UnionType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [
                                    {
                                      "type": [
                                        "null",
                                        {
                                          "type": "array",
                                          "items": "string"
                                        }
                                      ],
                                      "name": "nestedTypes",
                                      "default": null,
                                      "doc": "List of types in union type."
                                    }
                                  ],
                                  "doc": "Union field type."
                                },
                                {
                                  "type": "record",
                                  "name": "RecordType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Record field type."
                                }
                              ],
                              "name": "type",
                              "doc": "Data platform specific types"
                            }
                          ],
                          "doc": "Schema field data types"
                        },
                        "name": "type",
                        "doc": "Platform independent field type of the field."
                      },
                      {
                        "type": "string",
                        "name": "nativeDataType",
                        "doc": "The native type of the field in the dataset's platform as declared by platform schema."
                      },
                      {
                        "type": "boolean",
                        "name": "recursive",
                        "default": false,
                        "doc": "There are use cases when a field in type B references type A. A field in A references field of type B. In such cases, we will mark the first field as recursive."
                      },
                      {
                        "Searchable": {
                          "/tags/*/tag": {
                            "boostScore": 0.5,
                            "fieldName": "fieldTags",
                            "fieldType": "URN_PARTIAL"
                          }
                        },
                        "type": [
                          "null",
                          {
                            "type": "record",
                            "Aspect": {
                              "name": "globalTags"
                            },
                            "name": "GlobalTags",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "fields": [
                              {
                                "type": {
                                  "type": "array",
                                  "items": {
                                    "type": "record",
                                    "name": "TagAssociation",
                                    "namespace": "com.linkedin.pegasus2avro.common",
                                    "fields": [
                                      {
                                        "Searchable": {
                                          "fieldName": "tags",
                                          "fieldType": "URN_PARTIAL",
                                          "hasValuesFieldName": "hasTags"
                                        },
                                        "java": {
                                          "class": "com.linkedin.pegasus2avro.common.urn.TagUrn"
                                        },
                                        "type": "string",
                                        "name": "tag",
                                        "doc": "Urn of the applied tag"
                                      }
                                    ],
                                    "doc": "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\npropagation parameters."
                                  }
                                },
                                "name": "tags",
                                "doc": "Tags associated with a given entity"
                              }
                            ],
                            "doc": "Tag aspect used for applying tags to an entity"
                          }
                        ],
                        "name": "globalTags",
                        "default": null,
                        "doc": "Tags associated with the field"
                      },
                      {
                        "type": [
                          "null",
                          {
                            "type": "record",
                            "Aspect": {
                              "name": "glossaryTerms"
                            },
                            "name": "GlossaryTerms",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "fields": [
                              {
                                "type": {
                                  "type": "array",
                                  "items": {
                                    "type": "record",
                                    "name": "GlossaryTermAssociation",
                                    "namespace": "com.linkedin.pegasus2avro.common",
                                    "fields": [
                                      {
                                        "java": {
                                          "class": "com.linkedin.pegasus2avro.common.urn.GlossaryTermUrn"
                                        },
                                        "type": "string",
                                        "name": "urn",
                                        "doc": "Urn of the applied glossary term"
                                      }
                                    ],
                                    "doc": "Properties of an applied glossary term."
                                  }
                                },
                                "name": "terms",
                                "doc": "The related business terms"
                              },
                              {
                                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                                "name": "auditStamp",
                                "doc": "Audit stamp containing who reported the related business term"
                              }
                            ],
                            "doc": "Related business terms information"
                          }
                        ],
                        "name": "glossaryTerms",
                        "default": null,
                        "doc": "Glossary terms associated with the field"
                      }
                    ],
                    "doc": "SchemaField to describe metadata related to dataset schema. Schema normalization rules: http://go/tms-schema"
                  }
                },
                "name": "fields",
                "doc": "Client provided a list of fields from document schema."
              },
              {
                "type": [
                  "null",
                  {
                    "type": "array",
                    "items": "string"
                  }
                ],
                "name": "primaryKeys",
                "default": null,
                "doc": "Client provided list of fields that define primary keys to access record. Field order defines hierarchical espresso keys. Empty lists indicates absence of primary key access patter. Value is a SchemaField@fieldPath."
              },
              {
                "type": [
                  "null",
                  {
                    "type": "map",
                    "values": {
                      "type": "record",
                      "name": "ForeignKeySpec",
                      "namespace": "com.linkedin.pegasus2avro.schema",
                      "fields": [
                        {
                          "type": [
                            {
                              "type": "record",
                              "name": "DatasetFieldForeignKey",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "java": {
                                    "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                                  },
                                  "type": "string",
                                  "name": "parentDataset",
                                  "doc": "dataset that stores the resource."
                                },
                                {
                                  "type": {
                                    "type": "array",
                                    "items": "string"
                                  },
                                  "name": "currentFieldPaths",
                                  "doc": "List of fields in hosting(current) SchemaMetadata that conform a foreign key. List can contain a single entry or multiple entries if several entries in hosting schema conform a foreign key in a single parent dataset."
                                },
                                {
                                  "type": "string",
                                  "name": "parentField",
                                  "doc": "SchemaField@fieldPath that uniquely identify field in parent dataset that this field references."
                                }
                              ],
                              "doc": "For non-urn based foregin keys."
                            },
                            {
                              "type": "record",
                              "name": "UrnForeignKey",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "currentFieldPath",
                                  "doc": "Field in hosting(current) SchemaMetadata."
                                }
                              ],
                              "doc": "If SchemaMetadata fields make any external references and references are of type com.linkedin.pegasus2avro.common.Urn or any children, this models can be used to mark it."
                            }
                          ],
                          "name": "foreignKey",
                          "doc": "Foreign key definition in metadata schema."
                        }
                      ],
                      "doc": "Description of a foreign key in a schema."
                    }
                  }
                ],
                "name": "foreignKeysSpecs",
                "default": null,
                "doc": "Map captures all the references schema makes to external datasets. Map key is ForeignKeySpecName typeref."
              }
            ],
            "doc": "SchemaMetadata to describe metadata related to store schema"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "editableSchemaMetadata"
            },
            "name": "EditableSchemaMetadata",
            "namespace": "com.linkedin.pegasus2avro.schema",
            "fields": [
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "created",
                "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource"
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "lastModified",
                "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created"
              },
              {
                "type": [
                  "null",
                  "com.linkedin.pegasus2avro.common.AuditStamp"
                ],
                "name": "deleted",
                "default": null,
                "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
              },
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "EditableSchemaFieldInfo",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "fieldPath",
                        "doc": "FieldPath uniquely identifying the SchemaField this metadata is associated with"
                      },
                      {
                        "Searchable": {
                          "boostScore": 0.1,
                          "fieldName": "editedFieldDescriptions",
                          "fieldType": "TEXT"
                        },
                        "type": [
                          "null",
                          "string"
                        ],
                        "name": "description",
                        "default": null,
                        "doc": "Description"
                      },
                      {
                        "Searchable": {
                          "/tags/*/tag": {
                            "boostScore": 0.5,
                            "fieldName": "editedFieldTags",
                            "fieldType": "URN_PARTIAL"
                          }
                        },
                        "type": [
                          "null",
                          "com.linkedin.pegasus2avro.common.GlobalTags"
                        ],
                        "name": "globalTags",
                        "default": null,
                        "doc": "Tags associated with the field"
                      }
                    ],
                    "doc": "SchemaField to describe metadata related to dataset schema."
                  }
                },
                "name": "editableSchemaFieldInfo",
                "doc": "Client provided a list of fields from document schema."
              }
            ],
            "doc": "EditableSchemaMetadata stores editable changes made to schema metadata. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines."
          },
          "com.linkedin.pegasus2avro.common.GlobalTags",
          "com.linkedin.pegasus2avro.common.GlossaryTerms",
          {
            "type": "record",
            "Aspect": {
              "name": "browsePaths"
            },
            "name": "BrowsePaths",
            "namespace": "com.linkedin.pegasus2avro.common",
            "fields": [
              {
                "Searchable": {
                  "/*": {
                    "fieldName": "browsePaths",
                    "fieldType": "BROWSE_PATH"
                  }
                },
                "type": {
                  "type": "array",
                  "items": "string"
                },
                "name": "paths",
                "doc": "A list of valid browse paths for the entity.\n\nBrowse paths are expected to be backslash-separated strings. For example: 'prod/snowflake/datasetName'"
              }
            ],
            "doc": "Shared aspect containing Browse Paths to be indexed for an entity."
          }
        ]
      },
      "name": "aspects",
      "doc": "The list of metadata aspects associated with the dataset. Depending on the use case, this can either be all, or a selection, of supported aspects."
    }
  ]
}
2021-09-02 17:34:55,540;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:35:13,750;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [[], SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:35:13,755;DEBUG;The datum DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [[], SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}) is not an example of the schema {
  "type": "record",
  "Entity": {
    "keyAspect": "datasetKey",
    "name": "dataset"
  },
  "name": "DatasetSnapshot",
  "namespace": "com.linkedin.pegasus2avro.metadata.snapshot",
  "fields": [
    {
      "java": {
        "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
      },
      "type": "string",
      "name": "urn",
      "doc": "URN for the entity the metadata snapshot is associated with."
    },
    {
      "type": {
        "type": "array",
        "items": [
          {
            "type": "record",
            "Aspect": {
              "name": "datasetKey"
            },
            "name": "DatasetKey",
            "namespace": "com.linkedin.pegasus2avro.metadata.key",
            "fields": [
              {
                "Searchable": {
                  "addToFilters": true,
                  "fieldType": "URN"
                },
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                },
                "type": "string",
                "name": "platform",
                "doc": "Data platform urn associated with the dataset"
              },
              {
                "Searchable": {
                  "boostScore": 10.0,
                  "enableAutocomplete": true,
                  "fieldType": "TEXT_PARTIAL"
                },
                "type": "string",
                "name": "name",
                "doc": "Dataset native name e.g. <db>.<table>, /dir/subdir/<name>, or <name>"
              },
              {
                "Searchable": {
                  "addToFilters": true,
                  "fieldType": "TEXT_PARTIAL",
                  "queryByDefault": false
                },
                "type": {
                  "type": "enum",
                  "symbolDocs": {
                    "CORP": "Designates corporation fabrics",
                    "DEV": "Designates development fabrics",
                    "EI": "Designates early-integration (staging) fabrics",
                    "PROD": "Designates production fabrics"
                  },
                  "name": "FabricType",
                  "namespace": "com.linkedin.pegasus2avro.common",
                  "symbols": [
                    "DEV",
                    "EI",
                    "PROD",
                    "CORP"
                  ],
                  "doc": "Fabric group type"
                },
                "name": "origin",
                "doc": "Fabric type where dataset belongs to or where it was generated."
              }
            ],
            "doc": "Key for a Dataset"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "datasetProperties"
            },
            "name": "DatasetProperties",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "type": {
                  "type": "map",
                  "values": "string"
                },
                "name": "customProperties",
                "default": {},
                "doc": "Custom property bag."
              },
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.url.Url",
                  "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "externalUrl",
                "default": null,
                "doc": "URL where the reference exist"
              },
              {
                "Searchable": {
                  "fieldType": "TEXT",
                  "hasValuesFieldName": "hasDescription"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "description",
                "default": null,
                "doc": "Documentation of the dataset"
              },
              {
                "java": {
                  "class": "java.net.URI"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "uri",
                "default": null,
                "doc": "The abstracted URI such as hdfs:///data/tracking/PageViewEvent, file:///dir/file_name. Uri should not include any environment specific properties. Some datasets might not have a standardized uri, which makes this field optional (i.e. kafka topic)."
              },
              {
                "type": {
                  "type": "array",
                  "items": "string"
                },
                "name": "tags",
                "default": [],
                "doc": "[Legacy] Unstructured tags for the dataset. Structured tags can be applied via the `GlobalTags` aspect."
              }
            ],
            "doc": "Properties associated with a Dataset"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "editableDatasetProperties"
            },
            "name": "EditableDatasetProperties",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "type": {
                  "type": "record",
                  "name": "AuditStamp",
                  "namespace": "com.linkedin.pegasus2avro.common",
                  "fields": [
                    {
                      "type": "long",
                      "name": "time",
                      "doc": "When did the resource/association/sub-resource move into the specific lifecycle stage represented by this AuditEvent."
                    },
                    {
                      "java": {
                        "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                      },
                      "type": "string",
                      "name": "actor",
                      "doc": "The entity (e.g. a member URN) which will be credited for moving the resource/association/sub-resource into the specific lifecycle stage. It is also the one used to authorize the change."
                    },
                    {
                      "java": {
                        "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                      },
                      "type": [
                        "null",
                        "string"
                      ],
                      "name": "impersonator",
                      "default": null,
                      "doc": "The entity (e.g. a service URN) which performs the change on behalf of the Actor and must be authorized to act as the Actor."
                    }
                  ],
                  "doc": "Data captured on a resource/association/sub-resource level giving insight into when that resource/association/sub-resource moved into a particular lifecycle stage, and who acted to move it into that specific lifecycle stage."
                },
                "name": "created",
                "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource"
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "lastModified",
                "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created"
              },
              {
                "type": [
                  "null",
                  "com.linkedin.pegasus2avro.common.AuditStamp"
                ],
                "name": "deleted",
                "default": null,
                "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
              },
              {
                "Searchable": {
                  "fieldName": "editedDescription",
                  "fieldType": "TEXT"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "description",
                "default": null,
                "doc": "Documentation of the dataset"
              }
            ],
            "doc": "EditableDatasetProperties stores editable changes made to dataset properties. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "datasetDeprecation"
            },
            "name": "DatasetDeprecation",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "Searchable": {
                  "fieldType": "BOOLEAN",
                  "weightsPerFieldValue": {
                    "true": 0.5
                  }
                },
                "type": "boolean",
                "name": "deprecated",
                "doc": "Whether the dataset is deprecated by owner."
              },
              {
                "type": [
                  "null",
                  "long"
                ],
                "name": "decommissionTime",
                "default": null,
                "doc": "The time user plan to decommission this dataset."
              },
              {
                "type": "string",
                "name": "note",
                "doc": "Additional information about the dataset deprecation plan, such as the wiki, doc, RB."
              },
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "actor",
                "default": null,
                "doc": "The corpuser URN which will be credited for modifying this deprecation content."
              }
            ],
            "doc": "Dataset deprecation status"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "datasetUpstreamLineage"
            },
            "name": "DatasetUpstreamLineage",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "DatasetFieldMapping",
                    "namespace": "com.linkedin.pegasus2avro.dataset",
                    "fields": [
                      {
                        "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                        "name": "created",
                        "doc": "Audit stamp containing who reported the field mapping and when"
                      },
                      {
                        "type": [
                          {
                            "type": "enum",
                            "symbolDocs": {
                              "BLACKBOX": "Field transformation expressed as unknown black box function.",
                              "IDENTITY": "Field transformation expressed as Identity function."
                            },
                            "name": "TransformationType",
                            "namespace": "com.linkedin.pegasus2avro.common.fieldtransformer",
                            "symbols": [
                              "BLACKBOX",
                              "IDENTITY"
                            ],
                            "doc": "Type of the transformation involved in generating destination fields from source fields."
                          },
                          {
                            "type": "record",
                            "name": "UDFTransformer",
                            "namespace": "com.linkedin.pegasus2avro.common.fieldtransformer",
                            "fields": [
                              {
                                "type": "string",
                                "name": "udf",
                                "doc": "A UDF mentioning how the source fields got transformed to destination field. This is the FQCN(Fully Qualified Class Name) of the udf."
                              }
                            ],
                            "doc": "Field transformation expressed in UDF"
                          }
                        ],
                        "name": "transformation",
                        "doc": "Transfomration function between the fields involved"
                      },
                      {
                        "type": {
                          "type": "array",
                          "items": [
                            "string"
                          ]
                        },
                        "name": "sourceFields",
                        "doc": "Source fields from which the fine grained lineage is derived"
                      },
                      {
                        "java": {
                          "class": "com.linkedin.pegasus2avro.common.urn.DatasetFieldUrn"
                        },
                        "type": "string",
                        "name": "destinationField",
                        "doc": "Destination field which is derived from source fields"
                      }
                    ],
                    "doc": "Representation of mapping between fields in source dataset to the field in destination dataset"
                  }
                },
                "name": "fieldMappings",
                "doc": "Upstream to downstream field level lineage mappings"
              }
            ],
            "doc": "Fine Grained upstream lineage for fields in a dataset"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "upstreamLineage"
            },
            "name": "UpstreamLineage",
            "namespace": "com.linkedin.pegasus2avro.dataset",
            "fields": [
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "Upstream",
                    "namespace": "com.linkedin.pegasus2avro.dataset",
                    "fields": [
                      {
                        "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                        "name": "auditStamp",
                        "doc": "Audit stamp containing who reported the lineage and when"
                      },
                      {
                        "Relationship": {
                          "entityTypes": [
                            "dataset"
                          ],
                          "name": "DownstreamOf"
                        },
                        "Searchable": {
                          "fieldName": "upstreams",
                          "fieldType": "URN",
                          "queryByDefault": false
                        },
                        "java": {
                          "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                        },
                        "type": "string",
                        "name": "dataset",
                        "doc": "The upstream dataset the lineage points to"
                      },
                      {
                        "type": {
                          "type": "enum",
                          "symbolDocs": {
                            "COPY": "Direct copy without modification",
                            "TRANSFORMED": "Transformed data with modification (format or content change)",
                            "VIEW": "Represents a view defined on the sources e.g. Hive view defined on underlying hive tables or a Hive table pointing to a HDFS dataset or DALI view defined on multiple sources"
                          },
                          "name": "DatasetLineageType",
                          "namespace": "com.linkedin.pegasus2avro.dataset",
                          "symbols": [
                            "COPY",
                            "TRANSFORMED",
                            "VIEW"
                          ],
                          "doc": "The various types of supported dataset lineage"
                        },
                        "name": "type",
                        "doc": "The type of the lineage"
                      }
                    ],
                    "doc": "Upstream lineage information about a dataset including the source reporting the lineage"
                  }
                },
                "name": "upstreams",
                "doc": "List of upstream dataset lineage information"
              }
            ],
            "doc": "Upstream lineage of a dataset"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "institutionalMemory"
            },
            "name": "InstitutionalMemory",
            "namespace": "com.linkedin.pegasus2avro.common",
            "fields": [
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "InstitutionalMemoryMetadata",
                    "namespace": "com.linkedin.pegasus2avro.common",
                    "fields": [
                      {
                        "java": {
                          "class": "com.linkedin.pegasus2avro.common.url.Url",
                          "coercerClass": "com.linkedin.pegasus2avro.common.url.UrlCoercer"
                        },
                        "type": "string",
                        "name": "url",
                        "doc": "Link to an engineering design document or a wiki page."
                      },
                      {
                        "type": "string",
                        "name": "description",
                        "doc": "Description of the link."
                      },
                      {
                        "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                        "name": "createStamp",
                        "doc": "Audit stamp associated with creation of this record"
                      }
                    ],
                    "doc": "Metadata corresponding to a record of institutional memory."
                  }
                },
                "name": "elements",
                "doc": "List of records that represent institutional memory of an entity. Each record consists of a link, description, creator and timestamps associated with that record."
              }
            ],
            "doc": "Institutional memory of an entity. This is a way to link to relevant documentation and provide description of the documentation. Institutional or tribal knowledge is very important for users to leverage the entity."
          },
          {
            "type": "record",
            "Aspect": {
              "name": "ownership"
            },
            "name": "Ownership",
            "namespace": "com.linkedin.pegasus2avro.common",
            "fields": [
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "Owner",
                    "namespace": "com.linkedin.pegasus2avro.common",
                    "fields": [
                      {
                        "Relationship": {
                          "entityTypes": [
                            "corpUser",
                            "corpGroup"
                          ],
                          "name": "OwnedBy"
                        },
                        "Searchable": {
                          "fieldName": "owners",
                          "fieldType": "URN",
                          "hasValuesFieldName": "hasOwners",
                          "queryByDefault": false
                        },
                        "java": {
                          "class": "com.linkedin.pegasus2avro.common.urn.Urn"
                        },
                        "type": "string",
                        "name": "owner",
                        "doc": "Owner URN, e.g. urn:li:corpuser:ldap, urn:li:corpGroup:group_name, and urn:li:multiProduct:mp_name\n(Caveat: only corpuser is currently supported in the frontend.)"
                      },
                      {
                        "type": {
                          "type": "enum",
                          "symbolDocs": {
                            "CONSUMER": "A person, group, or service that consumes the data",
                            "DATAOWNER": "A person or group that is owning the data",
                            "DELEGATE": "A person or a group that overseas the operation, e.g. a DBA or SRE.",
                            "DEVELOPER": "A person or group that is in charge of developing the code",
                            "PRODUCER": "A person, group, or service that produces/generates the data",
                            "STAKEHOLDER": "A person or a group that has direct business interest"
                          },
                          "name": "OwnershipType",
                          "namespace": "com.linkedin.pegasus2avro.common",
                          "symbols": [
                            "DEVELOPER",
                            "DATAOWNER",
                            "DELEGATE",
                            "PRODUCER",
                            "CONSUMER",
                            "STAKEHOLDER"
                          ],
                          "doc": "Owner category or owner role"
                        },
                        "name": "type",
                        "doc": "The type of the ownership"
                      },
                      {
                        "type": [
                          "null",
                          {
                            "type": "record",
                            "name": "OwnershipSource",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "fields": [
                              {
                                "type": {
                                  "type": "enum",
                                  "symbolDocs": {
                                    "AUDIT": "Auditing system or audit logs",
                                    "DATABASE": "Database, e.g. GRANTS table",
                                    "FILE_SYSTEM": "File system, e.g. file/directory owner",
                                    "ISSUE_TRACKING_SYSTEM": "Issue tracking system, e.g. Jira",
                                    "MANUAL": "Manually provided by a user",
                                    "OTHER": "Other sources",
                                    "SERVICE": "Other ownership-like service, e.g. Nuage, ACL service etc",
                                    "SOURCE_CONTROL": "SCM system, e.g. GIT, SVN"
                                  },
                                  "name": "OwnershipSourceType",
                                  "namespace": "com.linkedin.pegasus2avro.common",
                                  "symbols": [
                                    "AUDIT",
                                    "DATABASE",
                                    "FILE_SYSTEM",
                                    "ISSUE_TRACKING_SYSTEM",
                                    "MANUAL",
                                    "SERVICE",
                                    "SOURCE_CONTROL",
                                    "OTHER"
                                  ]
                                },
                                "name": "type",
                                "doc": "The type of the source"
                              },
                              {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "name": "url",
                                "default": null,
                                "doc": "A reference URL for the source"
                              }
                            ],
                            "doc": "Source/provider of the ownership information"
                          }
                        ],
                        "name": "source",
                        "default": null,
                        "doc": "Source information for the ownership"
                      }
                    ],
                    "doc": "Ownership information"
                  }
                },
                "name": "owners",
                "doc": "List of owners of the entity."
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "lastModified",
                "doc": "Audit stamp containing who last modified the record and when."
              }
            ],
            "doc": "Ownership information of an entity."
          },
          {
            "type": "record",
            "Aspect": {
              "name": "status"
            },
            "name": "Status",
            "namespace": "com.linkedin.pegasus2avro.common",
            "fields": [
              {
                "Searchable": {
                  "fieldType": "BOOLEAN"
                },
                "type": "boolean",
                "name": "removed",
                "default": false,
                "doc": "whether the entity is removed or not"
              }
            ],
            "doc": "The status metadata of an entity, e.g. dataset, metric, feature, etc."
          },
          {
            "type": "record",
            "Aspect": {
              "name": "schemaMetadata"
            },
            "name": "SchemaMetadata",
            "namespace": "com.linkedin.pegasus2avro.schema",
            "fields": [
              {
                "validate": {
                  "strlen": {
                    "max": 500,
                    "min": 1
                  }
                },
                "type": "string",
                "name": "schemaName",
                "doc": "Schema name e.g. PageViewEvent, identity.Profile, ams.account_management_tracking"
              },
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DataPlatformUrn"
                },
                "type": "string",
                "name": "platform",
                "doc": "Standardized platform urn where schema is defined. The data platform Urn (urn:li:platform:{platform_name})"
              },
              {
                "type": "long",
                "name": "version",
                "doc": "Every change to SchemaMetadata in the resource results in a new version. Version is server assigned. This version is differ from platform native schema version."
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "created",
                "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource"
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "lastModified",
                "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created"
              },
              {
                "type": [
                  "null",
                  "com.linkedin.pegasus2avro.common.AuditStamp"
                ],
                "name": "deleted",
                "default": null,
                "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
              },
              {
                "java": {
                  "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                },
                "type": [
                  "null",
                  "string"
                ],
                "name": "dataset",
                "default": null,
                "doc": "Dataset this schema metadata is associated with."
              },
              {
                "type": [
                  "null",
                  "string"
                ],
                "name": "cluster",
                "default": null,
                "doc": "The cluster this schema metadata resides from"
              },
              {
                "type": "string",
                "name": "hash",
                "doc": "the SHA1 hash of the schema content"
              },
              {
                "type": [
                  {
                    "type": "record",
                    "name": "EspressoSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "documentSchema",
                        "doc": "The native espresso document schema."
                      },
                      {
                        "type": "string",
                        "name": "tableSchema",
                        "doc": "The espresso table schema definition."
                      }
                    ],
                    "doc": "Schema text of an espresso table schema."
                  },
                  {
                    "type": "record",
                    "name": "OracleDDL",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "tableSchema",
                        "doc": "The native schema in the dataset's platform. This is a human readable (json blob) table schema."
                      }
                    ],
                    "doc": "Schema holder for oracle data definition language that describes an oracle table."
                  },
                  {
                    "type": "record",
                    "name": "MySqlDDL",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "tableSchema",
                        "doc": "The native schema in the dataset's platform. This is a human readable (json blob) table schema."
                      }
                    ],
                    "doc": "Schema holder for MySql data definition language that describes an MySql table."
                  },
                  {
                    "type": "record",
                    "name": "PrestoDDL",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "rawSchema",
                        "doc": "The raw schema in the dataset's platform. This includes the DDL and the columns extracted from DDL."
                      }
                    ],
                    "doc": "Schema holder for presto data definition language that describes a presto view."
                  },
                  {
                    "type": "record",
                    "name": "KafkaSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "documentSchema",
                        "doc": "The native kafka document schema. This is a human readable avro document schema."
                      }
                    ],
                    "doc": "Schema holder for kafka schema."
                  },
                  {
                    "type": "record",
                    "name": "BinaryJsonSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "schema",
                        "doc": "The native schema text for binary JSON file format."
                      }
                    ],
                    "doc": "Schema text of binary JSON schema."
                  },
                  {
                    "type": "record",
                    "name": "OrcSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "schema",
                        "doc": "The native schema for ORC file format."
                      }
                    ],
                    "doc": "Schema text of an ORC schema."
                  },
                  {
                    "type": "record",
                    "name": "Schemaless",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [],
                    "doc": "The dataset has no specific schema associated with it"
                  },
                  {
                    "type": "record",
                    "name": "KeyValueSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "keySchema",
                        "doc": "The raw schema for the key in the key-value store."
                      },
                      {
                        "type": "string",
                        "name": "valueSchema",
                        "doc": "The raw schema for the value in the key-value store."
                      }
                    ],
                    "doc": "Schema text of a key-value store schema."
                  },
                  {
                    "type": "record",
                    "name": "OtherSchema",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "rawSchema",
                        "doc": "The native schema in the dataset's platform."
                      }
                    ],
                    "doc": "Schema holder for undefined schema types."
                  }
                ],
                "name": "platformSchema",
                "doc": "The native schema in the dataset's platform."
              },
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "SchemaField",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "Searchable": {
                          "fieldName": "fieldPaths",
                          "fieldType": "TEXT_PARTIAL"
                        },
                        "type": "string",
                        "name": "fieldPath",
                        "doc": "Flattened name of the field. Field is computed from jsonPath field. For data translation rules refer to wiki page above."
                      },
                      {
                        "type": [
                          "null",
                          "string"
                        ],
                        "name": "jsonPath",
                        "default": null,
                        "doc": "Flattened name of a field in JSON Path notation."
                      },
                      {
                        "type": "boolean",
                        "name": "nullable",
                        "default": false,
                        "doc": "Indicates if this field is optional or nullable"
                      },
                      {
                        "Searchable": {
                          "boostScore": 0.1,
                          "fieldName": "fieldDescriptions",
                          "fieldType": "TEXT"
                        },
                        "type": [
                          "null",
                          "string"
                        ],
                        "name": "description",
                        "default": null,
                        "doc": "Description"
                      },
                      {
                        "type": {
                          "type": "record",
                          "name": "SchemaFieldDataType",
                          "namespace": "com.linkedin.pegasus2avro.schema",
                          "fields": [
                            {
                              "type": [
                                {
                                  "type": "record",
                                  "name": "BooleanType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Boolean field type."
                                },
                                {
                                  "type": "record",
                                  "name": "FixedType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Fixed field type."
                                },
                                {
                                  "type": "record",
                                  "name": "StringType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "String field type."
                                },
                                {
                                  "type": "record",
                                  "name": "BytesType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Bytes field type."
                                },
                                {
                                  "type": "record",
                                  "name": "NumberType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Number data type: long, integer, short, etc.."
                                },
                                {
                                  "type": "record",
                                  "name": "DateType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Date field type."
                                },
                                {
                                  "type": "record",
                                  "name": "TimeType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Time field type. This should also be used for datetimes."
                                },
                                {
                                  "type": "record",
                                  "name": "EnumType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Enum field type."
                                },
                                {
                                  "type": "record",
                                  "name": "NullType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Null field type."
                                },
                                {
                                  "type": "record",
                                  "name": "MapType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [
                                    {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "name": "keyType",
                                      "default": null,
                                      "doc": "Key type in a map"
                                    },
                                    {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "name": "valueType",
                                      "default": null,
                                      "doc": "Type of the value in a map"
                                    }
                                  ],
                                  "doc": "Map field type."
                                },
                                {
                                  "type": "record",
                                  "name": "ArrayType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [
                                    {
                                      "type": [
                                        "null",
                                        {
                                          "type": "array",
                                          "items": "string"
                                        }
                                      ],
                                      "name": "nestedType",
                                      "default": null,
                                      "doc": "List of types this array holds."
                                    }
                                  ],
                                  "doc": "Array field type."
                                },
                                {
                                  "type": "record",
                                  "name": "UnionType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [
                                    {
                                      "type": [
                                        "null",
                                        {
                                          "type": "array",
                                          "items": "string"
                                        }
                                      ],
                                      "name": "nestedTypes",
                                      "default": null,
                                      "doc": "List of types in union type."
                                    }
                                  ],
                                  "doc": "Union field type."
                                },
                                {
                                  "type": "record",
                                  "name": "RecordType",
                                  "namespace": "com.linkedin.pegasus2avro.schema",
                                  "fields": [],
                                  "doc": "Record field type."
                                }
                              ],
                              "name": "type",
                              "doc": "Data platform specific types"
                            }
                          ],
                          "doc": "Schema field data types"
                        },
                        "name": "type",
                        "doc": "Platform independent field type of the field."
                      },
                      {
                        "type": "string",
                        "name": "nativeDataType",
                        "doc": "The native type of the field in the dataset's platform as declared by platform schema."
                      },
                      {
                        "type": "boolean",
                        "name": "recursive",
                        "default": false,
                        "doc": "There are use cases when a field in type B references type A. A field in A references field of type B. In such cases, we will mark the first field as recursive."
                      },
                      {
                        "Searchable": {
                          "/tags/*/tag": {
                            "boostScore": 0.5,
                            "fieldName": "fieldTags",
                            "fieldType": "URN_PARTIAL"
                          }
                        },
                        "type": [
                          "null",
                          {
                            "type": "record",
                            "Aspect": {
                              "name": "globalTags"
                            },
                            "name": "GlobalTags",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "fields": [
                              {
                                "type": {
                                  "type": "array",
                                  "items": {
                                    "type": "record",
                                    "name": "TagAssociation",
                                    "namespace": "com.linkedin.pegasus2avro.common",
                                    "fields": [
                                      {
                                        "Searchable": {
                                          "fieldName": "tags",
                                          "fieldType": "URN_PARTIAL",
                                          "hasValuesFieldName": "hasTags"
                                        },
                                        "java": {
                                          "class": "com.linkedin.pegasus2avro.common.urn.TagUrn"
                                        },
                                        "type": "string",
                                        "name": "tag",
                                        "doc": "Urn of the applied tag"
                                      }
                                    ],
                                    "doc": "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\npropagation parameters."
                                  }
                                },
                                "name": "tags",
                                "doc": "Tags associated with a given entity"
                              }
                            ],
                            "doc": "Tag aspect used for applying tags to an entity"
                          }
                        ],
                        "name": "globalTags",
                        "default": null,
                        "doc": "Tags associated with the field"
                      },
                      {
                        "type": [
                          "null",
                          {
                            "type": "record",
                            "Aspect": {
                              "name": "glossaryTerms"
                            },
                            "name": "GlossaryTerms",
                            "namespace": "com.linkedin.pegasus2avro.common",
                            "fields": [
                              {
                                "type": {
                                  "type": "array",
                                  "items": {
                                    "type": "record",
                                    "name": "GlossaryTermAssociation",
                                    "namespace": "com.linkedin.pegasus2avro.common",
                                    "fields": [
                                      {
                                        "java": {
                                          "class": "com.linkedin.pegasus2avro.common.urn.GlossaryTermUrn"
                                        },
                                        "type": "string",
                                        "name": "urn",
                                        "doc": "Urn of the applied glossary term"
                                      }
                                    ],
                                    "doc": "Properties of an applied glossary term."
                                  }
                                },
                                "name": "terms",
                                "doc": "The related business terms"
                              },
                              {
                                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                                "name": "auditStamp",
                                "doc": "Audit stamp containing who reported the related business term"
                              }
                            ],
                            "doc": "Related business terms information"
                          }
                        ],
                        "name": "glossaryTerms",
                        "default": null,
                        "doc": "Glossary terms associated with the field"
                      }
                    ],
                    "doc": "SchemaField to describe metadata related to dataset schema. Schema normalization rules: http://go/tms-schema"
                  }
                },
                "name": "fields",
                "doc": "Client provided a list of fields from document schema."
              },
              {
                "type": [
                  "null",
                  {
                    "type": "array",
                    "items": "string"
                  }
                ],
                "name": "primaryKeys",
                "default": null,
                "doc": "Client provided list of fields that define primary keys to access record. Field order defines hierarchical espresso keys. Empty lists indicates absence of primary key access patter. Value is a SchemaField@fieldPath."
              },
              {
                "type": [
                  "null",
                  {
                    "type": "map",
                    "values": {
                      "type": "record",
                      "name": "ForeignKeySpec",
                      "namespace": "com.linkedin.pegasus2avro.schema",
                      "fields": [
                        {
                          "type": [
                            {
                              "type": "record",
                              "name": "DatasetFieldForeignKey",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "java": {
                                    "class": "com.linkedin.pegasus2avro.common.urn.DatasetUrn"
                                  },
                                  "type": "string",
                                  "name": "parentDataset",
                                  "doc": "dataset that stores the resource."
                                },
                                {
                                  "type": {
                                    "type": "array",
                                    "items": "string"
                                  },
                                  "name": "currentFieldPaths",
                                  "doc": "List of fields in hosting(current) SchemaMetadata that conform a foreign key. List can contain a single entry or multiple entries if several entries in hosting schema conform a foreign key in a single parent dataset."
                                },
                                {
                                  "type": "string",
                                  "name": "parentField",
                                  "doc": "SchemaField@fieldPath that uniquely identify field in parent dataset that this field references."
                                }
                              ],
                              "doc": "For non-urn based foregin keys."
                            },
                            {
                              "type": "record",
                              "name": "UrnForeignKey",
                              "namespace": "com.linkedin.pegasus2avro.schema",
                              "fields": [
                                {
                                  "type": "string",
                                  "name": "currentFieldPath",
                                  "doc": "Field in hosting(current) SchemaMetadata."
                                }
                              ],
                              "doc": "If SchemaMetadata fields make any external references and references are of type com.linkedin.pegasus2avro.common.Urn or any children, this models can be used to mark it."
                            }
                          ],
                          "name": "foreignKey",
                          "doc": "Foreign key definition in metadata schema."
                        }
                      ],
                      "doc": "Description of a foreign key in a schema."
                    }
                  }
                ],
                "name": "foreignKeysSpecs",
                "default": null,
                "doc": "Map captures all the references schema makes to external datasets. Map key is ForeignKeySpecName typeref."
              }
            ],
            "doc": "SchemaMetadata to describe metadata related to store schema"
          },
          {
            "type": "record",
            "Aspect": {
              "name": "editableSchemaMetadata"
            },
            "name": "EditableSchemaMetadata",
            "namespace": "com.linkedin.pegasus2avro.schema",
            "fields": [
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "created",
                "doc": "An AuditStamp corresponding to the creation of this resource/association/sub-resource"
              },
              {
                "type": "com.linkedin.pegasus2avro.common.AuditStamp",
                "name": "lastModified",
                "doc": "An AuditStamp corresponding to the last modification of this resource/association/sub-resource. If no modification has happened since creation, lastModified should be the same as created"
              },
              {
                "type": [
                  "null",
                  "com.linkedin.pegasus2avro.common.AuditStamp"
                ],
                "name": "deleted",
                "default": null,
                "doc": "An AuditStamp corresponding to the deletion of this resource/association/sub-resource. Logically, deleted MUST have a later timestamp than creation. It may or may not have the same time as lastModified depending upon the resource/association/sub-resource semantics."
              },
              {
                "type": {
                  "type": "array",
                  "items": {
                    "type": "record",
                    "name": "EditableSchemaFieldInfo",
                    "namespace": "com.linkedin.pegasus2avro.schema",
                    "fields": [
                      {
                        "type": "string",
                        "name": "fieldPath",
                        "doc": "FieldPath uniquely identifying the SchemaField this metadata is associated with"
                      },
                      {
                        "Searchable": {
                          "boostScore": 0.1,
                          "fieldName": "editedFieldDescriptions",
                          "fieldType": "TEXT"
                        },
                        "type": [
                          "null",
                          "string"
                        ],
                        "name": "description",
                        "default": null,
                        "doc": "Description"
                      },
                      {
                        "Searchable": {
                          "/tags/*/tag": {
                            "boostScore": 0.5,
                            "fieldName": "editedFieldTags",
                            "fieldType": "URN_PARTIAL"
                          }
                        },
                        "type": [
                          "null",
                          "com.linkedin.pegasus2avro.common.GlobalTags"
                        ],
                        "name": "globalTags",
                        "default": null,
                        "doc": "Tags associated with the field"
                      }
                    ],
                    "doc": "SchemaField to describe metadata related to dataset schema."
                  }
                },
                "name": "editableSchemaFieldInfo",
                "doc": "Client provided a list of fields from document schema."
              }
            ],
            "doc": "EditableSchemaMetadata stores editable changes made to schema metadata. This separates changes made from\ningestion pipelines and edits in the UI to avoid accidental overwrites of user-provided data by ingestion pipelines."
          },
          "com.linkedin.pegasus2avro.common.GlobalTags",
          "com.linkedin.pegasus2avro.common.GlossaryTerms",
          {
            "type": "record",
            "Aspect": {
              "name": "browsePaths"
            },
            "name": "BrowsePaths",
            "namespace": "com.linkedin.pegasus2avro.common",
            "fields": [
              {
                "Searchable": {
                  "/*": {
                    "fieldName": "browsePaths",
                    "fieldType": "BROWSE_PATH"
                  }
                },
                "type": {
                  "type": "array",
                  "items": "string"
                },
                "name": "paths",
                "doc": "A list of valid browse paths for the entity.\n\nBrowse paths are expected to be backslash-separated strings. For example: 'prod/snowflake/datasetName'"
              }
            ],
            "doc": "Shared aspect containing Browse Paths to be indexed for an entity."
          }
        ]
      },
      "name": "aspects",
      "doc": "The list of metadata aspects associated with the dataset. Depending on the use case, this can either be all, or a selection, of supported aspects."
    }
  ]
}
2021-09-02 17:35:13,840;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:35:44,425;INFO;started!
2021-09-02 17:35:48,062;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:35:48,102;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:36:15,484;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:36:15,522;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:37:11,351;INFO;started!
2021-09-02 17:37:16,374;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:37:16,423;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:38:04,501;INFO;started!
2021-09-02 17:38:12,878;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:38:12,928;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:38:21,807;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:38:21,842;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:40:15,232;INFO;started!
2021-09-02 17:40:42,133;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:40:42,192;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:42:28,558;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:42:28,602;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:42:58,860;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:42:58,901;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 17:49:08,946;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:49:08,991;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:49:09,010;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:49:09,049;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:50:28,926;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:50:28,958;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:50:28,972;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:50:29,026;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:52:30,126;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:52:30,171;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:52:30,189;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:52:30,236;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:52:30,282;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:das'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:52:30,332;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:55:16,778;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:55:16,817;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:55:16,839;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:55:16,876;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:55:16,909;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:55:16,953;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 17:55:16,976;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:55:17,025;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:55:17,048;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:55:17,088;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:55:17,104;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:55:17,154;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 17:55:17,175;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}, {'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 17:55:17,211;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:00:31,560;INFO;started!
2021-09-02 18:00:50,059;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:00:50,094;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:00:50,116;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:00:50,157;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:00:50,177;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:00:50,228;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 18:00:50,246;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:00:50,292;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:00:50,314;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:00:50,347;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:00:50,362;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:00:50,399;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:00:50,421;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:00:50,470;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:13,730;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:13,759;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:13,764;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:13,805;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:13,832;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:13,867;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 18:01:13,881;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:13,945;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:13,962;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:13,999;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:14,017;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:14,060;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:14,079;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:14,115;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:34,008;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:34,037;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:34,043;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:34,076;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:34,110;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:34,132;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 18:01:34,151;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:34,200;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:34,216;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:34,239;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:34,264;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:34,295;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:01:34,314;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:01:34,344;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:02:46,119;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}, {'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:02:46,163;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:02:46,182;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:02:46,219;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:02:46,223;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:02:46,257;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 18:02:46,286;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}, {'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:02:46,329;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:02:46,348;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:02:46,375;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:02:46,393;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:02:46,443;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:02:46,468;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:02:46,502;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:03:54,478;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:03:54,513;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:03:54,529;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:03:54,559;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:09:06,600;INFO;started!
2021-09-02 18:09:22,138;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:09:22,184;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:09:39,159;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:09:39,197;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:09:45,694;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:09:45,740;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:10:08,937;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:10:08,974;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:10:46,955;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:10:46,995;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:10:47,015;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:10:47,044;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:10:47,061;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:10:47,102;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:10:47,131;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:10:47,168;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:10:47,189;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:10:47,229;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:10:47,247;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:10:47,278;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:13:09,695;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:13:09,727;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:13:09,747;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:13:09,788;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:13:09,808;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:13:09,846;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:13:09,869;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:13:09,912;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:13:09,931;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:13:09,969;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:13:09,987;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:13:10,018;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:17:41,209;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:17:41,243;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:17:41,261;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:17:41,304;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:17:41,324;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:17:41,363;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 18:17:41,381;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:17:41,416;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:17:41,436;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:17:41,468;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:17:41,488;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:17:41,522;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:17:41,537;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:17:41,570;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:18:05,751;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:18:05,789;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:20:15,949;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:20:15,989;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:20:49,641;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:20:49,682;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:20:49,699;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:20:49,739;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:20:49,758;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:20:49,796;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 18:20:49,813;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:20:49,855;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:20:49,877;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:20:49,925;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:20:49,952;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:20:50,002;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:20:50,026;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 18:20:50,076;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 18:50:06,962;INFO;started!
2021-09-02 19:11:26,770;INFO;started!
2021-09-02 19:11:33,035;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:a'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:11:33,070;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:11:40,539;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:11:40,570;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:12:09,247;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:a'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:12:09,286;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:12:09,307;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:b'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:12:09,338;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:12:09,567;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:e'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:d'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:12:09,618;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:12:09,639;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:f'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:12:09,679;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:12:09,701;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:g'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:h'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:12:09,735;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:12:09,757;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:c'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:12:09,791;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 19:12:09,813;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:i'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:12:09,855;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:09,155;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:asd'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:a'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:09,190;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:24,810;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:g'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:h'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:24,844;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:34,920;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:a'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:34,955;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:48,575;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:48,612;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:48,632;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:48,662;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:48,680;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:48,713;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:48,732;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:48,756;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:48,773;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:48,811;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:48,832;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:48,865;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:13:48,883;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:13:48,909;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 19:46:05,690;INFO;started!
2021-09-02 19:46:33,180;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:33,234;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:46:33,252;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:33,291;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 19:46:33,304;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:33,344;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:46:33,361;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:33,400;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:46:59,413;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:a'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:59,462;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:46:59,476;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:59,506;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:46:59,521;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:59,550;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:46:59,565;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:c'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:59,600;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 19:46:59,618;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:j'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:59,661;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:46:59,682;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:l'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:59,725;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:46:59,743;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:h'}]}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:46:59,779;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:47:48,525;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:47:48,561;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:47:48,574;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:47:48,602;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 19:47:48,617;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleKafkaSchema', 'platform': 'urn:li:dataPlatform:kafka', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleKafkaSchema","namespace":"com.linkedin.dataset","doc":"Sample Kafka dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo_2', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:NeedsDocumentation'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:47:48,647;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:kafka,SampleKafkaDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:47:48,661;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'event_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of your logging event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'event_data', 'jsonPath': None, 'nullable': False, 'description': 'Data of your event', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'timestamp', 'jsonPath': None, 'nullable': False, 'description': 'TS the event was ingested', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:47:48,693;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,logging_events,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:47:48,708;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:47:48,737;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:48:09,225;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:a'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:09,265;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:48:09,280;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:b'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:09,318;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:48:09,338;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:c'}]}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:09,387;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 19:48:09,610;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:d'}]}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:09,651;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:48:09,669;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:e'}]}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:09,700;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:48:21,457;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'test01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:21,498;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_deleted,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:48:32,506;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'field_foo', 'jsonPath': None, 'nullable': False, 'description': 'Foo field description01', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'field_bar', 'jsonPath': None, 'nullable': False, 'description': 'Bar field description', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:32,535;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,SampleHiveDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:48:32,548;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'OtherSchema', 'platform': 'urn:li:dataPlatform:csv', 'version': 0, 'created': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1630504353997, 'actor': 'urn:li:corpuser:34552', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': OtherSchemaClass({'rawSchema': ''}), 'fields': [SchemaFieldClass({'fieldPath': 'field1', 'jsonPath': None, 'nullable': False, 'description': 'col1', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'string', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:32,581;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:csv,dataset_name_1630504353977,PROD) requested_by urn:li:corpuser:34552
2021-09-02 19:48:32,596;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHdfsSchema', 'platform': 'urn:li:dataPlatform:hdfs', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHdfsSchema","namespace":"com.linkedin.dataset","doc":"Sample HDFS dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'shipment_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': GlobalTagsClass({'tags': [{'tag': 'urn:li:tag:Legacy'}]}), 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.date', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info date description', 'type': SchemaFieldDataTypeClass({'type': DateTypeClass({})}), 'nativeDataType': 'Date', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.target', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info target description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'text', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.destination', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info destination description', 'type': SchemaFieldDataTypeClass({'type': StringTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info description', 'type': SchemaFieldDataTypeClass({'type': RecordTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lat', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lat', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'shipment_info.geo_info.lng', 'jsonPath': None, 'nullable': False, 'description': 'Shipment info geo_info lng', 'type': SchemaFieldDataTypeClass({'type': NumberTypeClass({})}), 'nativeDataType': 'float', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:32,626;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hdfs,SampleHdfsDataset,PROD) requested_by urn:li:corpuser:jdoe
2021-09-02 19:48:32,641;ERROR;MetadataChangeEventClass({'auditHeader': None, 'proposedSnapshot': DatasetSnapshotClass({'urn': 'urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD)', 'aspects': [GlobalTagsClass({'tags': []}), SchemaMetadataClass({'schemaName': 'SampleHiveSchema', 'platform': 'urn:li:dataPlatform:hive', 'version': 0, 'created': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'lastModified': AuditStampClass({'time': 1581407189000, 'actor': 'urn:li:corpuser:jdoe', 'impersonator': None}), 'deleted': None, 'dataset': None, 'cluster': None, 'hash': '', 'platformSchema': KafkaSchemaClass({'documentSchema': '{"type":"record","name":"SampleHiveSchema","namespace":"com.linkedin.dataset","doc":"Sample Hive dataset","fields":[{"name":"field_foo","type":["string"]},{"name":"field_bar","type":["boolean"]}]}'}), 'fields': [SchemaFieldClass({'fieldPath': 'user_id', 'jsonPath': None, 'nullable': False, 'description': 'Id of the user created', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'varchar(100)', 'recursive': False, 'globalTags': None, 'glossaryTerms': None}), SchemaFieldClass({'fieldPath': 'user_name', 'jsonPath': None, 'nullable': False, 'description': 'Name of the user who signed up', 'type': SchemaFieldDataTypeClass({'type': BooleanTypeClass({})}), 'nativeDataType': 'boolean', 'recursive': False, 'globalTags': None, 'glossaryTerms': None})], 'primaryKeys': None, 'foreignKeysSpecs': None})]}), 'proposedDelta': None})
2021-09-02 19:48:32,672;INFO;Make_dataset_request_completed_for urn:li:dataset:(urn:li:dataPlatform:hive,fct_users_created,PROD) requested_by urn:li:corpuser:jdoe
