{"ast":null,"code":"/*! FixedColumns 3.3.3\n * Â©2010-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     FixedColumns\n * @description Freeze columns in place on a scrolling DataTable\n * @version     3.3.3\n * @file        dataTables.fixedColumns.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2010-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable;\n\n  var _firefoxScroll;\n  /**\n   * When making use of DataTables' x-axis scrolling feature, you may wish to\n   * fix the left most column in place. This plug-in for DataTables provides\n   * exactly this option (note for non-scrolling tables, please use the\n   * FixedHeader plug-in, which can fix headers and footers). Key\n   * features include:\n   *\n   * * Freezes the left or right most columns to the side of the table\n   * * Option to freeze two or more columns\n   * * Full integration with DataTables' scrolling options\n   * * Speed - FixedColumns is fast in its operation\n   *\n   *  @class\n   *  @constructor\n   *  @global\n   *  @param {object} dt DataTables instance. With DataTables 1.10 this can also\n   *    be a jQuery collection, a jQuery selector, DataTables API instance or\n   *    settings object.\n   *  @param {object} [init={}] Configuration object for FixedColumns. Options are\n   *    defined by {@link FixedColumns.defaults}\n   *\n   *  @requires jQuery 1.7+\n   *  @requires DataTables 1.8.0+\n   *\n   *  @example\n   *      var table = $('#example').dataTable( {\n   *        \"scrollX\": \"100%\"\n   *      } );\n   *      new $.fn.dataTable.fixedColumns( table );\n   */\n\n\n  var FixedColumns = function (dt, init) {\n    var that = this;\n    /* Sanity check - you just know it will happen */\n\n    if (!(this instanceof FixedColumns)) {\n      alert(\"FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.\");\n      return;\n    }\n\n    if (init === undefined || init === true) {\n      init = {};\n    } // Use the DataTables Hungarian notation mapping method, if it exists to\n    // provide forwards compatibility for camel case variables\n\n\n    var camelToHungarian = $.fn.dataTable.camelToHungarian;\n\n    if (camelToHungarian) {\n      camelToHungarian(FixedColumns.defaults, FixedColumns.defaults, true);\n      camelToHungarian(FixedColumns.defaults, init);\n    } // v1.10 allows the settings object to be got form a number of sources\n\n\n    var dtSettings = new $.fn.dataTable.Api(dt).settings()[0];\n    /**\n     * Settings object which contains customisable information for FixedColumns instance\n     * @namespace\n     * @extends FixedColumns.defaults\n     * @private\n     */\n\n    this.s = {\n      /**\n       * DataTables settings objects\n       *  @type     object\n       *  @default  Obtained from DataTables instance\n       */\n      \"dt\": dtSettings,\n\n      /**\n       * Number of columns in the DataTable - stored for quick access\n       *  @type     int\n       *  @default  Obtained from DataTables instance\n       */\n      \"iTableColumns\": dtSettings.aoColumns.length,\n\n      /**\n       * Original outer widths of the columns as rendered by DataTables - used to calculate\n       * the FixedColumns grid bounding box\n       *  @type     array.<int>\n       *  @default  []\n       */\n      \"aiOuterWidths\": [],\n\n      /**\n       * Original inner widths of the columns as rendered by DataTables - used to apply widths\n       * to the columns\n       *  @type     array.<int>\n       *  @default  []\n       */\n      \"aiInnerWidths\": [],\n\n      /**\n       * Is the document layout right-to-left\n       * @type boolean\n       */\n      rtl: $(dtSettings.nTable).css('direction') === 'rtl'\n    };\n    /**\n     * DOM elements used by the class instance\n     * @namespace\n     * @private\n     *\n     */\n\n    this.dom = {\n      /**\n       * DataTables scrolling element\n       *  @type     node\n       *  @default  null\n       */\n      \"scroller\": null,\n\n      /**\n       * DataTables header table\n       *  @type     node\n       *  @default  null\n       */\n      \"header\": null,\n\n      /**\n       * DataTables body table\n       *  @type     node\n       *  @default  null\n       */\n      \"body\": null,\n\n      /**\n       * DataTables footer table\n       *  @type     node\n       *  @default  null\n       */\n      \"footer\": null,\n\n      /**\n       * Display grid elements\n       * @namespace\n       */\n      \"grid\": {\n        /**\n         * Grid wrapper. This is the container element for the 3x3 grid\n         *  @type     node\n         *  @default  null\n         */\n        \"wrapper\": null,\n\n        /**\n         * DataTables scrolling element. This element is the DataTables\n         * component in the display grid (making up the main table - i.e.\n         * not the fixed columns).\n         *  @type     node\n         *  @default  null\n         */\n        \"dt\": null,\n\n        /**\n         * Left fixed column grid components\n         * @namespace\n         */\n        \"left\": {\n          \"wrapper\": null,\n          \"head\": null,\n          \"body\": null,\n          \"foot\": null\n        },\n\n        /**\n         * Right fixed column grid components\n         * @namespace\n         */\n        \"right\": {\n          \"wrapper\": null,\n          \"head\": null,\n          \"body\": null,\n          \"foot\": null\n        }\n      },\n\n      /**\n       * Cloned table nodes\n       * @namespace\n       */\n      \"clone\": {\n        /**\n         * Left column cloned table nodes\n         * @namespace\n         */\n        \"left\": {\n          /**\n           * Cloned header table\n           *  @type     node\n           *  @default  null\n           */\n          \"header\": null,\n\n          /**\n           * Cloned body table\n           *  @type     node\n           *  @default  null\n           */\n          \"body\": null,\n\n          /**\n           * Cloned footer table\n           *  @type     node\n           *  @default  null\n           */\n          \"footer\": null\n        },\n\n        /**\n         * Right column cloned table nodes\n         * @namespace\n         */\n        \"right\": {\n          /**\n           * Cloned header table\n           *  @type     node\n           *  @default  null\n           */\n          \"header\": null,\n\n          /**\n           * Cloned body table\n           *  @type     node\n           *  @default  null\n           */\n          \"body\": null,\n\n          /**\n           * Cloned footer table\n           *  @type     node\n           *  @default  null\n           */\n          \"footer\": null\n        }\n      }\n    };\n\n    if (dtSettings._oFixedColumns) {\n      throw 'FixedColumns already initialised on this table';\n    }\n    /* Attach the instance to the DataTables instance so it can be accessed easily */\n\n\n    dtSettings._oFixedColumns = this;\n    /* Let's do it */\n\n    if (!dtSettings._bInitComplete) {\n      dtSettings.oApi._fnCallbackReg(dtSettings, 'aoInitComplete', function () {\n        that._fnConstruct(init);\n      }, 'FixedColumns');\n    } else {\n      this._fnConstruct(init);\n    }\n  };\n\n  $.extend(FixedColumns.prototype, {\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Public methods\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n    /**\n     * Update the fixed columns - including headers and footers. Note that FixedColumns will\n     * automatically update the display whenever the host DataTable redraws.\n     *  @returns {void}\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      var fc = new $.fn.dataTable.fixedColumns( table );\n     *\n     *      // at some later point when the table has been manipulated....\n     *      fc.fnUpdate();\n     */\n    \"fnUpdate\": function () {\n      this._fnDraw(true);\n    },\n\n    /**\n     * Recalculate the resizes of the 3x3 grid that FixedColumns uses for display of the table.\n     * This is useful if you update the width of the table container. Note that FixedColumns will\n     * perform this function automatically when the window.resize event is fired.\n     *  @returns {void}\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      var fc = new $.fn.dataTable.fixedColumns( table );\n     *\n     *      // Resize the table container and then have FixedColumns adjust its layout....\n     *      $('#content').width( 1200 );\n     *      fc.fnRedrawLayout();\n     */\n    \"fnRedrawLayout\": function () {\n      this._fnColCalc();\n\n      this._fnGridLayout();\n\n      this.fnUpdate();\n    },\n\n    /**\n     * Mark a row such that it's height should be recalculated when using 'semiauto' row\n     * height matching. This function will have no effect when 'none' or 'auto' row height\n     * matching is used.\n     *  @param   {Node} nTr TR element that should have it's height recalculated\n     *  @returns {void}\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      var fc = new $.fn.dataTable.fixedColumns( table );\n     *\n     *      // manipulate the table - mark the row as needing an update then update the table\n     *      // this allows the redraw performed by DataTables fnUpdate to recalculate the row\n     *      // height\n     *      fc.fnRecalculateHeight();\n     *      table.fnUpdate( $('#example tbody tr:eq(0)')[0], [\"insert date\", 1, 2, 3 ... ]);\n     */\n    \"fnRecalculateHeight\": function (nTr) {\n      delete nTr._DTTC_iHeight;\n      nTr.style.height = 'auto';\n    },\n\n    /**\n     * Set the height of a given row - provides cross browser compatibility\n     *  @param   {Node} nTarget TR element that should have it's height recalculated\n     *  @param   {int} iHeight Height in pixels to set\n     *  @returns {void}\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      var fc = new $.fn.dataTable.fixedColumns( table );\n     *\n     *      // You may want to do this after manipulating a row in the fixed column\n     *      fc.fnSetRowHeight( $('#example tbody tr:eq(0)')[0], 50 );\n     */\n    \"fnSetRowHeight\": function (nTarget, iHeight) {\n      nTarget.style.height = iHeight + \"px\";\n    },\n\n    /**\n     * Get data index information about a row or cell in the table body.\n     * This function is functionally identical to fnGetPosition in DataTables,\n     * taking the same parameter (TH, TD or TR node) and returning exactly the\n     * the same information (data index information). THe difference between\n     * the two is that this method takes into account the fixed columns in the\n     * table, so you can pass in nodes from the master table, or the cloned\n     * tables and get the index position for the data in the main table.\n     *  @param {node} node TR, TH or TD element to get the information about\n     *  @returns {int} If nNode is given as a TR, then a single index is \n     *    returned, or if given as a cell, an array of [row index, column index\n     *    (visible), column index (all)] is given.\n     */\n    \"fnGetPosition\": function (node) {\n      var idx;\n      var inst = this.s.dt.oInstance;\n\n      if (!$(node).parents('.DTFC_Cloned').length) {\n        // Not in a cloned table\n        return inst.fnGetPosition(node);\n      } else {\n        // Its in the cloned table, so need to look up position\n        if (node.nodeName.toLowerCase() === 'tr') {\n          idx = $(node).index();\n          return inst.fnGetPosition($('tr', this.s.dt.nTBody)[idx]);\n        } else {\n          var colIdx = $(node).index();\n          idx = $(node.parentNode).index();\n          var row = inst.fnGetPosition($('tr', this.s.dt.nTBody)[idx]);\n          return [row, colIdx, inst.oApi._fnVisibleToColumnIndex(this.s.dt, colIdx)];\n        }\n      }\n    },\n    fnToFixedNode: function (rowIdx, colIdx) {\n      var found;\n\n      if (colIdx < this.s.iLeftColumns) {\n        found = $(this.dom.clone.left.body).find('[data-dt-row=' + rowIdx + '][data-dt-column=' + colIdx + ']');\n      } else if (colIdx >= this.s.iRightColumns) {\n        found = $(this.dom.clone.right.body).find('[data-dt-row=' + rowIdx + '][data-dt-column=' + colIdx + ']');\n      }\n\n      if (found && found.length) {\n        return found[0];\n      } // Fallback - non-fixed node\n\n\n      var table = new $.fn.dataTable.Api(this.s.dt);\n      return table.cell(rowIdx, colIdx).node();\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private methods (they are of course public in JS, but recommended as private)\n     * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n    /**\n     * Initialisation for FixedColumns\n     *  @param   {Object} oInit User settings for initialisation\n     *  @returns {void}\n     *  @private\n     */\n    \"_fnConstruct\": function (oInit) {\n      var i,\n          iLen,\n          iWidth,\n          that = this;\n      /* Sanity checking */\n\n      if (typeof this.s.dt.oInstance.fnVersionCheck != 'function' || this.s.dt.oInstance.fnVersionCheck('1.8.0') !== true) {\n        alert(\"FixedColumns \" + FixedColumns.VERSION + \" required DataTables 1.8.0 or later. \" + \"Please upgrade your DataTables installation\");\n        return;\n      }\n\n      if (this.s.dt.oScroll.sX === \"\") {\n        this.s.dt.oInstance.oApi._fnLog(this.s.dt, 1, \"FixedColumns is not needed (no \" + \"x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for \" + \"column fixing when scrolling is not enabled\");\n\n        return;\n      }\n      /* Apply the settings from the user / defaults */\n\n\n      this.s = $.extend(true, this.s, FixedColumns.defaults, oInit);\n      /* Set up the DOM as we need it and cache nodes */\n\n      var classes = this.s.dt.oClasses;\n      this.dom.grid.dt = $(this.s.dt.nTable).parents('div.' + classes.sScrollWrapper)[0];\n      this.dom.scroller = $('div.' + classes.sScrollBody, this.dom.grid.dt)[0];\n      /* Set up the DOM that we want for the fixed column layout grid */\n\n      this._fnColCalc();\n\n      this._fnGridSetup();\n      /* Event handlers */\n\n\n      var mouseController;\n      var mouseDown = false; // When the mouse is down (drag scroll) the mouse controller cannot\n      // change, as the browser keeps the original element as the scrolling one\n\n      $(this.s.dt.nTableWrapper).on('mousedown.DTFC', function (e) {\n        if (e.button === 0) {\n          mouseDown = true;\n          $(document).one('mouseup', function () {\n            mouseDown = false;\n          });\n        }\n      }); // When the body is scrolled - scroll the left and right columns\n\n      $(this.dom.scroller).on('mouseover.DTFC touchstart.DTFC', function () {\n        if (!mouseDown) {\n          mouseController = 'main';\n        }\n      }).on('scroll.DTFC', function (e) {\n        if (!mouseController && e.originalEvent) {\n          mouseController = 'main';\n        }\n\n        if (mouseController === 'main' || mouseController === 'key') {\n          if (that.s.iLeftColumns > 0) {\n            that.dom.grid.left.liner.scrollTop = that.dom.scroller.scrollTop;\n          }\n\n          if (that.s.iRightColumns > 0) {\n            that.dom.grid.right.liner.scrollTop = that.dom.scroller.scrollTop;\n          }\n        }\n      });\n      var wheelType = 'onwheel' in document.createElement('div') ? 'wheel.DTFC' : 'mousewheel.DTFC';\n\n      if (that.s.iLeftColumns > 0) {\n        // When scrolling the left column, scroll the body and right column\n        $(that.dom.grid.left.liner).on('mouseover.DTFC touchstart.DTFC', function () {\n          if (!mouseDown && mouseController !== 'key') {\n            mouseController = 'left';\n          }\n        }).on('scroll.DTFC', function (e) {\n          if (!mouseController && e.originalEvent) {\n            mouseController = 'left';\n          }\n\n          if (mouseController === 'left') {\n            that.dom.scroller.scrollTop = that.dom.grid.left.liner.scrollTop;\n\n            if (that.s.iRightColumns > 0) {\n              that.dom.grid.right.liner.scrollTop = that.dom.grid.left.liner.scrollTop;\n            }\n          }\n        }).on(wheelType, function (e) {\n          mouseController = 'left'; // Pass horizontal scrolling through\n\n          var xDelta = e.type === 'wheel' ? -e.originalEvent.deltaX : e.originalEvent.wheelDeltaX;\n          that.dom.scroller.scrollLeft -= xDelta;\n        }); // Header will not trigger scroll on left column, but might on `main` (sorting)\n\n        $(that.dom.grid.left.head).on('mouseover.DTFC touchstart.DTFC', function () {\n          mouseController = 'main';\n        });\n      }\n\n      if (that.s.iRightColumns > 0) {\n        // When scrolling the right column, scroll the body and the left column\n        $(that.dom.grid.right.liner).on('mouseover.DTFC touchstart.DTFC', function () {\n          if (!mouseDown && mouseController !== 'key') {\n            mouseController = 'right';\n          }\n        }).on('scroll.DTFC', function (e) {\n          if (!mouseController && e.originalEvent) {\n            mouseController = 'right';\n          }\n\n          if (mouseController === 'right') {\n            that.dom.scroller.scrollTop = that.dom.grid.right.liner.scrollTop;\n\n            if (that.s.iLeftColumns > 0) {\n              that.dom.grid.left.liner.scrollTop = that.dom.grid.right.liner.scrollTop;\n            }\n          }\n        }).on(wheelType, function (e) {\n          mouseController = 'right'; // Pass horizontal scrolling through\n\n          var xDelta = e.type === 'wheel' ? -e.originalEvent.deltaX : e.originalEvent.wheelDeltaX;\n          that.dom.scroller.scrollLeft -= xDelta;\n        });\n        $(that.dom.grid.right.head).on('mouseover.DTFC touchstart.DTFC', function () {\n          mouseController = 'main';\n        });\n      }\n\n      $(window).on('resize.DTFC', function () {\n        that._fnGridLayout.call(that);\n      });\n      var bFirstDraw = true;\n      var jqTable = $(this.s.dt.nTable);\n      jqTable.on('draw.dt.DTFC', function () {\n        that._fnColCalc();\n\n        that._fnDraw.call(that, bFirstDraw);\n\n        bFirstDraw = false;\n      }).on('key-focus.dt.DTFC', function () {\n        // KeyTable navigation needs to be main focused\n        mouseController = 'key';\n      }).on('column-sizing.dt.DTFC', function () {\n        that._fnColCalc();\n\n        that._fnGridLayout(that);\n      }).on('column-visibility.dt.DTFC', function (e, settings, column, vis, recalc) {\n        if (recalc === undefined || recalc) {\n          that._fnColCalc();\n\n          that._fnGridLayout(that);\n\n          that._fnDraw(true);\n        }\n      }).on('select.dt.DTFC deselect.dt.DTFC', function (e, dt, type, indexes) {\n        if (e.namespace === 'dt') {\n          that._fnDraw(false);\n        }\n      }).on('position.dts.dt.DTFC', function (e, tableTop) {\n        // Sync up with Scroller\n        if (that.dom.grid.left.body) {\n          $(that.dom.grid.left.body).find('table').eq(0).css('top', tableTop);\n        }\n\n        if (that.dom.grid.right.body) {\n          $(that.dom.grid.right.body).find('table').eq(0).css('top', tableTop);\n        }\n      }).on('destroy.dt.DTFC', function () {\n        jqTable.off('.DTFC');\n        $(that.dom.scroller).off('.DTFC');\n        $(window).off('.DTFC');\n        $(that.s.dt.nTableWrapper).off('.DTFC');\n        $(that.dom.grid.left.liner).off('.DTFC ' + wheelType);\n        $(that.dom.grid.left.wrapper).remove();\n        $(that.dom.grid.right.liner).off('.DTFC ' + wheelType);\n        $(that.dom.grid.right.wrapper).remove();\n      });\n      /* Get things right to start with - note that due to adjusting the columns, there must be\n       * another redraw of the main table. It doesn't need to be a full redraw however.\n       */\n\n      this._fnGridLayout();\n\n      this.s.dt.oInstance.fnDraw(false);\n    },\n\n    /**\n     * Calculate the column widths for the grid layout\n     *  @returns {void}\n     *  @private\n     */\n    \"_fnColCalc\": function () {\n      var that = this;\n      var iLeftWidth = 0;\n      var iRightWidth = 0;\n      this.s.aiInnerWidths = [];\n      this.s.aiOuterWidths = [];\n      $.each(this.s.dt.aoColumns, function (i, col) {\n        var th = $(col.nTh);\n        var border;\n\n        if (!th.filter(':visible').length) {\n          that.s.aiInnerWidths.push(0);\n          that.s.aiOuterWidths.push(0);\n        } else {\n          // Inner width is used to assign widths to cells\n          // Outer width is used to calculate the container\n          var iWidth = th.outerWidth(); // When working with the left most-cell, need to add on the\n          // table's border to the outerWidth, since we need to take\n          // account of it, but it isn't in any cell\n\n          if (that.s.aiOuterWidths.length === 0) {\n            border = $(that.s.dt.nTable).css('border-left-width');\n            iWidth += typeof border === 'string' && border.indexOf('px') === -1 ? 1 : parseInt(border, 10);\n          } // Likewise with the final column on the right\n\n\n          if (that.s.aiOuterWidths.length === that.s.dt.aoColumns.length - 1) {\n            border = $(that.s.dt.nTable).css('border-right-width');\n            iWidth += typeof border === 'string' && border.indexOf('px') === -1 ? 1 : parseInt(border, 10);\n          }\n\n          that.s.aiOuterWidths.push(iWidth);\n          that.s.aiInnerWidths.push(th.width());\n\n          if (i < that.s.iLeftColumns) {\n            iLeftWidth += iWidth;\n          }\n\n          if (that.s.iTableColumns - that.s.iRightColumns <= i) {\n            iRightWidth += iWidth;\n          }\n        }\n      });\n      this.s.iLeftWidth = iLeftWidth;\n      this.s.iRightWidth = iRightWidth;\n    },\n\n    /**\n     * Set up the DOM for the fixed column. The way the layout works is to create a 1x3 grid\n     * for the left column, the DataTable (for which we just reuse the scrolling element DataTable\n     * puts into the DOM) and the right column. In each of he two fixed column elements there is a\n     * grouping wrapper element and then a head, body and footer wrapper. In each of these we then\n     * place the cloned header, body or footer tables. This effectively gives as 3x3 grid structure.\n     *  @returns {void}\n     *  @private\n     */\n    \"_fnGridSetup\": function () {\n      var that = this;\n\n      var oOverflow = this._fnDTOverflow();\n\n      var block;\n      this.dom.body = this.s.dt.nTable;\n      this.dom.header = this.s.dt.nTHead.parentNode;\n      this.dom.header.parentNode.parentNode.style.position = \"relative\";\n      var nSWrapper = $('<div class=\"DTFC_ScrollWrapper\" style=\"position:relative; clear:both;\">' + '<div class=\"DTFC_LeftWrapper\" style=\"position:absolute; top:0; left:0;\" aria-hidden=\"true\">' + '<div class=\"DTFC_LeftHeadWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>' + '<div class=\"DTFC_LeftBodyWrapper\" style=\"position:relative; top:0; left:0; height:0; overflow:hidden;\">' + '<div class=\"DTFC_LeftBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>' + '</div>' + '<div class=\"DTFC_LeftFootWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>' + '</div>' + '<div class=\"DTFC_RightWrapper\" style=\"position:absolute; top:0; right:0;\" aria-hidden=\"true\">' + '<div class=\"DTFC_RightHeadWrapper\" style=\"position:relative; top:0; left:0;\">' + '<div class=\"DTFC_RightHeadBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>' + '</div>' + '<div class=\"DTFC_RightBodyWrapper\" style=\"position:relative; top:0; left:0; height:0; overflow:hidden;\">' + '<div class=\"DTFC_RightBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>' + '</div>' + '<div class=\"DTFC_RightFootWrapper\" style=\"position:relative; top:0; left:0;\">' + '<div class=\"DTFC_RightFootBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>' + '</div>' + '</div>' + '</div>')[0];\n      var nLeft = nSWrapper.childNodes[0];\n      var nRight = nSWrapper.childNodes[1];\n      this.dom.grid.dt.parentNode.insertBefore(nSWrapper, this.dom.grid.dt);\n      nSWrapper.appendChild(this.dom.grid.dt);\n      this.dom.grid.wrapper = nSWrapper;\n\n      if (this.s.iLeftColumns > 0) {\n        this.dom.grid.left.wrapper = nLeft;\n        this.dom.grid.left.head = nLeft.childNodes[0];\n        this.dom.grid.left.body = nLeft.childNodes[1];\n        this.dom.grid.left.liner = $('div.DTFC_LeftBodyLiner', nSWrapper)[0];\n        nSWrapper.appendChild(nLeft);\n      }\n\n      if (this.s.iRightColumns > 0) {\n        this.dom.grid.right.wrapper = nRight;\n        this.dom.grid.right.head = nRight.childNodes[0];\n        this.dom.grid.right.body = nRight.childNodes[1];\n        this.dom.grid.right.liner = $('div.DTFC_RightBodyLiner', nSWrapper)[0];\n        nRight.style.right = oOverflow.bar + \"px\";\n        block = $('div.DTFC_RightHeadBlocker', nSWrapper)[0];\n        block.style.width = oOverflow.bar + \"px\";\n        block.style.right = -oOverflow.bar + \"px\";\n        this.dom.grid.right.headBlock = block;\n        block = $('div.DTFC_RightFootBlocker', nSWrapper)[0];\n        block.style.width = oOverflow.bar + \"px\";\n        block.style.right = -oOverflow.bar + \"px\";\n        this.dom.grid.right.footBlock = block;\n        nSWrapper.appendChild(nRight);\n      }\n\n      if (this.s.dt.nTFoot) {\n        this.dom.footer = this.s.dt.nTFoot.parentNode;\n\n        if (this.s.iLeftColumns > 0) {\n          this.dom.grid.left.foot = nLeft.childNodes[2];\n        }\n\n        if (this.s.iRightColumns > 0) {\n          this.dom.grid.right.foot = nRight.childNodes[2];\n        }\n      } // RTL support - swap the position of the left and right columns (#48)\n\n\n      if (this.s.rtl) {\n        $('div.DTFC_RightHeadBlocker', nSWrapper).css({\n          left: -oOverflow.bar + 'px',\n          right: ''\n        });\n      }\n    },\n\n    /**\n     * Style and position the grid used for the FixedColumns layout\n     *  @returns {void}\n     *  @private\n     */\n    \"_fnGridLayout\": function () {\n      var that = this;\n      var oGrid = this.dom.grid;\n      var iWidth = $(oGrid.wrapper).width();\n      var iBodyHeight = this.s.dt.nTable.parentNode.offsetHeight;\n      var iFullHeight = this.s.dt.nTable.parentNode.parentNode.offsetHeight;\n\n      var oOverflow = this._fnDTOverflow();\n\n      var iLeftWidth = this.s.iLeftWidth;\n      var iRightWidth = this.s.iRightWidth;\n      var rtl = $(this.dom.body).css('direction') === 'rtl';\n      var wrapper;\n\n      var scrollbarAdjust = function (node, width) {\n        if (!oOverflow.bar) {\n          // If there is no scrollbar (Macs) we need to hide the auto scrollbar\n          node.style.width = width + 20 + \"px\";\n          node.style.paddingRight = \"20px\";\n          node.style.boxSizing = \"border-box\";\n        } else if (that._firefoxScrollError()) {\n          // See the above function for why this is required\n          if ($(node).height() > 34) {\n            node.style.width = width + oOverflow.bar + \"px\";\n          }\n        } else {\n          // Otherwise just overflow by the scrollbar\n          node.style.width = width + oOverflow.bar + \"px\";\n        }\n      }; // When x scrolling - don't paint the fixed columns over the x scrollbar\n\n\n      if (oOverflow.x) {\n        iBodyHeight -= oOverflow.bar;\n      }\n\n      oGrid.wrapper.style.height = iFullHeight + \"px\";\n\n      if (this.s.iLeftColumns > 0) {\n        wrapper = oGrid.left.wrapper;\n        wrapper.style.width = iLeftWidth + 'px';\n        wrapper.style.height = '1px'; // Swap the position of the left and right columns for rtl (#48)\n        // This is always up against the edge, scrollbar on the far side\n\n        if (rtl) {\n          wrapper.style.left = '';\n          wrapper.style.right = 0;\n        } else {\n          wrapper.style.left = 0;\n          wrapper.style.right = '';\n        }\n\n        oGrid.left.body.style.height = iBodyHeight + \"px\";\n\n        if (oGrid.left.foot) {\n          oGrid.left.foot.style.top = (oOverflow.x ? oOverflow.bar : 0) + \"px\"; // shift footer for scrollbar\n        }\n\n        scrollbarAdjust(oGrid.left.liner, iLeftWidth);\n        oGrid.left.liner.style.height = iBodyHeight + \"px\";\n        oGrid.left.liner.style.maxHeight = iBodyHeight + \"px\";\n      }\n\n      if (this.s.iRightColumns > 0) {\n        wrapper = oGrid.right.wrapper;\n        wrapper.style.width = iRightWidth + 'px';\n        wrapper.style.height = '1px'; // Need to take account of the vertical scrollbar\n\n        if (this.s.rtl) {\n          wrapper.style.left = oOverflow.y ? oOverflow.bar + 'px' : 0;\n          wrapper.style.right = '';\n        } else {\n          wrapper.style.left = '';\n          wrapper.style.right = oOverflow.y ? oOverflow.bar + 'px' : 0;\n        }\n\n        oGrid.right.body.style.height = iBodyHeight + \"px\";\n\n        if (oGrid.right.foot) {\n          oGrid.right.foot.style.top = (oOverflow.x ? oOverflow.bar : 0) + \"px\";\n        }\n\n        scrollbarAdjust(oGrid.right.liner, iRightWidth);\n        oGrid.right.liner.style.height = iBodyHeight + \"px\";\n        oGrid.right.liner.style.maxHeight = iBodyHeight + \"px\";\n        oGrid.right.headBlock.style.display = oOverflow.y ? 'block' : 'none';\n        oGrid.right.footBlock.style.display = oOverflow.y ? 'block' : 'none';\n      }\n    },\n\n    /**\n     * Get information about the DataTable's scrolling state - specifically if the table is scrolling\n     * on either the x or y axis, and also the scrollbar width.\n     *  @returns {object} Information about the DataTables scrolling state with the properties:\n     *    'x', 'y' and 'bar'\n     *  @private\n     */\n    \"_fnDTOverflow\": function () {\n      var nTable = this.s.dt.nTable;\n      var nTableScrollBody = nTable.parentNode;\n      var out = {\n        \"x\": false,\n        \"y\": false,\n        \"bar\": this.s.dt.oScroll.iBarWidth\n      };\n\n      if (nTable.offsetWidth > nTableScrollBody.clientWidth) {\n        out.x = true;\n      }\n\n      if (nTable.offsetHeight > nTableScrollBody.clientHeight) {\n        out.y = true;\n      }\n\n      return out;\n    },\n\n    /**\n     * Clone and position the fixed columns\n     *  @returns {void}\n     *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n     *  @private\n     */\n    \"_fnDraw\": function (bAll) {\n      this._fnGridLayout();\n\n      this._fnCloneLeft(bAll);\n\n      this._fnCloneRight(bAll);\n\n      $(this.dom.scroller).trigger('scroll');\n      /* Draw callback function */\n\n      if (this.s.fnDrawCallback !== null) {\n        this.s.fnDrawCallback.call(this, this.dom.clone.left, this.dom.clone.right);\n      }\n      /* Event triggering */\n\n\n      $(this).trigger('draw.dtfc', {\n        \"leftClone\": this.dom.clone.left,\n        \"rightClone\": this.dom.clone.right\n      });\n    },\n\n    /**\n     * Clone the right columns\n     *  @returns {void}\n     *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n     *  @private\n     */\n    \"_fnCloneRight\": function (bAll) {\n      if (this.s.iRightColumns <= 0) {\n        return;\n      }\n\n      var that = this,\n          i,\n          jq,\n          aiColumns = [];\n\n      for (i = this.s.iTableColumns - this.s.iRightColumns; i < this.s.iTableColumns; i++) {\n        if (this.s.dt.aoColumns[i].bVisible) {\n          aiColumns.push(i);\n        }\n      }\n\n      this._fnClone(this.dom.clone.right, this.dom.grid.right, aiColumns, bAll);\n    },\n\n    /**\n     * Clone the left columns\n     *  @returns {void}\n     *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n     *  @private\n     */\n    \"_fnCloneLeft\": function (bAll) {\n      if (this.s.iLeftColumns <= 0) {\n        return;\n      }\n\n      var that = this,\n          i,\n          jq,\n          aiColumns = [];\n\n      for (i = 0; i < this.s.iLeftColumns; i++) {\n        if (this.s.dt.aoColumns[i].bVisible) {\n          aiColumns.push(i);\n        }\n      }\n\n      this._fnClone(this.dom.clone.left, this.dom.grid.left, aiColumns, bAll);\n    },\n\n    /**\n     * Make a copy of the layout object for a header or footer element from DataTables. Note that\n     * this method will clone the nodes in the layout object.\n     *  @returns {Array} Copy of the layout array\n     *  @param   {Object} aoOriginal Layout array from DataTables (aoHeader or aoFooter)\n     *  @param   {Object} aiColumns Columns to copy\n     *  @param   {boolean} events Copy cell events or not\n     *  @private\n     */\n    \"_fnCopyLayout\": function (aoOriginal, aiColumns, events) {\n      var aReturn = [];\n      var aClones = [];\n      var aCloned = [];\n\n      for (var i = 0, iLen = aoOriginal.length; i < iLen; i++) {\n        var aRow = [];\n        aRow.nTr = $(aoOriginal[i].nTr).clone(events, false)[0];\n\n        for (var j = 0, jLen = this.s.iTableColumns; j < jLen; j++) {\n          if ($.inArray(j, aiColumns) === -1) {\n            continue;\n          }\n\n          var iCloned = $.inArray(aoOriginal[i][j].cell, aCloned);\n\n          if (iCloned === -1) {\n            var nClone = $(aoOriginal[i][j].cell).clone(events, false)[0];\n            aClones.push(nClone);\n            aCloned.push(aoOriginal[i][j].cell);\n            aRow.push({\n              \"cell\": nClone,\n              \"unique\": aoOriginal[i][j].unique\n            });\n          } else {\n            aRow.push({\n              \"cell\": aClones[iCloned],\n              \"unique\": aoOriginal[i][j].unique\n            });\n          }\n        }\n\n        aReturn.push(aRow);\n      }\n\n      return aReturn;\n    },\n\n    /**\n     * Clone the DataTable nodes and place them in the DOM (sized correctly)\n     *  @returns {void}\n     *  @param   {Object} oClone Object containing the header, footer and body cloned DOM elements\n     *  @param   {Object} oGrid Grid object containing the display grid elements for the cloned\n     *                    column (left or right)\n     *  @param   {Array} aiColumns Column indexes which should be operated on from the DataTable\n     *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n     *  @private\n     */\n    \"_fnClone\": function (oClone, oGrid, aiColumns, bAll) {\n      var that = this,\n          i,\n          iLen,\n          j,\n          jLen,\n          jq,\n          nTarget,\n          iColumn,\n          nClone,\n          iIndex,\n          aoCloneLayout,\n          jqCloneThead,\n          aoFixedHeader,\n          dt = this.s.dt;\n      /*\n       * Header\n       */\n\n      if (bAll) {\n        $(oClone.header).remove();\n        oClone.header = $(this.dom.header).clone(true, false)[0];\n        oClone.header.className += \" DTFC_Cloned\";\n        oClone.header.style.width = \"100%\";\n        oGrid.head.appendChild(oClone.header);\n        /* Copy the DataTables layout cache for the header for our floating column */\n\n        aoCloneLayout = this._fnCopyLayout(dt.aoHeader, aiColumns, true);\n        jqCloneThead = $('>thead', oClone.header);\n        jqCloneThead.empty();\n        /* Add the created cloned TR elements to the table */\n\n        for (i = 0, iLen = aoCloneLayout.length; i < iLen; i++) {\n          jqCloneThead[0].appendChild(aoCloneLayout[i].nTr);\n        }\n        /* Use the handy _fnDrawHead function in DataTables to do the rowspan/colspan\n         * calculations for us\n         */\n\n\n        dt.oApi._fnDrawHead(dt, aoCloneLayout, true);\n      } else {\n        /* To ensure that we copy cell classes exactly, regardless of colspan, multiple rows\n         * etc, we make a copy of the header from the DataTable again, but don't insert the\n         * cloned cells, just copy the classes across. To get the matching layout for the\n         * fixed component, we use the DataTables _fnDetectHeader method, allowing 1:1 mapping\n         */\n        aoCloneLayout = this._fnCopyLayout(dt.aoHeader, aiColumns, false);\n        aoFixedHeader = [];\n\n        dt.oApi._fnDetectHeader(aoFixedHeader, $('>thead', oClone.header)[0]);\n\n        for (i = 0, iLen = aoCloneLayout.length; i < iLen; i++) {\n          for (j = 0, jLen = aoCloneLayout[i].length; j < jLen; j++) {\n            aoFixedHeader[i][j].cell.className = aoCloneLayout[i][j].cell.className; // If jQuery UI theming is used we need to copy those elements as well\n\n            $('span.DataTables_sort_icon', aoFixedHeader[i][j].cell).each(function () {\n              this.className = $('span.DataTables_sort_icon', aoCloneLayout[i][j].cell)[0].className;\n            });\n          }\n        }\n      }\n\n      this._fnEqualiseHeights('thead', this.dom.header, oClone.header);\n      /*\n       * Body\n       */\n\n\n      if (this.s.sHeightMatch == 'auto') {\n        /* Remove any heights which have been applied already and let the browser figure it out */\n        $('>tbody>tr', that.dom.body).css('height', 'auto');\n      }\n\n      if (oClone.body !== null) {\n        $(oClone.body).remove();\n        oClone.body = null;\n      }\n\n      oClone.body = $(this.dom.body).clone(true)[0];\n      oClone.body.className += \" DTFC_Cloned\";\n      oClone.body.style.paddingBottom = dt.oScroll.iBarWidth + \"px\";\n      oClone.body.style.marginBottom = dt.oScroll.iBarWidth * 2 + \"px\";\n      /* For IE */\n\n      if (oClone.body.getAttribute('id') !== null) {\n        oClone.body.removeAttribute('id');\n      }\n\n      $('>thead>tr', oClone.body).empty();\n      $('>tfoot', oClone.body).remove();\n      var nBody = $('tbody', oClone.body)[0];\n      $(nBody).empty();\n\n      if (dt.aiDisplay.length > 0) {\n        /* Copy the DataTables' header elements to force the column width in exactly the\n         * same way that DataTables does it - have the header element, apply the width and\n         * colapse it down\n         */\n        var nInnerThead = $('>thead>tr', oClone.body)[0];\n\n        for (iIndex = 0; iIndex < aiColumns.length; iIndex++) {\n          iColumn = aiColumns[iIndex];\n          nClone = $(dt.aoColumns[iColumn].nTh).clone(true)[0];\n          nClone.innerHTML = \"\";\n          var oStyle = nClone.style;\n          oStyle.paddingTop = \"0\";\n          oStyle.paddingBottom = \"0\";\n          oStyle.borderTopWidth = \"0\";\n          oStyle.borderBottomWidth = \"0\";\n          oStyle.height = 0;\n          oStyle.width = that.s.aiInnerWidths[iColumn] + \"px\";\n          nInnerThead.appendChild(nClone);\n        }\n        /* Add in the tbody elements, cloning form the master table */\n\n\n        $('>tbody>tr', that.dom.body).each(function (z) {\n          var i = that.s.dt.oFeatures.bServerSide === false ? that.s.dt.aiDisplay[that.s.dt._iDisplayStart + z] : z;\n          var aTds = that.s.dt.aoData[i].anCells || $(this).children('td, th');\n          var n = this.cloneNode(false);\n          n.removeAttribute('id');\n          n.setAttribute('data-dt-row', i);\n\n          for (iIndex = 0; iIndex < aiColumns.length; iIndex++) {\n            iColumn = aiColumns[iIndex];\n\n            if (aTds.length > 0) {\n              nClone = $(aTds[iColumn]).clone(true, true)[0];\n              nClone.removeAttribute('id');\n              nClone.setAttribute('data-dt-row', i);\n              nClone.setAttribute('data-dt-column', iColumn);\n              n.appendChild(nClone);\n            }\n          }\n\n          nBody.appendChild(n);\n        });\n      } else {\n        $('>tbody>tr', that.dom.body).each(function (z) {\n          nClone = this.cloneNode(true);\n          nClone.className += ' DTFC_NoData';\n          $('td', nClone).html('');\n          nBody.appendChild(nClone);\n        });\n      }\n\n      oClone.body.style.width = \"100%\";\n      oClone.body.style.margin = \"0\";\n      oClone.body.style.padding = \"0\"; // Interop with Scroller - need to use a height forcing element in the\n      // scrolling area in the same way that Scroller does in the body scroll.\n\n      if (dt.oScroller !== undefined) {\n        var scrollerForcer = dt.oScroller.dom.force;\n\n        if (!oGrid.forcer) {\n          oGrid.forcer = scrollerForcer.cloneNode(true);\n          oGrid.liner.appendChild(oGrid.forcer);\n        } else {\n          oGrid.forcer.style.height = scrollerForcer.style.height;\n        }\n      }\n\n      oGrid.liner.appendChild(oClone.body);\n\n      this._fnEqualiseHeights('tbody', that.dom.body, oClone.body);\n      /*\n       * Footer\n       */\n\n\n      if (dt.nTFoot !== null) {\n        if (bAll) {\n          if (oClone.footer !== null) {\n            oClone.footer.parentNode.removeChild(oClone.footer);\n          }\n\n          oClone.footer = $(this.dom.footer).clone(true, true)[0];\n          oClone.footer.className += \" DTFC_Cloned\";\n          oClone.footer.style.width = \"100%\";\n          oGrid.foot.appendChild(oClone.footer);\n          /* Copy the footer just like we do for the header */\n\n          aoCloneLayout = this._fnCopyLayout(dt.aoFooter, aiColumns, true);\n          var jqCloneTfoot = $('>tfoot', oClone.footer);\n          jqCloneTfoot.empty();\n\n          for (i = 0, iLen = aoCloneLayout.length; i < iLen; i++) {\n            jqCloneTfoot[0].appendChild(aoCloneLayout[i].nTr);\n          }\n\n          dt.oApi._fnDrawHead(dt, aoCloneLayout, true);\n        } else {\n          aoCloneLayout = this._fnCopyLayout(dt.aoFooter, aiColumns, false);\n          var aoCurrFooter = [];\n\n          dt.oApi._fnDetectHeader(aoCurrFooter, $('>tfoot', oClone.footer)[0]);\n\n          for (i = 0, iLen = aoCloneLayout.length; i < iLen; i++) {\n            for (j = 0, jLen = aoCloneLayout[i].length; j < jLen; j++) {\n              aoCurrFooter[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n            }\n          }\n        }\n\n        this._fnEqualiseHeights('tfoot', this.dom.footer, oClone.footer);\n      }\n      /* Equalise the column widths between the header footer and body - body get's priority */\n\n\n      var anUnique = dt.oApi._fnGetUniqueThs(dt, $('>thead', oClone.header)[0]);\n\n      $(anUnique).each(function (i) {\n        iColumn = aiColumns[i];\n        this.style.width = that.s.aiInnerWidths[iColumn] + \"px\";\n      });\n\n      if (that.s.dt.nTFoot !== null) {\n        anUnique = dt.oApi._fnGetUniqueThs(dt, $('>tfoot', oClone.footer)[0]);\n        $(anUnique).each(function (i) {\n          iColumn = aiColumns[i];\n          this.style.width = that.s.aiInnerWidths[iColumn] + \"px\";\n        });\n      }\n    },\n\n    /**\n     * From a given table node (THEAD etc), get a list of TR direct child elements\n     *  @param   {Node} nIn Table element to search for TR elements (THEAD, TBODY or TFOOT element)\n     *  @returns {Array} List of TR elements found\n     *  @private\n     */\n    \"_fnGetTrNodes\": function (nIn) {\n      var aOut = [];\n\n      for (var i = 0, iLen = nIn.childNodes.length; i < iLen; i++) {\n        if (nIn.childNodes[i].nodeName.toUpperCase() == \"TR\") {\n          aOut.push(nIn.childNodes[i]);\n        }\n      }\n\n      return aOut;\n    },\n\n    /**\n     * Equalise the heights of the rows in a given table node in a cross browser way\n     *  @returns {void}\n     *  @param   {String} nodeName Node type - thead, tbody or tfoot\n     *  @param   {Node} original Original node to take the heights from\n     *  @param   {Node} clone Copy the heights to\n     *  @private\n     */\n    \"_fnEqualiseHeights\": function (nodeName, original, clone) {\n      if (this.s.sHeightMatch == 'none' && nodeName !== 'thead' && nodeName !== 'tfoot') {\n        return;\n      }\n\n      var that = this,\n          i,\n          iLen,\n          iHeight,\n          iHeight2,\n          iHeightOriginal,\n          iHeightClone,\n          rootOriginal = original.getElementsByTagName(nodeName)[0],\n          rootClone = clone.getElementsByTagName(nodeName)[0],\n          jqBoxHack = $('>' + nodeName + '>tr:eq(0)', original).children(':first'),\n          iBoxHack = jqBoxHack.outerHeight() - jqBoxHack.height(),\n          anOriginal = this._fnGetTrNodes(rootOriginal),\n          anClone = this._fnGetTrNodes(rootClone),\n          heights = [];\n\n      for (i = 0, iLen = anClone.length; i < iLen; i++) {\n        iHeightOriginal = anOriginal[i].offsetHeight;\n        iHeightClone = anClone[i].offsetHeight;\n        iHeight = iHeightClone > iHeightOriginal ? iHeightClone : iHeightOriginal;\n\n        if (this.s.sHeightMatch == 'semiauto') {\n          anOriginal[i]._DTTC_iHeight = iHeight;\n        }\n\n        heights.push(iHeight);\n      }\n\n      for (i = 0, iLen = anClone.length; i < iLen; i++) {\n        anClone[i].style.height = heights[i] + \"px\";\n        anOriginal[i].style.height = heights[i] + \"px\";\n      }\n    },\n\n    /**\n     * Determine if the UA suffers from Firefox's overflow:scroll scrollbars\n     * not being shown bug.\n     *\n     * Firefox doesn't draw scrollbars, even if it is told to using\n     * overflow:scroll, if the div is less than 34px height. See bugs 292284 and\n     * 781885. Using UA detection here since this is particularly hard to detect\n     * using objects - its a straight up rendering error in Firefox.\n     *\n     * @return {boolean} True if Firefox error is present, false otherwise\n     */\n    _firefoxScrollError: function () {\n      if (_firefoxScroll === undefined) {\n        var test = $('<div/>').css({\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: 10,\n          width: 50,\n          overflow: 'scroll'\n        }).appendTo('body'); // Make sure this doesn't apply on Macs with 0 width scrollbars\n\n        _firefoxScroll = test[0].clientWidth === test[0].offsetWidth && this._fnDTOverflow().bar !== 0;\n        test.remove();\n      }\n\n      return _firefoxScroll;\n    }\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Statics\n   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n  /**\n   * FixedColumns default settings for initialisation\n   *  @name FixedColumns.defaults\n   *  @namespace\n   *  @static\n   */\n\n  FixedColumns.defaults =\n  /** @lends FixedColumns.defaults */\n  {\n    /**\n     * Number of left hand columns to fix in position\n     *  @type     int\n     *  @default  1\n     *  @static\n     *  @example\n     *      var  = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      new $.fn.dataTable.fixedColumns( table, {\n     *          \"leftColumns\": 2\n     *      } );\n     */\n    \"iLeftColumns\": 1,\n\n    /**\n     * Number of right hand columns to fix in position\n     *  @type     int\n     *  @default  0\n     *  @static\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      new $.fn.dataTable.fixedColumns( table, {\n     *          \"rightColumns\": 1\n     *      } );\n     */\n    \"iRightColumns\": 0,\n\n    /**\n     * Draw callback function which is called when FixedColumns has redrawn the fixed assets\n     *  @type     function(object, object):void\n     *  @default  null\n     *  @static\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      new $.fn.dataTable.fixedColumns( table, {\n     *          \"drawCallback\": function () {\n     *\t            alert( \"FixedColumns redraw\" );\n     *\t        }\n     *      } );\n     */\n    \"fnDrawCallback\": null,\n\n    /**\n     * Height matching algorthim to use. This can be \"none\" which will result in no height\n     * matching being applied by FixedColumns (height matching could be forced by CSS in this\n     * case), \"semiauto\" whereby the height calculation will be performed once, and the result\n     * cached to be used again (fnRecalculateHeight can be used to force recalculation), or\n     * \"auto\" when height matching is performed on every draw (slowest but must accurate)\n     *  @type     string\n     *  @default  semiauto\n     *  @static\n     *  @example\n     *      var table = $('#example').dataTable( {\n     *          \"scrollX\": \"100%\"\n     *      } );\n     *      new $.fn.dataTable.fixedColumns( table, {\n     *          \"heightMatch\": \"auto\"\n     *      } );\n     */\n    \"sHeightMatch\": \"semiauto\"\n  };\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Constants\n   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n  /**\n   * FixedColumns version\n   *  @name      FixedColumns.version\n   *  @type      String\n   *  @default   See code\n   *  @static\n   */\n\n  FixedColumns.version = \"3.3.3\";\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables API integration\n   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n  DataTable.Api.register('fixedColumns()', function () {\n    return this;\n  });\n  DataTable.Api.register('fixedColumns().update()', function () {\n    return this.iterator('table', function (ctx) {\n      if (ctx._oFixedColumns) {\n        ctx._oFixedColumns.fnUpdate();\n      }\n    });\n  });\n  DataTable.Api.register('fixedColumns().relayout()', function () {\n    return this.iterator('table', function (ctx) {\n      if (ctx._oFixedColumns) {\n        ctx._oFixedColumns.fnRedrawLayout();\n      }\n    });\n  });\n  DataTable.Api.register('rows().recalcHeight()', function () {\n    return this.iterator('row', function (ctx, idx) {\n      if (ctx._oFixedColumns) {\n        ctx._oFixedColumns.fnRecalculateHeight(this.row(idx).node());\n      }\n    });\n  });\n  DataTable.Api.register('fixedColumns().rowIndex()', function (row) {\n    row = $(row);\n    return row.parents('.DTFC_Cloned').length ? this.rows({\n      page: 'current'\n    }).indexes()[row.index()] : this.row(row).index();\n  });\n  DataTable.Api.register('fixedColumns().cellIndex()', function (cell) {\n    cell = $(cell);\n\n    if (cell.parents('.DTFC_Cloned').length) {\n      var rowClonedIdx = cell.parent().index();\n      var rowIdx = this.rows({\n        page: 'current'\n      }).indexes()[rowClonedIdx];\n      var columnIdx;\n\n      if (cell.parents('.DTFC_LeftWrapper').length) {\n        columnIdx = cell.index();\n      } else {\n        var columns = this.columns().flatten().length;\n        columnIdx = columns - this.context[0]._oFixedColumns.s.iRightColumns + cell.index();\n      }\n\n      return {\n        row: rowIdx,\n        column: this.column.index('toData', columnIdx),\n        columnVisible: columnIdx\n      };\n    } else {\n      return this.cell(cell).index();\n    }\n  });\n  DataTable.Api.registerPlural('cells().fixedNodes()', 'cell().fixedNode()', function () {\n    return this.iterator('cell', function (settings, row, column) {\n      return settings._oFixedColumns ? settings._oFixedColumns.fnToFixedNode(row, column) : this.cell(row, column).node();\n    }, 1);\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Initialisation\n   * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n  // Attach a listener to the document which listens for DataTables initialisation\n  // events so we can automatically initialise\n\n  $(document).on('init.dt.fixedColumns', function (e, settings) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    var init = settings.oInit.fixedColumns;\n    var defaults = DataTable.defaults.fixedColumns;\n\n    if (init || defaults) {\n      var opts = $.extend({}, init, defaults);\n\n      if (init !== false) {\n        new FixedColumns(settings, opts);\n      }\n    }\n  }); // Make FixedColumns accessible from the DataTables instance\n\n  $.fn.dataTable.FixedColumns = FixedColumns;\n  $.fn.DataTable.FixedColumns = FixedColumns;\n  return FixedColumns;\n});","map":{"version":3,"sources":["C:/Users/Sher/Desktop/datahub tagging ui/frontend/node_modules/datatables.net-fixedcolumns/js/dataTables.fixedColumns.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","_firefoxScroll","FixedColumns","dt","init","that","alert","camelToHungarian","defaults","dtSettings","Api","settings","s","aoColumns","length","rtl","nTable","css","dom","_oFixedColumns","_bInitComplete","oApi","_fnCallbackReg","_fnConstruct","extend","prototype","_fnDraw","_fnColCalc","_fnGridLayout","fnUpdate","nTr","_DTTC_iHeight","style","height","nTarget","iHeight","node","idx","inst","oInstance","parents","fnGetPosition","nodeName","toLowerCase","index","nTBody","colIdx","parentNode","row","_fnVisibleToColumnIndex","fnToFixedNode","rowIdx","found","iLeftColumns","clone","left","body","find","iRightColumns","right","table","cell","oInit","i","iLen","iWidth","fnVersionCheck","VERSION","oScroll","sX","_fnLog","classes","oClasses","grid","sScrollWrapper","scroller","sScrollBody","_fnGridSetup","mouseController","mouseDown","nTableWrapper","on","e","button","one","originalEvent","liner","scrollTop","wheelType","createElement","xDelta","type","deltaX","wheelDeltaX","scrollLeft","head","call","bFirstDraw","jqTable","column","vis","recalc","indexes","namespace","tableTop","eq","off","wrapper","remove","fnDraw","iLeftWidth","iRightWidth","aiInnerWidths","aiOuterWidths","each","col","th","nTh","border","filter","push","outerWidth","indexOf","parseInt","width","iTableColumns","oOverflow","_fnDTOverflow","block","header","nTHead","position","nSWrapper","nLeft","childNodes","nRight","insertBefore","appendChild","bar","headBlock","footBlock","nTFoot","footer","foot","oGrid","iBodyHeight","offsetHeight","iFullHeight","scrollbarAdjust","paddingRight","boxSizing","_firefoxScrollError","x","top","maxHeight","y","display","nTableScrollBody","out","iBarWidth","offsetWidth","clientWidth","clientHeight","bAll","_fnCloneLeft","_fnCloneRight","trigger","fnDrawCallback","jq","aiColumns","bVisible","_fnClone","aoOriginal","events","aReturn","aClones","aCloned","aRow","j","jLen","inArray","iCloned","nClone","unique","oClone","iColumn","iIndex","aoCloneLayout","jqCloneThead","aoFixedHeader","className","_fnCopyLayout","aoHeader","empty","_fnDrawHead","_fnDetectHeader","_fnEqualiseHeights","sHeightMatch","paddingBottom","marginBottom","getAttribute","removeAttribute","nBody","aiDisplay","nInnerThead","innerHTML","oStyle","paddingTop","borderTopWidth","borderBottomWidth","z","oFeatures","bServerSide","_iDisplayStart","aTds","aoData","anCells","children","n","cloneNode","setAttribute","html","margin","padding","oScroller","scrollerForcer","force","forcer","removeChild","aoFooter","jqCloneTfoot","aoCurrFooter","anUnique","_fnGetUniqueThs","nIn","aOut","toUpperCase","original","iHeight2","iHeightOriginal","iHeightClone","rootOriginal","getElementsByTagName","rootClone","jqBoxHack","iBoxHack","outerHeight","anOriginal","_fnGetTrNodes","anClone","heights","test","overflow","appendTo","version","register","iterator","ctx","fnRedrawLayout","fnRecalculateHeight","rows","page","rowClonedIdx","parent","columnIdx","columns","flatten","context","columnVisible","registerPlural","fixedColumns","opts"],"mappings":"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","sourcesContent":["/*! FixedColumns 3.3.3\n * Â©2010-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     FixedColumns\n * @description Freeze columns in place on a scrolling DataTable\n * @version     3.3.3\n * @file        dataTables.fixedColumns.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2010-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\nvar _firefoxScroll;\n\n/**\n * When making use of DataTables' x-axis scrolling feature, you may wish to\n * fix the left most column in place. This plug-in for DataTables provides\n * exactly this option (note for non-scrolling tables, please use the\n * FixedHeader plug-in, which can fix headers and footers). Key\n * features include:\n *\n * * Freezes the left or right most columns to the side of the table\n * * Option to freeze two or more columns\n * * Full integration with DataTables' scrolling options\n * * Speed - FixedColumns is fast in its operation\n *\n *  @class\n *  @constructor\n *  @global\n *  @param {object} dt DataTables instance. With DataTables 1.10 this can also\n *    be a jQuery collection, a jQuery selector, DataTables API instance or\n *    settings object.\n *  @param {object} [init={}] Configuration object for FixedColumns. Options are\n *    defined by {@link FixedColumns.defaults}\n *\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.8.0+\n *\n *  @example\n *      var table = $('#example').dataTable( {\n *        \"scrollX\": \"100%\"\n *      } );\n *      new $.fn.dataTable.fixedColumns( table );\n */\nvar FixedColumns = function ( dt, init ) {\n\tvar that = this;\n\n\t/* Sanity check - you just know it will happen */\n\tif ( ! ( this instanceof FixedColumns ) ) {\n\t\talert( \"FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.\" );\n\t\treturn;\n\t}\n\n\tif ( init === undefined || init === true ) {\n\t\tinit = {};\n\t}\n\n\t// Use the DataTables Hungarian notation mapping method, if it exists to\n\t// provide forwards compatibility for camel case variables\n\tvar camelToHungarian = $.fn.dataTable.camelToHungarian;\n\tif ( camelToHungarian ) {\n\t\tcamelToHungarian( FixedColumns.defaults, FixedColumns.defaults, true );\n\t\tcamelToHungarian( FixedColumns.defaults, init );\n\t}\n\n\t// v1.10 allows the settings object to be got form a number of sources\n\tvar dtSettings = new $.fn.dataTable.Api( dt ).settings()[0];\n\n\t/**\n\t * Settings object which contains customisable information for FixedColumns instance\n\t * @namespace\n\t * @extends FixedColumns.defaults\n\t * @private\n\t */\n\tthis.s = {\n\t\t/**\n\t\t * DataTables settings objects\n\t\t *  @type     object\n\t\t *  @default  Obtained from DataTables instance\n\t\t */\n\t\t\"dt\": dtSettings,\n\n\t\t/**\n\t\t * Number of columns in the DataTable - stored for quick access\n\t\t *  @type     int\n\t\t *  @default  Obtained from DataTables instance\n\t\t */\n\t\t\"iTableColumns\": dtSettings.aoColumns.length,\n\n\t\t/**\n\t\t * Original outer widths of the columns as rendered by DataTables - used to calculate\n\t\t * the FixedColumns grid bounding box\n\t\t *  @type     array.<int>\n\t\t *  @default  []\n\t\t */\n\t\t\"aiOuterWidths\": [],\n\n\t\t/**\n\t\t * Original inner widths of the columns as rendered by DataTables - used to apply widths\n\t\t * to the columns\n\t\t *  @type     array.<int>\n\t\t *  @default  []\n\t\t */\n\t\t\"aiInnerWidths\": [],\n\n\n\t\t/**\n\t\t * Is the document layout right-to-left\n\t\t * @type boolean\n\t\t */\n\t\trtl: $(dtSettings.nTable).css('direction') === 'rtl'\n\t};\n\n\n\t/**\n\t * DOM elements used by the class instance\n\t * @namespace\n\t * @private\n\t *\n\t */\n\tthis.dom = {\n\t\t/**\n\t\t * DataTables scrolling element\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"scroller\": null,\n\n\t\t/**\n\t\t * DataTables header table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"header\": null,\n\n\t\t/**\n\t\t * DataTables body table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"body\": null,\n\n\t\t/**\n\t\t * DataTables footer table\n\t\t *  @type     node\n\t\t *  @default  null\n\t\t */\n\t\t\"footer\": null,\n\n\t\t/**\n\t\t * Display grid elements\n\t\t * @namespace\n\t\t */\n\t\t\"grid\": {\n\t\t\t/**\n\t\t\t * Grid wrapper. This is the container element for the 3x3 grid\n\t\t\t *  @type     node\n\t\t\t *  @default  null\n\t\t\t */\n\t\t\t\"wrapper\": null,\n\n\t\t\t/**\n\t\t\t * DataTables scrolling element. This element is the DataTables\n\t\t\t * component in the display grid (making up the main table - i.e.\n\t\t\t * not the fixed columns).\n\t\t\t *  @type     node\n\t\t\t *  @default  null\n\t\t\t */\n\t\t\t\"dt\": null,\n\n\t\t\t/**\n\t\t\t * Left fixed column grid components\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"left\": {\n\t\t\t\t\"wrapper\": null,\n\t\t\t\t\"head\": null,\n\t\t\t\t\"body\": null,\n\t\t\t\t\"foot\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Right fixed column grid components\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"right\": {\n\t\t\t\t\"wrapper\": null,\n\t\t\t\t\"head\": null,\n\t\t\t\t\"body\": null,\n\t\t\t\t\"foot\": null\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Cloned table nodes\n\t\t * @namespace\n\t\t */\n\t\t\"clone\": {\n\t\t\t/**\n\t\t\t * Left column cloned table nodes\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"left\": {\n\t\t\t\t/**\n\t\t\t\t * Cloned header table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"header\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned body table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"body\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned footer table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"footer\": null\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Right column cloned table nodes\n\t\t\t * @namespace\n\t\t\t */\n\t\t\t\"right\": {\n\t\t\t\t/**\n\t\t\t\t * Cloned header table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"header\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned body table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"body\": null,\n\n\t\t\t\t/**\n\t\t\t\t * Cloned footer table\n\t\t\t\t *  @type     node\n\t\t\t\t *  @default  null\n\t\t\t\t */\n\t\t\t\t\"footer\": null\n\t\t\t}\n\t\t}\n\t};\n\n\tif ( dtSettings._oFixedColumns ) {\n\t\tthrow 'FixedColumns already initialised on this table';\n\t}\n\n\t/* Attach the instance to the DataTables instance so it can be accessed easily */\n\tdtSettings._oFixedColumns = this;\n\n\t/* Let's do it */\n\tif ( ! dtSettings._bInitComplete )\n\t{\n\t\tdtSettings.oApi._fnCallbackReg( dtSettings, 'aoInitComplete', function () {\n\t\t\tthat._fnConstruct( init );\n\t\t}, 'FixedColumns' );\n\t}\n\telse\n\t{\n\t\tthis._fnConstruct( init );\n\t}\n};\n\n\n\n$.extend( FixedColumns.prototype , {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\t/**\n\t * Update the fixed columns - including headers and footers. Note that FixedColumns will\n\t * automatically update the display whenever the host DataTable redraws.\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // at some later point when the table has been manipulated....\n\t *      fc.fnUpdate();\n\t */\n\t\"fnUpdate\": function ()\n\t{\n\t\tthis._fnDraw( true );\n\t},\n\n\n\t/**\n\t * Recalculate the resizes of the 3x3 grid that FixedColumns uses for display of the table.\n\t * This is useful if you update the width of the table container. Note that FixedColumns will\n\t * perform this function automatically when the window.resize event is fired.\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // Resize the table container and then have FixedColumns adjust its layout....\n\t *      $('#content').width( 1200 );\n\t *      fc.fnRedrawLayout();\n\t */\n\t\"fnRedrawLayout\": function ()\n\t{\n\t\tthis._fnColCalc();\n\t\tthis._fnGridLayout();\n\t\tthis.fnUpdate();\n\t},\n\n\n\t/**\n\t * Mark a row such that it's height should be recalculated when using 'semiauto' row\n\t * height matching. This function will have no effect when 'none' or 'auto' row height\n\t * matching is used.\n\t *  @param   {Node} nTr TR element that should have it's height recalculated\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // manipulate the table - mark the row as needing an update then update the table\n\t *      // this allows the redraw performed by DataTables fnUpdate to recalculate the row\n\t *      // height\n\t *      fc.fnRecalculateHeight();\n\t *      table.fnUpdate( $('#example tbody tr:eq(0)')[0], [\"insert date\", 1, 2, 3 ... ]);\n\t */\n\t\"fnRecalculateHeight\": function ( nTr )\n\t{\n\t\tdelete nTr._DTTC_iHeight;\n\t\tnTr.style.height = 'auto';\n\t},\n\n\n\t/**\n\t * Set the height of a given row - provides cross browser compatibility\n\t *  @param   {Node} nTarget TR element that should have it's height recalculated\n\t *  @param   {int} iHeight Height in pixels to set\n\t *  @returns {void}\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      var fc = new $.fn.dataTable.fixedColumns( table );\n\t *\n\t *      // You may want to do this after manipulating a row in the fixed column\n\t *      fc.fnSetRowHeight( $('#example tbody tr:eq(0)')[0], 50 );\n\t */\n\t\"fnSetRowHeight\": function ( nTarget, iHeight )\n\t{\n\t\tnTarget.style.height = iHeight+\"px\";\n\t},\n\n\n\t/**\n\t * Get data index information about a row or cell in the table body.\n\t * This function is functionally identical to fnGetPosition in DataTables,\n\t * taking the same parameter (TH, TD or TR node) and returning exactly the\n\t * the same information (data index information). THe difference between\n\t * the two is that this method takes into account the fixed columns in the\n\t * table, so you can pass in nodes from the master table, or the cloned\n\t * tables and get the index position for the data in the main table.\n\t *  @param {node} node TR, TH or TD element to get the information about\n\t *  @returns {int} If nNode is given as a TR, then a single index is \n\t *    returned, or if given as a cell, an array of [row index, column index\n\t *    (visible), column index (all)] is given.\n\t */\n\t\"fnGetPosition\": function ( node )\n\t{\n\t\tvar idx;\n\t\tvar inst = this.s.dt.oInstance;\n\n\t\tif ( ! $(node).parents('.DTFC_Cloned').length )\n\t\t{\n\t\t\t// Not in a cloned table\n\t\t\treturn inst.fnGetPosition( node );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Its in the cloned table, so need to look up position\n\t\t\tif ( node.nodeName.toLowerCase() === 'tr' ) {\n\t\t\t\tidx = $(node).index();\n\t\t\t\treturn inst.fnGetPosition( $('tr', this.s.dt.nTBody)[ idx ] );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar colIdx = $(node).index();\n\t\t\t\tidx = $(node.parentNode).index();\n\t\t\t\tvar row = inst.fnGetPosition( $('tr', this.s.dt.nTBody)[ idx ] );\n\n\t\t\t\treturn [\n\t\t\t\t\trow,\n\t\t\t\t\tcolIdx,\n\t\t\t\t\tinst.oApi._fnVisibleToColumnIndex( this.s.dt, colIdx )\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t},\n\n\tfnToFixedNode: function ( rowIdx, colIdx )\n\t{\n\t\tvar found;\n\n\t\tif ( colIdx < this.s.iLeftColumns ) {\n\t\t\tfound = $(this.dom.clone.left.body).find('[data-dt-row='+rowIdx+'][data-dt-column='+colIdx+']');\n\t\t}\n\t\telse if ( colIdx >= this.s.iRightColumns ) {\n\t\t\tfound = $(this.dom.clone.right.body).find('[data-dt-row='+rowIdx+'][data-dt-column='+colIdx+']');\n\t\t}\n\n\t\tif ( found && found.length ) {\n\t\t\treturn found[0];\n\t\t}\n\n\t\t// Fallback - non-fixed node\n\t\tvar table = new $.fn.dataTable.Api(this.s.dt);\n\t\treturn table.cell(rowIdx, colIdx).node();\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods (they are of course public in JS, but recommended as private)\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n\t/**\n\t * Initialisation for FixedColumns\n\t *  @param   {Object} oInit User settings for initialisation\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnConstruct\": function ( oInit )\n\t{\n\t\tvar i, iLen, iWidth,\n\t\t\tthat = this;\n\n\t\t/* Sanity checking */\n\t\tif ( typeof this.s.dt.oInstance.fnVersionCheck != 'function' ||\n\t\t     this.s.dt.oInstance.fnVersionCheck( '1.8.0' ) !== true )\n\t\t{\n\t\t\talert( \"FixedColumns \"+FixedColumns.VERSION+\" required DataTables 1.8.0 or later. \"+\n\t\t\t\t\"Please upgrade your DataTables installation\" );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.s.dt.oScroll.sX === \"\" )\n\t\t{\n\t\t\tthis.s.dt.oInstance.oApi._fnLog( this.s.dt, 1, \"FixedColumns is not needed (no \"+\n\t\t\t\t\"x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for \"+\n\t\t\t\t\"column fixing when scrolling is not enabled\" );\n\t\t\treturn;\n\t\t}\n\n\t\t/* Apply the settings from the user / defaults */\n\t\tthis.s = $.extend( true, this.s, FixedColumns.defaults, oInit );\n\n\t\t/* Set up the DOM as we need it and cache nodes */\n\t\tvar classes = this.s.dt.oClasses;\n\t\tthis.dom.grid.dt = $(this.s.dt.nTable).parents('div.'+classes.sScrollWrapper)[0];\n\t\tthis.dom.scroller = $('div.'+classes.sScrollBody, this.dom.grid.dt )[0];\n\n\t\t/* Set up the DOM that we want for the fixed column layout grid */\n\t\tthis._fnColCalc();\n\t\tthis._fnGridSetup();\n\n\t\t/* Event handlers */\n\t\tvar mouseController;\n\t\tvar mouseDown = false;\n\n\t\t// When the mouse is down (drag scroll) the mouse controller cannot\n\t\t// change, as the browser keeps the original element as the scrolling one\n\t\t$(this.s.dt.nTableWrapper).on( 'mousedown.DTFC', function (e) {\n\t\t\tif ( e.button === 0 ) {\n\t\t\t\tmouseDown = true;\n\n\t\t\t\t$(document).one( 'mouseup', function () {\n\t\t\t\t\tmouseDown = false;\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// When the body is scrolled - scroll the left and right columns\n\t\t$(this.dom.scroller)\n\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\tif ( ! mouseDown ) {\n\t\t\t\t\tmouseController = 'main';\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'scroll.DTFC', function (e) {\n\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\tmouseController = 'main';\n\t\t\t\t}\n\n\t\t\t\tif ( mouseController === 'main' || mouseController === 'key' ) {\n\t\t\t\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t\t\t\tthat.dom.grid.left.liner.scrollTop = that.dom.scroller.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t\t\t\tthat.dom.grid.right.liner.scrollTop = that.dom.scroller.scrollTop;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\tvar wheelType = 'onwheel' in document.createElement('div') ?\n\t\t\t'wheel.DTFC' :\n\t\t\t'mousewheel.DTFC';\n\n\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t// When scrolling the left column, scroll the body and right column\n\t\t\t$(that.dom.grid.left.liner)\n\t\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\t\tif ( ! mouseDown && mouseController !== 'key' ) {\n\t\t\t\t\t\tmouseController = 'left';\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'scroll.DTFC', function ( e ) {\n\t\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\t\tmouseController = 'left';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( mouseController === 'left' ) {\n\t\t\t\t\t\tthat.dom.scroller.scrollTop = that.dom.grid.left.liner.scrollTop;\n\t\t\t\t\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t\t\t\t\tthat.dom.grid.right.liner.scrollTop = that.dom.grid.left.liner.scrollTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( wheelType, function(e) {\n\t\t\t\t\tmouseController = 'left';\n\n\t\t\t\t\t// Pass horizontal scrolling through\n\t\t\t\t\tvar xDelta = e.type === 'wheel' ?\n\t\t\t\t\t\t-e.originalEvent.deltaX :\n\t\t\t\t\t\te.originalEvent.wheelDeltaX;\n\t\t\t\t\tthat.dom.scroller.scrollLeft -= xDelta;\n\t\t\t\t} );\n\n\t\t\t// Header will not trigger scroll on left column, but might on `main` (sorting)\n\t\t\t$(that.dom.grid.left.head).on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\tmouseController = 'main';\n\t\t\t});\n\t\t}\n\n\t\tif ( that.s.iRightColumns > 0 ) {\n\t\t\t// When scrolling the right column, scroll the body and the left column\n\t\t\t$(that.dom.grid.right.liner)\n\t\t\t\t.on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\t\tif ( ! mouseDown && mouseController !== 'key' ) {\n\t\t\t\t\t\tmouseController = 'right';\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( 'scroll.DTFC', function ( e ) {\n\t\t\t\t\tif ( ! mouseController && e.originalEvent ) {\n\t\t\t\t\t\tmouseController = 'right';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( mouseController === 'right' ) {\n\t\t\t\t\t\tthat.dom.scroller.scrollTop = that.dom.grid.right.liner.scrollTop;\n\t\t\t\t\t\tif ( that.s.iLeftColumns > 0 ) {\n\t\t\t\t\t\t\tthat.dom.grid.left.liner.scrollTop = that.dom.grid.right.liner.scrollTop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t.on( wheelType, function(e) {\n\t\t\t\t\tmouseController = 'right';\n\n\t\t\t\t\t// Pass horizontal scrolling through\n\t\t\t\t\tvar xDelta = e.type === 'wheel' ?\n\t\t\t\t\t\t-e.originalEvent.deltaX :\n\t\t\t\t\t\te.originalEvent.wheelDeltaX;\n\t\t\t\t\tthat.dom.scroller.scrollLeft -= xDelta;\n\t\t\t\t} );\n\n\t\t\t$(that.dom.grid.right.head).on( 'mouseover.DTFC touchstart.DTFC', function () {\n\t\t\t\tmouseController = 'main';\n\t\t\t});\n\t\t}\n\n\t\t$(window).on( 'resize.DTFC', function () {\n\t\t\tthat._fnGridLayout.call( that );\n\t\t} );\n\n\t\tvar bFirstDraw = true;\n\t\tvar jqTable = $(this.s.dt.nTable);\n\n\t\tjqTable\n\t\t\t.on( 'draw.dt.DTFC', function () {\n\t\t\t\tthat._fnColCalc();\n\t\t\t\tthat._fnDraw.call( that, bFirstDraw );\n\t\t\t\tbFirstDraw = false;\n\t\t\t} )\n\t\t\t.on('key-focus.dt.DTFC', function () {\n\t\t\t\t// KeyTable navigation needs to be main focused\n\t\t\t\tmouseController = 'key';\n\t\t\t})\n\t\t\t.on( 'column-sizing.dt.DTFC', function () {\n\t\t\t\tthat._fnColCalc();\n\t\t\t\tthat._fnGridLayout( that );\n\t\t\t} )\n\t\t\t.on( 'column-visibility.dt.DTFC', function ( e, settings, column, vis, recalc ) {\n\t\t\t\tif ( recalc === undefined || recalc ) {\n\t\t\t\t\tthat._fnColCalc();\n\t\t\t\t\tthat._fnGridLayout( that );\n\t\t\t\t\tthat._fnDraw( true );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'select.dt.DTFC deselect.dt.DTFC', function ( e, dt, type, indexes ) {\n\t\t\t\tif ( e.namespace === 'dt' ) {\n\t\t\t\t\tthat._fnDraw( false );\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'position.dts.dt.DTFC', function (e, tableTop) {\n\t\t\t\t// Sync up with Scroller\n\t\t\t\tif (that.dom.grid.left.body) {\n\t\t\t\t\t$(that.dom.grid.left.body).find('table').eq(0).css('top', tableTop);\n\t\t\t\t}\n\n\t\t\t\tif (that.dom.grid.right.body) {\n\t\t\t\t\t$(that.dom.grid.right.body).find('table').eq(0).css('top', tableTop);\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.on( 'destroy.dt.DTFC', function () {\n\t\t\t\tjqTable.off( '.DTFC' );\n\n\t\t\t\t$(that.dom.scroller).off( '.DTFC' );\n\t\t\t\t$(window).off( '.DTFC' );\n\t\t\t\t$(that.s.dt.nTableWrapper).off( '.DTFC' );\n\n\t\t\t\t$(that.dom.grid.left.liner).off( '.DTFC '+wheelType );\n\t\t\t\t$(that.dom.grid.left.wrapper).remove();\n\n\t\t\t\t$(that.dom.grid.right.liner).off( '.DTFC '+wheelType );\n\t\t\t\t$(that.dom.grid.right.wrapper).remove();\n\t\t\t} );\n\n\t\t/* Get things right to start with - note that due to adjusting the columns, there must be\n\t\t * another redraw of the main table. It doesn't need to be a full redraw however.\n\t\t */\n\t\tthis._fnGridLayout();\n\t\tthis.s.dt.oInstance.fnDraw(false);\n\t},\n\n\n\t/**\n\t * Calculate the column widths for the grid layout\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnColCalc\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar iLeftWidth = 0;\n\t\tvar iRightWidth = 0;\n\n\t\tthis.s.aiInnerWidths = [];\n\t\tthis.s.aiOuterWidths = [];\n\n\t\t$.each( this.s.dt.aoColumns, function (i, col) {\n\t\t\tvar th = $(col.nTh);\n\t\t\tvar border;\n\n\t\t\tif ( ! th.filter(':visible').length ) {\n\t\t\t\tthat.s.aiInnerWidths.push( 0 );\n\t\t\t\tthat.s.aiOuterWidths.push( 0 );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Inner width is used to assign widths to cells\n\t\t\t\t// Outer width is used to calculate the container\n\t\t\t\tvar iWidth = th.outerWidth();\n\n\t\t\t\t// When working with the left most-cell, need to add on the\n\t\t\t\t// table's border to the outerWidth, since we need to take\n\t\t\t\t// account of it, but it isn't in any cell\n\t\t\t\tif ( that.s.aiOuterWidths.length === 0 ) {\n\t\t\t\t\tborder = $(that.s.dt.nTable).css('border-left-width');\n\t\t\t\t\tiWidth += typeof border === 'string' && border.indexOf('px') === -1 ?\n\t\t\t\t\t\t1 :\n\t\t\t\t\t\tparseInt( border, 10 );\n\t\t\t\t}\n\n\t\t\t\t// Likewise with the final column on the right\n\t\t\t\tif ( that.s.aiOuterWidths.length === that.s.dt.aoColumns.length-1 ) {\n\t\t\t\t\tborder = $(that.s.dt.nTable).css('border-right-width');\n\t\t\t\t\tiWidth += typeof border === 'string' && border.indexOf('px') === -1 ?\n\t\t\t\t\t\t1 :\n\t\t\t\t\t\tparseInt( border, 10 );\n\t\t\t\t}\n\n\t\t\t\tthat.s.aiOuterWidths.push( iWidth );\n\t\t\t\tthat.s.aiInnerWidths.push( th.width() );\n\n\t\t\t\tif ( i < that.s.iLeftColumns )\n\t\t\t\t{\n\t\t\t\t\tiLeftWidth += iWidth;\n\t\t\t\t}\n\n\t\t\t\tif ( that.s.iTableColumns-that.s.iRightColumns <= i )\n\t\t\t\t{\n\t\t\t\t\tiRightWidth += iWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\tthis.s.iLeftWidth = iLeftWidth;\n\t\tthis.s.iRightWidth = iRightWidth;\n\t},\n\n\n\t/**\n\t * Set up the DOM for the fixed column. The way the layout works is to create a 1x3 grid\n\t * for the left column, the DataTable (for which we just reuse the scrolling element DataTable\n\t * puts into the DOM) and the right column. In each of he two fixed column elements there is a\n\t * grouping wrapper element and then a head, body and footer wrapper. In each of these we then\n\t * place the cloned header, body or footer tables. This effectively gives as 3x3 grid structure.\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnGridSetup\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar oOverflow = this._fnDTOverflow();\n\t\tvar block;\n\n\t\tthis.dom.body = this.s.dt.nTable;\n\t\tthis.dom.header = this.s.dt.nTHead.parentNode;\n\t\tthis.dom.header.parentNode.parentNode.style.position = \"relative\";\n\n\t\tvar nSWrapper =\n\t\t\t$('<div class=\"DTFC_ScrollWrapper\" style=\"position:relative; clear:both;\">'+\n\t\t\t\t'<div class=\"DTFC_LeftWrapper\" style=\"position:absolute; top:0; left:0;\" aria-hidden=\"true\">'+\n\t\t\t\t\t'<div class=\"DTFC_LeftHeadWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>'+\n\t\t\t\t\t'<div class=\"DTFC_LeftBodyWrapper\" style=\"position:relative; top:0; left:0; height:0; overflow:hidden;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_LeftBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_LeftFootWrapper\" style=\"position:relative; top:0; left:0; overflow:hidden;\"></div>'+\n\t\t\t\t'</div>'+\n\t\t\t\t'<div class=\"DTFC_RightWrapper\" style=\"position:absolute; top:0; right:0;\" aria-hidden=\"true\">'+\n\t\t\t\t\t'<div class=\"DTFC_RightHeadWrapper\" style=\"position:relative; top:0; left:0;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightHeadBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_RightBodyWrapper\" style=\"position:relative; top:0; left:0; height:0; overflow:hidden;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightBodyLiner\" style=\"position:relative; top:0; left:0; overflow-y:scroll;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t\t'<div class=\"DTFC_RightFootWrapper\" style=\"position:relative; top:0; left:0;\">'+\n\t\t\t\t\t\t'<div class=\"DTFC_RightFootBlocker DTFC_Blocker\" style=\"position:absolute; top:0; bottom:0;\"></div>'+\n\t\t\t\t\t'</div>'+\n\t\t\t\t'</div>'+\n\t\t\t'</div>')[0];\n\t\tvar nLeft = nSWrapper.childNodes[0];\n\t\tvar nRight = nSWrapper.childNodes[1];\n\n\t\tthis.dom.grid.dt.parentNode.insertBefore( nSWrapper, this.dom.grid.dt );\n\t\tnSWrapper.appendChild( this.dom.grid.dt );\n\n\t\tthis.dom.grid.wrapper = nSWrapper;\n\n\t\tif ( this.s.iLeftColumns > 0 )\n\t\t{\n\t\t\tthis.dom.grid.left.wrapper = nLeft;\n\t\t\tthis.dom.grid.left.head = nLeft.childNodes[0];\n\t\t\tthis.dom.grid.left.body = nLeft.childNodes[1];\n\t\t\tthis.dom.grid.left.liner = $('div.DTFC_LeftBodyLiner', nSWrapper)[0];\n\n\t\t\tnSWrapper.appendChild( nLeft );\n\t\t}\n\n\t\tif ( this.s.iRightColumns > 0 )\n\t\t{\n\t\t\tthis.dom.grid.right.wrapper = nRight;\n\t\t\tthis.dom.grid.right.head = nRight.childNodes[0];\n\t\t\tthis.dom.grid.right.body = nRight.childNodes[1];\n\t\t\tthis.dom.grid.right.liner = $('div.DTFC_RightBodyLiner', nSWrapper)[0];\n\n\t\t\tnRight.style.right = oOverflow.bar+\"px\";\n\n\t\t\tblock = $('div.DTFC_RightHeadBlocker', nSWrapper)[0];\n\t\t\tblock.style.width = oOverflow.bar+\"px\";\n\t\t\tblock.style.right = -oOverflow.bar+\"px\";\n\t\t\tthis.dom.grid.right.headBlock = block;\n\n\t\t\tblock = $('div.DTFC_RightFootBlocker', nSWrapper)[0];\n\t\t\tblock.style.width = oOverflow.bar+\"px\";\n\t\t\tblock.style.right = -oOverflow.bar+\"px\";\n\t\t\tthis.dom.grid.right.footBlock = block;\n\n\t\t\tnSWrapper.appendChild( nRight );\n\t\t}\n\n\t\tif ( this.s.dt.nTFoot )\n\t\t{\n\t\t\tthis.dom.footer = this.s.dt.nTFoot.parentNode;\n\t\t\tif ( this.s.iLeftColumns > 0 )\n\t\t\t{\n\t\t\t\tthis.dom.grid.left.foot = nLeft.childNodes[2];\n\t\t\t}\n\t\t\tif ( this.s.iRightColumns > 0 )\n\t\t\t{\n\t\t\t\tthis.dom.grid.right.foot = nRight.childNodes[2];\n\t\t\t}\n\t\t}\n\n\t\t// RTL support - swap the position of the left and right columns (#48)\n\t\tif ( this.s.rtl ) {\n\t\t\t$('div.DTFC_RightHeadBlocker', nSWrapper).css( {\n\t\t\t\tleft: -oOverflow.bar+'px',\n\t\t\t\tright: ''\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Style and position the grid used for the FixedColumns layout\n\t *  @returns {void}\n\t *  @private\n\t */\n\t\"_fnGridLayout\": function ()\n\t{\n\t\tvar that = this;\n\t\tvar oGrid = this.dom.grid;\n\t\tvar iWidth = $(oGrid.wrapper).width();\n\t\tvar iBodyHeight = this.s.dt.nTable.parentNode.offsetHeight;\n\t\tvar iFullHeight = this.s.dt.nTable.parentNode.parentNode.offsetHeight;\n\t\tvar oOverflow = this._fnDTOverflow();\n\t\tvar iLeftWidth = this.s.iLeftWidth;\n\t\tvar iRightWidth = this.s.iRightWidth;\n\t\tvar rtl = $(this.dom.body).css('direction') === 'rtl';\n\t\tvar wrapper;\n\t\tvar scrollbarAdjust = function ( node, width ) {\n\t\t\tif ( ! oOverflow.bar ) {\n\t\t\t\t// If there is no scrollbar (Macs) we need to hide the auto scrollbar\n\t\t\t\tnode.style.width = (width+20)+\"px\";\n\t\t\t\tnode.style.paddingRight = \"20px\";\n\t\t\t\tnode.style.boxSizing = \"border-box\";\n\t\t\t}\n\t\t\telse if ( that._firefoxScrollError() ) {\n\t\t\t\t// See the above function for why this is required\n\t\t\t\tif ( $(node).height() > 34 ) {\n\t\t\t\t\tnode.style.width = (width+oOverflow.bar)+\"px\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Otherwise just overflow by the scrollbar\n\t\t\t\tnode.style.width = (width+oOverflow.bar)+\"px\";\n\t\t\t}\n\t\t};\n\n\t\t// When x scrolling - don't paint the fixed columns over the x scrollbar\n\t\tif ( oOverflow.x )\n\t\t{\n\t\t\tiBodyHeight -= oOverflow.bar;\n\t\t}\n\n\t\toGrid.wrapper.style.height = iFullHeight+\"px\";\n\n\t\tif ( this.s.iLeftColumns > 0 )\n\t\t{\n\t\t\twrapper = oGrid.left.wrapper;\n\t\t\twrapper.style.width = iLeftWidth+'px';\n\t\t\twrapper.style.height = '1px';\n\n\t\t\t// Swap the position of the left and right columns for rtl (#48)\n\t\t\t// This is always up against the edge, scrollbar on the far side\n\t\t\tif ( rtl ) {\n\t\t\t\twrapper.style.left = '';\n\t\t\t\twrapper.style.right = 0;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twrapper.style.left = 0;\n\t\t\t\twrapper.style.right = '';\n\t\t\t}\n\n\t\t\toGrid.left.body.style.height = iBodyHeight+\"px\";\n\t\t\tif ( oGrid.left.foot ) {\n\t\t\t\toGrid.left.foot.style.top = (oOverflow.x ? oOverflow.bar : 0)+\"px\"; // shift footer for scrollbar\n\t\t\t}\n\n\t\t\tscrollbarAdjust( oGrid.left.liner, iLeftWidth );\n\t\t\toGrid.left.liner.style.height = iBodyHeight+\"px\";\n\t\t\toGrid.left.liner.style.maxHeight = iBodyHeight+\"px\";\n\t\t}\n\n\t\tif ( this.s.iRightColumns > 0 )\n\t\t{\n\t\t\twrapper = oGrid.right.wrapper;\n\t\t\twrapper.style.width = iRightWidth+'px';\n\t\t\twrapper.style.height = '1px';\n\n\t\t\t// Need to take account of the vertical scrollbar\n\t\t\tif ( this.s.rtl ) {\n\t\t\t\twrapper.style.left = oOverflow.y ? oOverflow.bar+'px' : 0;\n\t\t\t\twrapper.style.right = '';\n\t\t\t}\n\t\t\telse {\n\t\t\t\twrapper.style.left = '';\n\t\t\t\twrapper.style.right = oOverflow.y ? oOverflow.bar+'px' : 0;\n\t\t\t}\n\n\t\t\toGrid.right.body.style.height = iBodyHeight+\"px\";\n\t\t\tif ( oGrid.right.foot ) {\n\t\t\t\toGrid.right.foot.style.top = (oOverflow.x ? oOverflow.bar : 0)+\"px\";\n\t\t\t}\n\n\t\t\tscrollbarAdjust( oGrid.right.liner, iRightWidth );\n\t\t\toGrid.right.liner.style.height = iBodyHeight+\"px\";\n\t\t\toGrid.right.liner.style.maxHeight = iBodyHeight+\"px\";\n\n\t\t\toGrid.right.headBlock.style.display = oOverflow.y ? 'block' : 'none';\n\t\t\toGrid.right.footBlock.style.display = oOverflow.y ? 'block' : 'none';\n\t\t}\n\t},\n\n\n\t/**\n\t * Get information about the DataTable's scrolling state - specifically if the table is scrolling\n\t * on either the x or y axis, and also the scrollbar width.\n\t *  @returns {object} Information about the DataTables scrolling state with the properties:\n\t *    'x', 'y' and 'bar'\n\t *  @private\n\t */\n\t\"_fnDTOverflow\": function ()\n\t{\n\t\tvar nTable = this.s.dt.nTable;\n\t\tvar nTableScrollBody = nTable.parentNode;\n\t\tvar out = {\n\t\t\t\"x\": false,\n\t\t\t\"y\": false,\n\t\t\t\"bar\": this.s.dt.oScroll.iBarWidth\n\t\t};\n\n\t\tif ( nTable.offsetWidth > nTableScrollBody.clientWidth )\n\t\t{\n\t\t\tout.x = true;\n\t\t}\n\n\t\tif ( nTable.offsetHeight > nTableScrollBody.clientHeight )\n\t\t{\n\t\t\tout.y = true;\n\t\t}\n\n\t\treturn out;\n\t},\n\n\n\t/**\n\t * Clone and position the fixed columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnDraw\": function ( bAll )\n\t{\n\t\tthis._fnGridLayout();\n\t\tthis._fnCloneLeft( bAll );\n\t\tthis._fnCloneRight( bAll );\n\n\t\t$(this.dom.scroller).trigger('scroll');\n\n\t\t/* Draw callback function */\n\t\tif ( this.s.fnDrawCallback !== null )\n\t\t{\n\t\t\tthis.s.fnDrawCallback.call( this, this.dom.clone.left, this.dom.clone.right );\n\t\t}\n\n\t\t/* Event triggering */\n\t\t$(this).trigger( 'draw.dtfc', {\n\t\t\t\"leftClone\": this.dom.clone.left,\n\t\t\t\"rightClone\": this.dom.clone.right\n\t\t} );\n\t},\n\n\n\t/**\n\t * Clone the right columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnCloneRight\": function ( bAll )\n\t{\n\t\tif ( this.s.iRightColumns <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, jq,\n\t\t\taiColumns = [];\n\n\t\tfor ( i=this.s.iTableColumns-this.s.iRightColumns ; i<this.s.iTableColumns ; i++ ) {\n\t\t\tif ( this.s.dt.aoColumns[i].bVisible ) {\n\t\t\t\taiColumns.push( i );\n\t\t\t}\n\t\t}\n\n\t\tthis._fnClone( this.dom.clone.right, this.dom.grid.right, aiColumns, bAll );\n\t},\n\n\n\t/**\n\t * Clone the left columns\n\t *  @returns {void}\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnCloneLeft\": function ( bAll )\n\t{\n\t\tif ( this.s.iLeftColumns <= 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, jq,\n\t\t\taiColumns = [];\n\n\t\tfor ( i=0 ; i<this.s.iLeftColumns ; i++ ) {\n\t\t\tif ( this.s.dt.aoColumns[i].bVisible ) {\n\t\t\t\taiColumns.push( i );\n\t\t\t}\n\t\t}\n\n\t\tthis._fnClone( this.dom.clone.left, this.dom.grid.left, aiColumns, bAll );\n\t},\n\n\n\t/**\n\t * Make a copy of the layout object for a header or footer element from DataTables. Note that\n\t * this method will clone the nodes in the layout object.\n\t *  @returns {Array} Copy of the layout array\n\t *  @param   {Object} aoOriginal Layout array from DataTables (aoHeader or aoFooter)\n\t *  @param   {Object} aiColumns Columns to copy\n\t *  @param   {boolean} events Copy cell events or not\n\t *  @private\n\t */\n\t\"_fnCopyLayout\": function ( aoOriginal, aiColumns, events )\n\t{\n\t\tvar aReturn = [];\n\t\tvar aClones = [];\n\t\tvar aCloned = [];\n\n\t\tfor ( var i=0, iLen=aoOriginal.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar aRow = [];\n\t\t\taRow.nTr = $(aoOriginal[i].nTr).clone(events, false)[0];\n\n\t\t\tfor ( var j=0, jLen=this.s.iTableColumns ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tif ( $.inArray( j, aiColumns ) === -1 )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar iCloned = $.inArray( aoOriginal[i][j].cell, aCloned );\n\t\t\t\tif ( iCloned === -1 )\n\t\t\t\t{\n\t\t\t\t\tvar nClone = $(aoOriginal[i][j].cell).clone(events, false)[0];\n\t\t\t\t\taClones.push( nClone );\n\t\t\t\t\taCloned.push( aoOriginal[i][j].cell );\n\n\t\t\t\t\taRow.push( {\n\t\t\t\t\t\t\"cell\": nClone,\n\t\t\t\t\t\t\"unique\": aoOriginal[i][j].unique\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\taRow.push( {\n\t\t\t\t\t\t\"cell\": aClones[ iCloned ],\n\t\t\t\t\t\t\"unique\": aoOriginal[i][j].unique\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\taReturn.push( aRow );\n\t\t}\n\n\t\treturn aReturn;\n\t},\n\n\n\t/**\n\t * Clone the DataTable nodes and place them in the DOM (sized correctly)\n\t *  @returns {void}\n\t *  @param   {Object} oClone Object containing the header, footer and body cloned DOM elements\n\t *  @param   {Object} oGrid Grid object containing the display grid elements for the cloned\n\t *                    column (left or right)\n\t *  @param   {Array} aiColumns Column indexes which should be operated on from the DataTable\n\t *  @param   {Boolean} bAll Indicate if the header and footer should be updated as well (true)\n\t *  @private\n\t */\n\t\"_fnClone\": function ( oClone, oGrid, aiColumns, bAll )\n\t{\n\t\tvar that = this,\n\t\t\ti, iLen, j, jLen, jq, nTarget, iColumn, nClone, iIndex, aoCloneLayout,\n\t\t\tjqCloneThead, aoFixedHeader,\n\t\t\tdt = this.s.dt;\n\n\t\t/*\n\t\t * Header\n\t\t */\n\t\tif ( bAll )\n\t\t{\n\t\t\t$(oClone.header).remove();\n\n\t\t\toClone.header = $(this.dom.header).clone(true, false)[0];\n\t\t\toClone.header.className += \" DTFC_Cloned\";\n\t\t\toClone.header.style.width = \"100%\";\n\t\t\toGrid.head.appendChild( oClone.header );\n\n\t\t\t/* Copy the DataTables layout cache for the header for our floating column */\n\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoHeader, aiColumns, true );\n\t\t\tjqCloneThead = $('>thead', oClone.header);\n\t\t\tjqCloneThead.empty();\n\n\t\t\t/* Add the created cloned TR elements to the table */\n\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tjqCloneThead[0].appendChild( aoCloneLayout[i].nTr );\n\t\t\t}\n\n\t\t\t/* Use the handy _fnDrawHead function in DataTables to do the rowspan/colspan\n\t\t\t * calculations for us\n\t\t\t */\n\t\t\tdt.oApi._fnDrawHead( dt, aoCloneLayout, true );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/* To ensure that we copy cell classes exactly, regardless of colspan, multiple rows\n\t\t\t * etc, we make a copy of the header from the DataTable again, but don't insert the\n\t\t\t * cloned cells, just copy the classes across. To get the matching layout for the\n\t\t\t * fixed component, we use the DataTables _fnDetectHeader method, allowing 1:1 mapping\n\t\t\t */\n\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoHeader, aiColumns, false );\n\t\t\taoFixedHeader=[];\n\n\t\t\tdt.oApi._fnDetectHeader( aoFixedHeader, $('>thead', oClone.header)[0] );\n\n\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t{\n\t\t\t\tfor ( j=0, jLen=aoCloneLayout[i].length ; j<jLen ; j++ )\n\t\t\t\t{\n\t\t\t\t\taoFixedHeader[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n\n\t\t\t\t\t// If jQuery UI theming is used we need to copy those elements as well\n\t\t\t\t\t$('span.DataTables_sort_icon', aoFixedHeader[i][j].cell).each( function () {\n\t\t\t\t\t\tthis.className = $('span.DataTables_sort_icon', aoCloneLayout[i][j].cell)[0].className;\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._fnEqualiseHeights( 'thead', this.dom.header, oClone.header );\n\n\t\t/*\n\t\t * Body\n\t\t */\n\t\tif ( this.s.sHeightMatch == 'auto' )\n\t\t{\n\t\t\t/* Remove any heights which have been applied already and let the browser figure it out */\n\t\t\t$('>tbody>tr', that.dom.body).css('height', 'auto');\n\t\t}\n\n\t\tif ( oClone.body !== null )\n\t\t{\n\t\t\t$(oClone.body).remove();\n\t\t\toClone.body = null;\n\t\t}\n\n\t\toClone.body = $(this.dom.body).clone(true)[0];\n\t\toClone.body.className += \" DTFC_Cloned\";\n\t\toClone.body.style.paddingBottom = dt.oScroll.iBarWidth+\"px\";\n\t\toClone.body.style.marginBottom = (dt.oScroll.iBarWidth*2)+\"px\"; /* For IE */\n\t\tif ( oClone.body.getAttribute('id') !== null )\n\t\t{\n\t\t\toClone.body.removeAttribute('id');\n\t\t}\n\n\t\t$('>thead>tr', oClone.body).empty();\n\t\t$('>tfoot', oClone.body).remove();\n\n\t\tvar nBody = $('tbody', oClone.body)[0];\n\t\t$(nBody).empty();\n\t\tif ( dt.aiDisplay.length > 0 )\n\t\t{\n\t\t\t/* Copy the DataTables' header elements to force the column width in exactly the\n\t\t\t * same way that DataTables does it - have the header element, apply the width and\n\t\t\t * colapse it down\n\t\t\t */\n\t\t\tvar nInnerThead = $('>thead>tr', oClone.body)[0];\n\t\t\tfor ( iIndex=0 ; iIndex<aiColumns.length ; iIndex++ )\n\t\t\t{\n\t\t\t\tiColumn = aiColumns[iIndex];\n\n\t\t\t\tnClone = $(dt.aoColumns[iColumn].nTh).clone(true)[0];\n\t\t\t\tnClone.innerHTML = \"\";\n\n\t\t\t\tvar oStyle = nClone.style;\n\t\t\t\toStyle.paddingTop = \"0\";\n\t\t\t\toStyle.paddingBottom = \"0\";\n\t\t\t\toStyle.borderTopWidth = \"0\";\n\t\t\t\toStyle.borderBottomWidth = \"0\";\n\t\t\t\toStyle.height = 0;\n\t\t\t\toStyle.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\n\t\t\t\tnInnerThead.appendChild( nClone );\n\t\t\t}\n\n\t\t\t/* Add in the tbody elements, cloning form the master table */\n\t\t\t$('>tbody>tr', that.dom.body).each( function (z) {\n\t\t\t\tvar i = that.s.dt.oFeatures.bServerSide===false ?\n\t\t\t\t\tthat.s.dt.aiDisplay[ that.s.dt._iDisplayStart+z ] : z;\n\t\t\t\tvar aTds = that.s.dt.aoData[ i ].anCells || $(this).children('td, th');\n\n\t\t\t\tvar n = this.cloneNode(false);\n\t\t\t\tn.removeAttribute('id');\n\t\t\t\tn.setAttribute( 'data-dt-row', i );\n\n\t\t\t\tfor ( iIndex=0 ; iIndex<aiColumns.length ; iIndex++ )\n\t\t\t\t{\n\t\t\t\t\tiColumn = aiColumns[iIndex];\n\n\t\t\t\t\tif ( aTds.length > 0 )\n\t\t\t\t\t{\n\t\t\t\t\t\tnClone = $( aTds[iColumn] ).clone(true, true)[0];\n\t\t\t\t\t\tnClone.removeAttribute( 'id' );\n\t\t\t\t\t\tnClone.setAttribute( 'data-dt-row', i );\n\t\t\t\t\t\tnClone.setAttribute( 'data-dt-column', iColumn );\n\t\t\t\t\t\tn.appendChild( nClone );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnBody.appendChild( n );\n\t\t\t} );\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$('>tbody>tr', that.dom.body).each( function (z) {\n\t\t\t\tnClone = this.cloneNode(true);\n\t\t\t\tnClone.className += ' DTFC_NoData';\n\t\t\t\t$('td', nClone).html('');\n\t\t\t\tnBody.appendChild( nClone );\n\t\t\t} );\n\t\t}\n\n\t\toClone.body.style.width = \"100%\";\n\t\toClone.body.style.margin = \"0\";\n\t\toClone.body.style.padding = \"0\";\n\n\t\t// Interop with Scroller - need to use a height forcing element in the\n\t\t// scrolling area in the same way that Scroller does in the body scroll.\n\t\tif ( dt.oScroller !== undefined )\n\t\t{\n\t\t\tvar scrollerForcer = dt.oScroller.dom.force;\n\n\t\t\tif ( ! oGrid.forcer ) {\n\t\t\t\toGrid.forcer = scrollerForcer.cloneNode( true );\n\t\t\t\toGrid.liner.appendChild( oGrid.forcer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\toGrid.forcer.style.height = scrollerForcer.style.height;\n\t\t\t}\n\t\t}\n\n\t\toGrid.liner.appendChild( oClone.body );\n\n\t\tthis._fnEqualiseHeights( 'tbody', that.dom.body, oClone.body );\n\n\t\t/*\n\t\t * Footer\n\t\t */\n\t\tif ( dt.nTFoot !== null )\n\t\t{\n\t\t\tif ( bAll )\n\t\t\t{\n\t\t\t\tif ( oClone.footer !== null )\n\t\t\t\t{\n\t\t\t\t\toClone.footer.parentNode.removeChild( oClone.footer );\n\t\t\t\t}\n\t\t\t\toClone.footer = $(this.dom.footer).clone(true, true)[0];\n\t\t\t\toClone.footer.className += \" DTFC_Cloned\";\n\t\t\t\toClone.footer.style.width = \"100%\";\n\t\t\t\toGrid.foot.appendChild( oClone.footer );\n\n\t\t\t\t/* Copy the footer just like we do for the header */\n\t\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoFooter, aiColumns, true );\n\t\t\t\tvar jqCloneTfoot = $('>tfoot', oClone.footer);\n\t\t\t\tjqCloneTfoot.empty();\n\n\t\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tjqCloneTfoot[0].appendChild( aoCloneLayout[i].nTr );\n\t\t\t\t}\n\t\t\t\tdt.oApi._fnDrawHead( dt, aoCloneLayout, true );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\taoCloneLayout = this._fnCopyLayout( dt.aoFooter, aiColumns, false );\n\t\t\t\tvar aoCurrFooter=[];\n\n\t\t\t\tdt.oApi._fnDetectHeader( aoCurrFooter, $('>tfoot', oClone.footer)[0] );\n\n\t\t\t\tfor ( i=0, iLen=aoCloneLayout.length ; i<iLen ; i++ )\n\t\t\t\t{\n\t\t\t\t\tfor ( j=0, jLen=aoCloneLayout[i].length ; j<jLen ; j++ )\n\t\t\t\t\t{\n\t\t\t\t\t\taoCurrFooter[i][j].cell.className = aoCloneLayout[i][j].cell.className;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._fnEqualiseHeights( 'tfoot', this.dom.footer, oClone.footer );\n\t\t}\n\n\t\t/* Equalise the column widths between the header footer and body - body get's priority */\n\t\tvar anUnique = dt.oApi._fnGetUniqueThs( dt, $('>thead', oClone.header)[0] );\n\t\t$(anUnique).each( function (i) {\n\t\t\tiColumn = aiColumns[i];\n\t\t\tthis.style.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\t\t} );\n\n\t\tif ( that.s.dt.nTFoot !== null )\n\t\t{\n\t\t\tanUnique = dt.oApi._fnGetUniqueThs( dt, $('>tfoot', oClone.footer)[0] );\n\t\t\t$(anUnique).each( function (i) {\n\t\t\t\tiColumn = aiColumns[i];\n\t\t\t\tthis.style.width = that.s.aiInnerWidths[iColumn]+\"px\";\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * From a given table node (THEAD etc), get a list of TR direct child elements\n\t *  @param   {Node} nIn Table element to search for TR elements (THEAD, TBODY or TFOOT element)\n\t *  @returns {Array} List of TR elements found\n\t *  @private\n\t */\n\t\"_fnGetTrNodes\": function ( nIn )\n\t{\n\t\tvar aOut = [];\n\t\tfor ( var i=0, iLen=nIn.childNodes.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tif ( nIn.childNodes[i].nodeName.toUpperCase() == \"TR\" )\n\t\t\t{\n\t\t\t\taOut.push( nIn.childNodes[i] );\n\t\t\t}\n\t\t}\n\t\treturn aOut;\n\t},\n\n\n\t/**\n\t * Equalise the heights of the rows in a given table node in a cross browser way\n\t *  @returns {void}\n\t *  @param   {String} nodeName Node type - thead, tbody or tfoot\n\t *  @param   {Node} original Original node to take the heights from\n\t *  @param   {Node} clone Copy the heights to\n\t *  @private\n\t */\n\t\"_fnEqualiseHeights\": function ( nodeName, original, clone )\n\t{\n\t\tif ( this.s.sHeightMatch == 'none' && nodeName !== 'thead' && nodeName !== 'tfoot' )\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this,\n\t\t\ti, iLen, iHeight, iHeight2, iHeightOriginal, iHeightClone,\n\t\t\trootOriginal = original.getElementsByTagName(nodeName)[0],\n\t\t\trootClone    = clone.getElementsByTagName(nodeName)[0],\n\t\t\tjqBoxHack    = $('>'+nodeName+'>tr:eq(0)', original).children(':first'),\n\t\t\tiBoxHack     = jqBoxHack.outerHeight() - jqBoxHack.height(),\n\t\t\tanOriginal   = this._fnGetTrNodes( rootOriginal ),\n\t\t\tanClone      = this._fnGetTrNodes( rootClone ),\n\t\t\theights      = [];\n\n\t\tfor ( i=0, iLen=anClone.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tiHeightOriginal = anOriginal[i].offsetHeight;\n\t\t\tiHeightClone = anClone[i].offsetHeight;\n\t\t\tiHeight = iHeightClone > iHeightOriginal ? iHeightClone : iHeightOriginal;\n\n\t\t\tif ( this.s.sHeightMatch == 'semiauto' )\n\t\t\t{\n\t\t\t\tanOriginal[i]._DTTC_iHeight = iHeight;\n\t\t\t}\n\n\t\t\theights.push( iHeight );\n\t\t}\n\n\t\tfor ( i=0, iLen=anClone.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tanClone[i].style.height = heights[i]+\"px\";\n\t\t\tanOriginal[i].style.height = heights[i]+\"px\";\n\t\t}\n\t},\n\n\t/**\n\t * Determine if the UA suffers from Firefox's overflow:scroll scrollbars\n\t * not being shown bug.\n\t *\n\t * Firefox doesn't draw scrollbars, even if it is told to using\n\t * overflow:scroll, if the div is less than 34px height. See bugs 292284 and\n\t * 781885. Using UA detection here since this is particularly hard to detect\n\t * using objects - its a straight up rendering error in Firefox.\n\t *\n\t * @return {boolean} True if Firefox error is present, false otherwise\n\t */\n\t_firefoxScrollError: function () {\n\t\tif ( _firefoxScroll === undefined ) {\n\t\t\tvar test = $('<div/>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\theight: 10,\n\t\t\t\t\twidth: 50,\n\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t} )\n\t\t\t\t.appendTo( 'body' );\n\n\t\t\t// Make sure this doesn't apply on Macs with 0 width scrollbars\n\t\t\t_firefoxScroll = (\n\t\t\t\ttest[0].clientWidth === test[0].offsetWidth && this._fnDTOverflow().bar !== 0\n\t\t\t);\n\n\t\t\ttest.remove();\n\t\t}\n\n\t\treturn _firefoxScroll;\n\t}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/**\n * FixedColumns default settings for initialisation\n *  @name FixedColumns.defaults\n *  @namespace\n *  @static\n */\nFixedColumns.defaults = /** @lends FixedColumns.defaults */{\n\t/**\n\t * Number of left hand columns to fix in position\n\t *  @type     int\n\t *  @default  1\n\t *  @static\n\t *  @example\n\t *      var  = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"leftColumns\": 2\n\t *      } );\n\t */\n\t\"iLeftColumns\": 1,\n\n\t/**\n\t * Number of right hand columns to fix in position\n\t *  @type     int\n\t *  @default  0\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"rightColumns\": 1\n\t *      } );\n\t */\n\t\"iRightColumns\": 0,\n\n\t/**\n\t * Draw callback function which is called when FixedColumns has redrawn the fixed assets\n\t *  @type     function(object, object):void\n\t *  @default  null\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"drawCallback\": function () {\n\t *\t            alert( \"FixedColumns redraw\" );\n\t *\t        }\n\t *      } );\n\t */\n\t\"fnDrawCallback\": null,\n\n\t/**\n\t * Height matching algorthim to use. This can be \"none\" which will result in no height\n\t * matching being applied by FixedColumns (height matching could be forced by CSS in this\n\t * case), \"semiauto\" whereby the height calculation will be performed once, and the result\n\t * cached to be used again (fnRecalculateHeight can be used to force recalculation), or\n\t * \"auto\" when height matching is performed on every draw (slowest but must accurate)\n\t *  @type     string\n\t *  @default  semiauto\n\t *  @static\n\t *  @example\n\t *      var table = $('#example').dataTable( {\n\t *          \"scrollX\": \"100%\"\n\t *      } );\n\t *      new $.fn.dataTable.fixedColumns( table, {\n\t *          \"heightMatch\": \"auto\"\n\t *      } );\n\t */\n\t\"sHeightMatch\": \"semiauto\"\n};\n\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Constants\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n/**\n * FixedColumns version\n *  @name      FixedColumns.version\n *  @type      String\n *  @default   See code\n *  @static\n */\nFixedColumns.version = \"3.3.3\";\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API integration\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\nDataTable.Api.register( 'fixedColumns()', function () {\n\treturn this;\n} );\n\nDataTable.Api.register( 'fixedColumns().update()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnUpdate();\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'fixedColumns().relayout()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnRedrawLayout();\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'rows().recalcHeight()', function () {\n\treturn this.iterator( 'row', function ( ctx, idx ) {\n\t\tif ( ctx._oFixedColumns ) {\n\t\t\tctx._oFixedColumns.fnRecalculateHeight( this.row(idx).node() );\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'fixedColumns().rowIndex()', function ( row ) {\n\trow = $(row);\n\n\treturn row.parents('.DTFC_Cloned').length ?\n\t\tthis.rows( { page: 'current' } ).indexes()[ row.index() ] :\n\t\tthis.row( row ).index();\n} );\n\nDataTable.Api.register( 'fixedColumns().cellIndex()', function ( cell ) {\n\tcell = $(cell);\n\n\tif ( cell.parents('.DTFC_Cloned').length ) {\n\t\tvar rowClonedIdx = cell.parent().index();\n\t\tvar rowIdx = this.rows( { page: 'current' } ).indexes()[ rowClonedIdx ];\n\t\tvar columnIdx;\n\n\t\tif ( cell.parents('.DTFC_LeftWrapper').length ) {\n\t\t\tcolumnIdx = cell.index();\n\t\t}\n\t\telse {\n\t\t\tvar columns = this.columns().flatten().length;\n\t\t\tcolumnIdx = columns - this.context[0]._oFixedColumns.s.iRightColumns + cell.index();\n\t\t}\n\n\t\treturn {\n\t\t\trow: rowIdx,\n\t\t\tcolumn: this.column.index( 'toData', columnIdx ),\n\t\t\tcolumnVisible: columnIdx\n\t\t};\n\t}\n\telse {\n\t\treturn this.cell( cell ).index();\n\t}\n} );\n\nDataTable.Api.registerPlural( 'cells().fixedNodes()', 'cell().fixedNode()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings._oFixedColumns\n\t\t\t? settings._oFixedColumns.fnToFixedNode( row, column )\n\t\t\t: this.cell(row, column).node();\n\t}, 1 );\n} );\n\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'init.dt.fixedColumns', function (e, settings) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar init = settings.oInit.fixedColumns;\n\tvar defaults = DataTable.defaults.fixedColumns;\n\n\tif ( init || defaults ) {\n\t\tvar opts = $.extend( {}, init, defaults );\n\n\t\tif ( init !== false ) {\n\t\t\tnew FixedColumns( settings, opts );\n\t\t}\n\t}\n} );\n\n\n\n// Make FixedColumns accessible from the DataTables instance\n$.fn.dataTable.FixedColumns = FixedColumns;\n$.fn.DataTable.FixedColumns = FixedColumns;\n\nreturn FixedColumns;\n}));\n"]},"metadata":{},"sourceType":"script"}