{"ast":null,"code":"/*! KeyTable 2.6.2\n * Â©2009-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     KeyTable\n * @description Spreadsheet like keyboard navigation for DataTables\n * @version     2.6.2\n * @file        dataTables.keyTable.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2009-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable;\n  var namespaceCounter = 0;\n  var editorNamespaceCounter = 0;\n\n  var KeyTable = function (dt, opts) {\n    // Sanity check that we are using DataTables 1.10 or newer\n    if (!DataTable.versionCheck || !DataTable.versionCheck('1.10.8')) {\n      throw 'KeyTable requires DataTables 1.10.8 or newer';\n    } // User and defaults configuration object\n\n\n    this.c = $.extend(true, {}, DataTable.defaults.keyTable, KeyTable.defaults, opts); // Internal settings\n\n    this.s = {\n      /** @type {DataTable.Api} DataTables' API instance */\n      dt: new DataTable.Api(dt),\n      enable: true,\n\n      /** @type {bool} Flag for if a draw is triggered by focus */\n      focusDraw: false,\n\n      /** @type {bool} Flag to indicate when waiting for a draw to happen.\n        *   Will ignore key presses at this point\n        */\n      waitingForDraw: false,\n\n      /** @type {object} Information about the last cell that was focused */\n      lastFocus: null,\n\n      /** @type {string} Unique namespace per instance */\n      namespace: '.keyTable-' + namespaceCounter++,\n\n      /** @type {Node} Input element for tabbing into the table */\n      tabInput: null\n    }; // DOM items\n\n    this.dom = {}; // Check if row reorder has already been initialised on this table\n\n    var settings = this.s.dt.settings()[0];\n    var exisiting = settings.keytable;\n\n    if (exisiting) {\n      return exisiting;\n    }\n\n    settings.keytable = this;\n\n    this._constructor();\n  };\n\n  $.extend(KeyTable.prototype, {\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * API methods for DataTables API interface\n     */\n\n    /**\n     * Blur the table's cell focus\n     */\n    blur: function () {\n      this._blur();\n    },\n\n    /**\n     * Enable cell focus for the table\n     *\n     * @param  {string} state Can be `true`, `false` or `-string navigation-only`\n     */\n    enable: function (state) {\n      this.s.enable = state;\n    },\n\n    /**\n     * Get enable status\n     */\n    enabled: function () {\n      return this.s.enable;\n    },\n\n    /**\n     * Focus on a cell\n     * @param  {integer} row    Row index\n     * @param  {integer} column Column index\n     */\n    focus: function (row, column) {\n      this._focus(this.s.dt.cell(row, column));\n    },\n\n    /**\n     * Is the cell focused\n     * @param  {object} cell Cell index to check\n     * @returns {boolean} true if focused, false otherwise\n     */\n    focused: function (cell) {\n      var lastFocus = this.s.lastFocus;\n\n      if (!lastFocus) {\n        return false;\n      }\n\n      var lastIdx = this.s.lastFocus.cell.index();\n      return cell.row === lastIdx.row && cell.column === lastIdx.column;\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Constructor\n     */\n\n    /**\n     * Initialise the KeyTable instance\n     *\n     * @private\n     */\n    _constructor: function () {\n      this._tabInput();\n\n      var that = this;\n      var dt = this.s.dt;\n      var table = $(dt.table().node());\n      var namespace = this.s.namespace;\n      var editorBlock = false; // Need to be able to calculate the cell positions relative to the table\n\n      if (table.css('position') === 'static') {\n        table.css('position', 'relative');\n      } // Click to focus\n\n\n      $(dt.table().body()).on('click' + namespace, 'th, td', function (e) {\n        if (that.s.enable === false) {\n          return;\n        }\n\n        var cell = dt.cell(this);\n\n        if (!cell.any()) {\n          return;\n        }\n\n        that._focus(cell, null, false, e);\n      }); // Key events\n\n      $(document).on('keydown' + namespace, function (e) {\n        if (!editorBlock) {\n          that._key(e);\n        }\n      }); // Click blur\n\n      if (this.c.blurable) {\n        $(document).on('mousedown' + namespace, function (e) {\n          // Click on the search input will blur focus\n          if ($(e.target).parents('.dataTables_filter').length) {\n            that._blur();\n          } // If the click was inside the DataTables container, don't blur\n\n\n          if ($(e.target).parents().filter(dt.table().container()).length) {\n            return;\n          } // Don't blur in Editor form\n\n\n          if ($(e.target).parents('div.DTE').length) {\n            return;\n          } // Or an Editor date input\n\n\n          if ($(e.target).parents('div.editor-datetime').length || $(e.target).parents('div.dt-datetime').length) {\n            return;\n          } //If the click was inside the fixed columns container, don't blur\n\n\n          if ($(e.target).parents().filter('.DTFC_Cloned').length) {\n            return;\n          }\n\n          that._blur();\n        });\n      }\n\n      if (this.c.editor) {\n        var editor = this.c.editor; // Need to disable KeyTable when the main editor is shown\n\n        editor.on('open.keyTableMain', function (e, mode, action) {\n          if (mode !== 'inline' && that.s.enable) {\n            that.enable(false);\n            editor.one('close' + namespace, function () {\n              that.enable(true);\n            });\n          }\n        });\n\n        if (this.c.editOnFocus) {\n          dt.on('key-focus' + namespace + ' key-refocus' + namespace, function (e, dt, cell, orig) {\n            that._editor(null, orig, true);\n          });\n        } // Activate Editor when a key is pressed (will be ignored, if\n        // already active).\n\n\n        dt.on('key' + namespace, function (e, dt, key, cell, orig) {\n          that._editor(key, orig, false);\n        }); // Active editing on double click - it will already have focus from\n        // the click event handler above\n\n        $(dt.table().body()).on('dblclick' + namespace, 'th, td', function (e) {\n          if (that.s.enable === false) {\n            return;\n          }\n\n          var cell = dt.cell(this);\n\n          if (!cell.any()) {\n            return;\n          }\n\n          if (that.s.lastFocus && this !== that.s.lastFocus.cell.node()) {\n            return;\n          }\n\n          that._editor(null, e, true);\n        }); // While Editor is busy processing, we don't want to process any key events\n\n        editor.on('preSubmit', function () {\n          editorBlock = true;\n        }).on('preSubmitCancelled', function () {\n          editorBlock = false;\n        }).on('submitComplete', function () {\n          editorBlock = false;\n        });\n      } // Stave saving\n\n\n      if (dt.settings()[0].oFeatures.bStateSave) {\n        dt.on('stateSaveParams' + namespace, function (e, s, d) {\n          d.keyTable = that.s.lastFocus ? that.s.lastFocus.cell.index() : null;\n        });\n      }\n\n      dt.on('column-visibility' + namespace, function (e) {\n        that._tabInput();\n      }); // Redraw - retain focus on the current cell\n\n      dt.on('draw' + namespace, function (e) {\n        that._tabInput();\n\n        if (that.s.focusDraw) {\n          return;\n        }\n\n        var lastFocus = that.s.lastFocus;\n\n        if (lastFocus) {\n          var relative = that.s.lastFocus.relative;\n          var info = dt.page.info();\n          var row = relative.row + info.start;\n\n          if (info.recordsDisplay === 0) {\n            return;\n          } // Reverse if needed\n\n\n          if (row >= info.recordsDisplay) {\n            row = info.recordsDisplay - 1;\n          }\n\n          that._focus(row, relative.column, true, e);\n        }\n      }); // Clipboard support\n\n      if (this.c.clipboard) {\n        this._clipboard();\n      }\n\n      dt.on('destroy' + namespace, function () {\n        that._blur(true); // Event tidy up\n\n\n        dt.off(namespace);\n        $(dt.table().body()).off('click' + namespace, 'th, td').off('dblclick' + namespace, 'th, td');\n        $(document).off('mousedown' + namespace).off('keydown' + namespace).off('copy' + namespace).off('paste' + namespace);\n      }); // Initial focus comes from state or options\n\n      var state = dt.state.loaded();\n\n      if (state && state.keyTable) {\n        // Wait until init is done\n        dt.one('init', function () {\n          var cell = dt.cell(state.keyTable); // Ensure that the saved cell still exists\n\n          if (cell.any()) {\n            cell.focus();\n          }\n        });\n      } else if (this.c.focus) {\n        dt.cell(this.c.focus).focus();\n      }\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private methods\n     */\n\n    /**\n     * Blur the control\n     *\n     * @param {boolean} [noEvents=false] Don't trigger updates / events (for destroying)\n     * @private\n     */\n    _blur: function (noEvents) {\n      if (!this.s.enable || !this.s.lastFocus) {\n        return;\n      }\n\n      var cell = this.s.lastFocus.cell;\n      $(cell.node()).removeClass(this.c.className);\n      this.s.lastFocus = null;\n\n      if (!noEvents) {\n        this._updateFixedColumns(cell.index().column);\n\n        this._emitEvent('key-blur', [this.s.dt, cell]);\n      }\n    },\n\n    /**\n     * Clipboard interaction handlers\n     *\n     * @private\n     */\n    _clipboard: function () {\n      var dt = this.s.dt;\n      var that = this;\n      var namespace = this.s.namespace; // IE8 doesn't support getting selected text\n\n      if (!window.getSelection) {\n        return;\n      }\n\n      $(document).on('copy' + namespace, function (ejq) {\n        var e = ejq.originalEvent;\n        var selection = window.getSelection().toString();\n        var focused = that.s.lastFocus; // Only copy cell text to clipboard if there is no other selection\n        // and there is a focused cell\n\n        if (!selection && focused) {\n          e.clipboardData.setData('text/plain', focused.cell.render(that.c.clipboardOrthogonal));\n          e.preventDefault();\n        }\n      });\n      $(document).on('paste' + namespace, function (ejq) {\n        var e = ejq.originalEvent;\n        var focused = that.s.lastFocus;\n        var activeEl = document.activeElement;\n        var editor = that.c.editor;\n        var pastedText;\n\n        if (focused && (!activeEl || activeEl.nodeName.toLowerCase() === 'body')) {\n          e.preventDefault();\n\n          if (window.clipboardData && window.clipboardData.getData) {\n            // IE\n            pastedText = window.clipboardData.getData('Text');\n          } else if (e.clipboardData && e.clipboardData.getData) {\n            // Everything else\n            pastedText = e.clipboardData.getData('text/plain');\n          }\n\n          if (editor) {\n            // Got Editor - need to activate inline editing,\n            // set the value and submit\n            editor.inline(focused.cell.index()).set(editor.displayed()[0], pastedText).submit();\n          } else {\n            // No editor, so just dump the data in\n            focused.cell.data(pastedText);\n            dt.draw(false);\n          }\n        }\n      });\n    },\n\n    /**\n     * Get an array of the column indexes that KeyTable can operate on. This\n     * is a merge of the user supplied columns and the visible columns.\n     *\n     * @private\n     */\n    _columns: function () {\n      var dt = this.s.dt;\n      var user = dt.columns(this.c.columns).indexes();\n      var out = [];\n      dt.columns(':visible').every(function (i) {\n        if (user.indexOf(i) !== -1) {\n          out.push(i);\n        }\n      });\n      return out;\n    },\n\n    /**\n     * Perform excel like navigation for Editor by triggering an edit on key\n     * press\n     *\n     * @param  {integer} key Key code for the pressed key\n     * @param  {object} orig Original event\n     * @private\n     */\n    _editor: function (key, orig, hardEdit) {\n      // If nothing focused, we can't take any action\n      if (!this.s.lastFocus) {\n        return;\n      } // DataTables draw event\n\n\n      if (orig && orig.type === 'draw') {\n        return;\n      }\n\n      var that = this;\n      var dt = this.s.dt;\n      var editor = this.c.editor;\n      var editCell = this.s.lastFocus.cell;\n      var namespace = this.s.namespace + 'e' + editorNamespaceCounter++; // Do nothing if there is already an inline edit in this cell\n\n      if ($('div.DTE', editCell.node()).length) {\n        return;\n      } // Don't activate Editor on control key presses\n\n\n      if (key !== null && (key >= 0x00 && key <= 0x09 || key === 0x0b || key === 0x0c || key >= 0x0e && key <= 0x1f || key >= 0x70 && key <= 0x7b || key >= 0x7f && key <= 0x9f)) {\n        return;\n      }\n\n      if (orig) {\n        orig.stopPropagation(); // Return key should do nothing - for textareas it would empty the\n        // contents\n\n        if (key === 13) {\n          orig.preventDefault();\n        }\n      }\n\n      var editInline = function () {\n        editor.one('open' + namespace, function () {\n          // Remove cancel open\n          editor.off('cancelOpen' + namespace); // Excel style - select all text\n\n          if (!hardEdit) {\n            $('div.DTE_Field_InputControl input, div.DTE_Field_InputControl textarea').select();\n          } // Reduce the keys the Keys listens for\n\n\n          dt.keys.enable(hardEdit ? 'tab-only' : 'navigation-only'); // On blur of the navigation submit\n\n          dt.on('key-blur.editor', function (e, dt, cell) {\n            if (editor.displayed() && cell.node() === editCell.node()) {\n              editor.submit();\n            }\n          }); // Highlight the cell a different colour on full edit\n\n          if (hardEdit) {\n            $(dt.table().container()).addClass('dtk-focus-alt');\n          } // If the dev cancels the submit, we need to return focus\n\n\n          editor.on('preSubmitCancelled' + namespace, function () {\n            setTimeout(function () {\n              that._focus(editCell, null, false);\n            }, 50);\n          });\n          editor.on('submitUnsuccessful' + namespace, function () {\n            that._focus(editCell, null, false);\n          }); // Restore full key navigation on close\n\n          editor.one('close' + namespace, function () {\n            dt.keys.enable(true);\n            dt.off('key-blur.editor');\n            editor.off(namespace);\n            $(dt.table().container()).removeClass('dtk-focus-alt');\n\n            if (that.s.returnSubmit) {\n              that.s.returnSubmit = false;\n\n              that._emitEvent('key-return-submit', [dt, editCell]);\n            }\n          });\n        }).one('cancelOpen' + namespace, function () {\n          // `preOpen` can cancel the display of the form, so it\n          // might be that the open event handler isn't needed\n          editor.off(namespace);\n        }).inline(editCell.index());\n      }; // Editor 1.7 listens for `return` on keyup, so if return is the trigger\n      // key, we need to wait for `keyup` otherwise Editor would just submit\n      // the content triggered by this keypress.\n\n\n      if (key === 13) {\n        hardEdit = true;\n        $(document).one('keyup', function () {\n          // immediately removed\n          editInline();\n        });\n      } else {\n        editInline();\n      }\n    },\n\n    /**\n     * Emit an event on the DataTable for listeners\n     *\n     * @param  {string} name Event name\n     * @param  {array} args Event arguments\n     * @private\n     */\n    _emitEvent: function (name, args) {\n      this.s.dt.iterator('table', function (ctx, i) {\n        $(ctx.nTable).triggerHandler(name, args);\n      });\n    },\n\n    /**\n     * Focus on a particular cell, shifting the table's paging if required\n     *\n     * @param  {DataTables.Api|integer} row Can be given as an API instance that\n     *   contains the cell to focus or as an integer. As the latter it is the\n     *   visible row index (from the whole data set) - NOT the data index\n     * @param  {integer} [column] Not required if a cell is given as the first\n     *   parameter. Otherwise this is the column data index for the cell to\n     *   focus on\n     * @param {boolean} [shift=true] Should the viewport be moved to show cell\n     * @private\n     */\n    _focus: function (row, column, shift, originalEvent) {\n      var that = this;\n      var dt = this.s.dt;\n      var pageInfo = dt.page.info();\n      var lastFocus = this.s.lastFocus;\n\n      if (!originalEvent) {\n        originalEvent = null;\n      }\n\n      if (!this.s.enable) {\n        return;\n      }\n\n      if (typeof row !== 'number') {\n        // Its an API instance - check that there is actually a row\n        if (!row.any()) {\n          return;\n        } // Convert the cell to a row and column\n\n\n        var index = row.index();\n        column = index.column;\n        row = dt.rows({\n          filter: 'applied',\n          order: 'applied'\n        }).indexes().indexOf(index.row); // Don't focus rows that were filtered out.\n\n        if (row < 0) {\n          return;\n        } // For server-side processing normalise the row by adding the start\n        // point, since `rows().indexes()` includes only rows that are\n        // available at the client-side\n\n\n        if (pageInfo.serverSide) {\n          row += pageInfo.start;\n        }\n      } // Is the row on the current page? If not, we need to redraw to show the\n      // page\n\n\n      if (pageInfo.length !== -1 && (row < pageInfo.start || row >= pageInfo.start + pageInfo.length)) {\n        this.s.focusDraw = true;\n        this.s.waitingForDraw = true;\n        dt.one('draw', function () {\n          that.s.focusDraw = false;\n          that.s.waitingForDraw = false;\n\n          that._focus(row, column, undefined, originalEvent);\n        }).page(Math.floor(row / pageInfo.length)).draw(false);\n        return;\n      } // In the available columns?\n\n\n      if ($.inArray(column, this._columns()) === -1) {\n        return;\n      } // De-normalise the server-side processing row, so we select the row\n      // in its displayed position\n\n\n      if (pageInfo.serverSide) {\n        row -= pageInfo.start;\n      } // Get the cell from the current position - ignoring any cells which might\n      // not have been rendered (therefore can't use `:eq()` selector).\n\n\n      var cells = dt.cells(null, column, {\n        search: 'applied',\n        order: 'applied'\n      }).flatten();\n      var cell = dt.cell(cells[row]);\n\n      if (lastFocus) {\n        // Don't trigger a refocus on the same cell\n        if (lastFocus.node === cell.node()) {\n          this._emitEvent('key-refocus', [this.s.dt, cell, originalEvent || null]);\n\n          return;\n        } // Otherwise blur the old focus\n\n\n        this._blur();\n      } // Clear focus from other tables\n\n\n      this._removeOtherFocus();\n\n      var node = $(cell.node());\n      node.addClass(this.c.className);\n\n      this._updateFixedColumns(column); // Shift viewpoint and page to make cell visible\n\n\n      if (shift === undefined || shift === true) {\n        this._scroll($(window), $(document.body), node, 'offset');\n\n        var bodyParent = dt.table().body().parentNode;\n\n        if (bodyParent !== dt.table().header().parentNode) {\n          var parent = $(bodyParent.parentNode);\n\n          this._scroll(parent, parent, node, 'position');\n        }\n      } // Event and finish\n\n\n      this.s.lastFocus = {\n        cell: cell,\n        node: cell.node(),\n        relative: {\n          row: dt.rows({\n            page: 'current'\n          }).indexes().indexOf(cell.index().row),\n          column: cell.index().column\n        }\n      };\n\n      this._emitEvent('key-focus', [this.s.dt, cell, originalEvent || null]);\n\n      dt.state.save();\n    },\n\n    /**\n     * Handle key press\n     *\n     * @param  {object} e Event\n     * @private\n     */\n    _key: function (e) {\n      // If we are waiting for a draw to happen from another key event, then\n      // do nothing for this new key press.\n      if (this.s.waitingForDraw) {\n        e.preventDefault();\n        return;\n      }\n\n      var enable = this.s.enable;\n      this.s.returnSubmit = (enable === 'navigation-only' || enable === 'tab-only') && e.keyCode === 13 ? true : false;\n      var navEnable = enable === true || enable === 'navigation-only';\n\n      if (!enable) {\n        return;\n      }\n\n      if ((e.keyCode === 0 || e.ctrlKey || e.metaKey || e.altKey) && !(e.ctrlKey && e.altKey)) {\n        return;\n      } // If not focused, then there is no key action to take\n\n\n      var lastFocus = this.s.lastFocus;\n\n      if (!lastFocus) {\n        return;\n      } // And the last focus still exists!\n\n\n      if (!this.s.dt.cell(lastFocus.node).any()) {\n        this.s.lastFocus = null;\n        return;\n      }\n\n      var that = this;\n      var dt = this.s.dt;\n      var scrolling = this.s.dt.settings()[0].oScroll.sY ? true : false; // If we are not listening for this key, do nothing\n\n      if (this.c.keys && $.inArray(e.keyCode, this.c.keys) === -1) {\n        return;\n      }\n\n      switch (e.keyCode) {\n        case 9:\n          // tab\n          // `enable` can be tab-only\n          this._shift(e, e.shiftKey ? 'left' : 'right', true);\n\n          break;\n\n        case 27:\n          // esc\n          if (this.c.blurable && enable === true) {\n            this._blur();\n          }\n\n          break;\n\n        case 33: // page up (previous page)\n\n        case 34:\n          // page down (next page)\n          if (navEnable && !scrolling) {\n            e.preventDefault();\n            dt.page(e.keyCode === 33 ? 'previous' : 'next').draw(false);\n          }\n\n          break;\n\n        case 35: // end (end of current page)\n\n        case 36:\n          // home (start of current page)\n          if (navEnable) {\n            e.preventDefault();\n            var indexes = dt.cells({\n              page: 'current'\n            }).indexes();\n\n            var colIndexes = this._columns();\n\n            this._focus(dt.cell(indexes[e.keyCode === 35 ? indexes.length - 1 : colIndexes[0]]), null, true, e);\n          }\n\n          break;\n\n        case 37:\n          // left arrow\n          if (navEnable) {\n            this._shift(e, 'left');\n          }\n\n          break;\n\n        case 38:\n          // up arrow\n          if (navEnable) {\n            this._shift(e, 'up');\n          }\n\n          break;\n\n        case 39:\n          // right arrow\n          if (navEnable) {\n            this._shift(e, 'right');\n          }\n\n          break;\n\n        case 40:\n          // down arrow\n          if (navEnable) {\n            this._shift(e, 'down');\n          }\n\n          break;\n\n        case 113:\n          // F2 - Excel like hard edit\n          if (this.c.editor) {\n            this._editor(null, e, true);\n\n            break;\n          }\n\n        // else fallthrough\n\n        default:\n          // Everything else - pass through only when fully enabled\n          if (enable === true) {\n            this._emitEvent('key', [dt, e.keyCode, this.s.lastFocus.cell, e]);\n          }\n\n          break;\n      }\n    },\n\n    /**\n     * Remove focus from all tables other than this one\n     */\n    _removeOtherFocus: function () {\n      var thisTable = this.s.dt.table().node();\n      $.fn.dataTable.tables({\n        api: true\n      }).iterator('table', function (settings) {\n        if (this.table().node() !== thisTable) {\n          this.cell.blur();\n        }\n      });\n    },\n\n    /**\n     * Scroll a container to make a cell visible in it. This can be used for\n     * both DataTables scrolling and native window scrolling.\n     *\n     * @param  {jQuery} container Scrolling container\n     * @param  {jQuery} scroller  Item being scrolled\n     * @param  {jQuery} cell      Cell in the scroller\n     * @param  {string} posOff    `position` or `offset` - which to use for the\n     *   calculation. `offset` for the document, otherwise `position`\n     * @private\n     */\n    _scroll: function (container, scroller, cell, posOff) {\n      var offset = cell[posOff]();\n      var height = cell.outerHeight();\n      var width = cell.outerWidth();\n      var scrollTop = scroller.scrollTop();\n      var scrollLeft = scroller.scrollLeft();\n      var containerHeight = container.height();\n      var containerWidth = container.width(); // If Scroller is being used, the table can be `position: absolute` and that\n      // needs to be taken account of in the offset. If no Scroller, this will be 0\n\n      if (posOff === 'position') {\n        offset.top += parseInt(cell.closest('table').css('top'), 10);\n      } // Top correction\n\n\n      if (offset.top < scrollTop) {\n        scroller.scrollTop(offset.top);\n      } // Left correction\n\n\n      if (offset.left < scrollLeft) {\n        scroller.scrollLeft(offset.left);\n      } // Bottom correction\n\n\n      if (offset.top + height > scrollTop + containerHeight && height < containerHeight) {\n        scroller.scrollTop(offset.top + height - containerHeight);\n      } // Right correction\n\n\n      if (offset.left + width > scrollLeft + containerWidth && width < containerWidth) {\n        scroller.scrollLeft(offset.left + width - containerWidth);\n      }\n    },\n\n    /**\n     * Calculate a single offset movement in the table - up, down, left and\n     * right and then perform the focus if possible\n     *\n     * @param  {object}  e           Event object\n     * @param  {string}  direction   Movement direction\n     * @param  {boolean} keyBlurable `true` if the key press can result in the\n     *   table being blurred. This is so arrow keys won't blur the table, but\n     *   tab will.\n     * @private\n     */\n    _shift: function (e, direction, keyBlurable) {\n      var that = this;\n      var dt = this.s.dt;\n      var pageInfo = dt.page.info();\n      var rows = pageInfo.recordsDisplay;\n\n      var columns = this._columns();\n\n      var last = this.s.lastFocus;\n\n      if (!last) {\n        return;\n      }\n\n      var currentCell = last.cell;\n\n      if (!currentCell) {\n        return;\n      }\n\n      var currRow = dt.rows({\n        filter: 'applied',\n        order: 'applied'\n      }).indexes().indexOf(currentCell.index().row); // When server-side processing, `rows().indexes()` only gives the rows\n      // that are available at the client-side, so we need to normalise the\n      // row's current position by the display start point\n\n      if (pageInfo.serverSide) {\n        currRow += pageInfo.start;\n      }\n\n      var currCol = dt.columns(columns).indexes().indexOf(currentCell.index().column);\n      var row = currRow,\n          column = columns[currCol]; // row is the display, column is an index\n\n      if (direction === 'right') {\n        if (currCol >= columns.length - 1) {\n          row++;\n          column = columns[0];\n        } else {\n          column = columns[currCol + 1];\n        }\n      } else if (direction === 'left') {\n        if (currCol === 0) {\n          row--;\n          column = columns[columns.length - 1];\n        } else {\n          column = columns[currCol - 1];\n        }\n      } else if (direction === 'up') {\n        row--;\n      } else if (direction === 'down') {\n        row++;\n      }\n\n      if (row >= 0 && row < rows && $.inArray(column, columns) !== -1) {\n        if (e) {\n          e.preventDefault();\n        }\n\n        this._focus(row, column, true, e);\n      } else if (!keyBlurable || !this.c.blurable) {\n        // No new focus, but if the table isn't blurable, then don't loose\n        // focus\n        if (e) {\n          e.preventDefault();\n        }\n      } else {\n        this._blur();\n      }\n    },\n\n    /**\n     * Create and insert a hidden input element that can receive focus on behalf\n     * of the table\n     *\n     * @private\n     */\n    _tabInput: function () {\n      var that = this;\n      var dt = this.s.dt;\n      var tabIndex = this.c.tabIndex !== null ? this.c.tabIndex : dt.settings()[0].iTabIndex;\n\n      if (tabIndex == -1) {\n        return;\n      } // Only create the input element once on first class\n\n\n      if (!this.s.tabInput) {\n        var div = $('<div><input type=\"text\" tabindex=\"' + tabIndex + '\"/></div>').css({\n          position: 'absolute',\n          height: 1,\n          width: 0,\n          overflow: 'hidden'\n        });\n        div.children().on('focus', function (e) {\n          var cell = dt.cell(':eq(0)', that._columns(), {\n            page: 'current'\n          });\n\n          if (cell.any()) {\n            that._focus(cell, null, true, e);\n          }\n        });\n        this.s.tabInput = div;\n      } // Insert the input element into the first cell in the table's body\n\n\n      var cell = this.s.dt.cell(':eq(0)', '0:visible', {\n        page: 'current',\n        order: 'current'\n      }).node();\n\n      if (cell) {\n        $(cell).prepend(this.s.tabInput);\n      }\n    },\n\n    /**\n     * Update fixed columns if they are enabled and if the cell we are\n     * focusing is inside a fixed column\n     * @param  {integer} column Index of the column being changed\n     * @private\n     */\n    _updateFixedColumns: function (column) {\n      var dt = this.s.dt;\n      var settings = dt.settings()[0];\n\n      if (settings._oFixedColumns) {\n        var leftCols = settings._oFixedColumns.s.iLeftColumns;\n        var rightCols = settings.aoColumns.length - settings._oFixedColumns.s.iRightColumns;\n\n        if (column < leftCols || column >= rightCols) {\n          dt.fixedColumns().update();\n        }\n      }\n    }\n  });\n  /**\n   * KeyTable default settings for initialisation\n   *\n   * @namespace\n   * @name KeyTable.defaults\n   * @static\n   */\n\n  KeyTable.defaults = {\n    /**\n     * Can focus be removed from the table\n     * @type {Boolean}\n     */\n    blurable: true,\n\n    /**\n     * Class to give to the focused cell\n     * @type {String}\n     */\n    className: 'focus',\n\n    /**\n     * Enable or disable clipboard support\n     * @type {Boolean}\n     */\n    clipboard: true,\n\n    /**\n     * Orthogonal data that should be copied to clipboard\n     * @type {string}\n     */\n    clipboardOrthogonal: 'display',\n\n    /**\n     * Columns that can be focused. This is automatically merged with the\n     * visible columns as only visible columns can gain focus.\n     * @type {String}\n     */\n    columns: '',\n    // all\n\n    /**\n     * Editor instance to automatically perform Excel like navigation\n     * @type {Editor}\n     */\n    editor: null,\n\n    /**\n     * Trigger editing immediately on focus\n     * @type {boolean}\n     */\n    editOnFocus: false,\n\n    /**\n     * Select a cell to automatically select on start up. `null` for no\n     * automatic selection\n     * @type {cell-selector}\n     */\n    focus: null,\n\n    /**\n     * Array of keys to listen for\n     * @type {null|array}\n     */\n    keys: null,\n\n    /**\n     * Tab index for where the table should sit in the document's tab flow\n     * @type {integer|null}\n     */\n    tabIndex: null\n  };\n  KeyTable.version = \"2.6.2\";\n  $.fn.dataTable.KeyTable = KeyTable;\n  $.fn.DataTable.KeyTable = KeyTable;\n  DataTable.Api.register('cell.blur()', function () {\n    return this.iterator('table', function (ctx) {\n      if (ctx.keytable) {\n        ctx.keytable.blur();\n      }\n    });\n  });\n  DataTable.Api.register('cell().focus()', function () {\n    return this.iterator('cell', function (ctx, row, column) {\n      if (ctx.keytable) {\n        ctx.keytable.focus(row, column);\n      }\n    });\n  });\n  DataTable.Api.register('keys.disable()', function () {\n    return this.iterator('table', function (ctx) {\n      if (ctx.keytable) {\n        ctx.keytable.enable(false);\n      }\n    });\n  });\n  DataTable.Api.register('keys.enable()', function (opts) {\n    return this.iterator('table', function (ctx) {\n      if (ctx.keytable) {\n        ctx.keytable.enable(opts === undefined ? true : opts);\n      }\n    });\n  });\n  DataTable.Api.register('keys.enabled()', function (opts) {\n    var ctx = this.context;\n\n    if (ctx.length) {\n      return ctx[0].keytable ? ctx[0].keytable.enabled() : false;\n    }\n\n    return false;\n  });\n  DataTable.Api.register('keys.move()', function (dir) {\n    return this.iterator('table', function (ctx) {\n      if (ctx.keytable) {\n        ctx.keytable._shift(null, dir, false);\n      }\n    });\n  }); // Cell selector\n\n  DataTable.ext.selector.cell.push(function (settings, opts, cells) {\n    var focused = opts.focused;\n    var kt = settings.keytable;\n    var out = [];\n\n    if (!kt || focused === undefined) {\n      return cells;\n    }\n\n    for (var i = 0, ien = cells.length; i < ien; i++) {\n      if (focused === true && kt.focused(cells[i]) || focused === false && !kt.focused(cells[i])) {\n        out.push(cells[i]);\n      }\n    }\n\n    return out;\n  }); // Attach a listener to the document which listens for DataTables initialisation\n  // events so we can automatically initialise\n\n  $(document).on('preInit.dt.dtk', function (e, settings, json) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    var init = settings.oInit.keys;\n    var defaults = DataTable.defaults.keys;\n\n    if (init || defaults) {\n      var opts = $.extend({}, defaults, init);\n\n      if (init !== false) {\n        new KeyTable(settings, opts);\n      }\n    }\n  });\n  return KeyTable;\n});","map":{"version":3,"sources":["C:/Users/Sher/Desktop/datahub tagging ui/frontend/node_modules/datatables.net-keytable/js/dataTables.keyTable.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","namespaceCounter","editorNamespaceCounter","KeyTable","dt","opts","versionCheck","c","extend","defaults","keyTable","s","Api","enable","focusDraw","waitingForDraw","lastFocus","namespace","tabInput","dom","settings","exisiting","keytable","_constructor","prototype","blur","_blur","state","enabled","focus","row","column","_focus","cell","focused","lastIdx","index","_tabInput","that","table","node","editorBlock","css","body","on","e","any","_key","blurable","target","parents","length","filter","container","editor","mode","action","one","editOnFocus","orig","_editor","key","oFeatures","bStateSave","d","relative","info","page","start","recordsDisplay","clipboard","_clipboard","off","loaded","noEvents","removeClass","className","_updateFixedColumns","_emitEvent","getSelection","ejq","originalEvent","selection","toString","clipboardData","setData","render","clipboardOrthogonal","preventDefault","activeEl","activeElement","pastedText","nodeName","toLowerCase","getData","inline","set","displayed","submit","data","draw","_columns","user","columns","indexes","out","every","i","indexOf","push","hardEdit","type","editCell","stopPropagation","editInline","select","keys","addClass","setTimeout","returnSubmit","name","args","iterator","ctx","nTable","triggerHandler","shift","pageInfo","rows","order","serverSide","Math","floor","inArray","cells","search","flatten","_removeOtherFocus","_scroll","bodyParent","parentNode","header","parent","save","keyCode","navEnable","ctrlKey","metaKey","altKey","scrolling","oScroll","sY","_shift","shiftKey","colIndexes","thisTable","tables","api","scroller","posOff","offset","height","outerHeight","width","outerWidth","scrollTop","scrollLeft","containerHeight","containerWidth","top","parseInt","closest","left","direction","keyBlurable","last","currentCell","currRow","currCol","tabIndex","iTabIndex","div","position","overflow","children","prepend","_oFixedColumns","leftCols","iLeftColumns","rightCols","aoColumns","iRightColumns","fixedColumns","update","version","register","context","dir","ext","selector","kt","ien","json","init","oInit"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,WAAUA,OAAV,EAAmB;AACnB,MAAK,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA5C,EAAkD;AACjD;AACAD,IAAAA,MAAM,CAAE,CAAC,QAAD,EAAW,gBAAX,CAAF,EAAgC,UAAWE,CAAX,EAAe;AACpD,aAAOH,OAAO,CAAEG,CAAF,EAAKC,MAAL,EAAaC,QAAb,CAAd;AACA,KAFK,CAAN;AAGA,GALD,MAMK,IAAK,OAAOC,OAAP,KAAmB,QAAxB,EAAmC;AACvC;AACAC,IAAAA,MAAM,CAACD,OAAP,GAAiB,UAAUE,IAAV,EAAgBL,CAAhB,EAAmB;AACnC,UAAK,CAAEK,IAAP,EAAc;AACbA,QAAAA,IAAI,GAAGJ,MAAP;AACA;;AAED,UAAK,CAAED,CAAF,IAAO,CAAEA,CAAC,CAACM,EAAF,CAAKC,SAAnB,EAA+B;AAC9BP,QAAAA,CAAC,GAAGQ,OAAO,CAAC,gBAAD,CAAP,CAA0BH,IAA1B,EAAgCL,CAAhC,EAAmCA,CAAvC;AACA;;AAED,aAAOH,OAAO,CAAEG,CAAF,EAAKK,IAAL,EAAWA,IAAI,CAACH,QAAhB,CAAd;AACA,KAVD;AAWA,GAbI,MAcA;AACJ;AACAL,IAAAA,OAAO,CAAEY,MAAF,EAAUR,MAAV,EAAkBC,QAAlB,CAAP;AACA;AACD,CAzBA,EAyBC,UAAUF,CAAV,EAAaC,MAAb,EAAqBC,QAArB,EAA+BQ,SAA/B,EAA2C;AAC7C;;AACA,MAAIC,SAAS,GAAGX,CAAC,CAACM,EAAF,CAAKC,SAArB;AACA,MAAIK,gBAAgB,GAAG,CAAvB;AACA,MAAIC,sBAAsB,GAAG,CAA7B;;AAGA,MAAIC,QAAQ,GAAG,UAAWC,EAAX,EAAeC,IAAf,EAAsB;AACpC;AACA,QAAK,CAAEL,SAAS,CAACM,YAAZ,IAA4B,CAAEN,SAAS,CAACM,YAAV,CAAwB,QAAxB,CAAnC,EAAwE;AACvE,YAAM,8CAAN;AACA,KAJmC,CAMpC;;;AACA,SAAKC,CAAL,GAASlB,CAAC,CAACmB,MAAF,CAAU,IAAV,EAAgB,EAAhB,EACRR,SAAS,CAACS,QAAV,CAAmBC,QADX,EAERP,QAAQ,CAACM,QAFD,EAGRJ,IAHQ,CAAT,CAPoC,CAapC;;AACA,SAAKM,CAAL,GAAS;AACR;AACAP,MAAAA,EAAE,EAAE,IAAIJ,SAAS,CAACY,GAAd,CAAmBR,EAAnB,CAFI;AAIRS,MAAAA,MAAM,EAAE,IAJA;;AAMR;AACAC,MAAAA,SAAS,EAAE,KAPH;;AASR;AACF;AACA;AACEC,MAAAA,cAAc,EAAE,KAZR;;AAcR;AACAC,MAAAA,SAAS,EAAE,IAfH;;AAiBR;AACAC,MAAAA,SAAS,EAAE,eAAchB,gBAAgB,EAlBjC;;AAoBR;AACAiB,MAAAA,QAAQ,EAAE;AArBF,KAAT,CAdoC,CAsCpC;;AACA,SAAKC,GAAL,GAAW,EAAX,CAvCoC,CA2CpC;;AACA,QAAIC,QAAQ,GAAG,KAAKT,CAAL,CAAOP,EAAP,CAAUgB,QAAV,GAAqB,CAArB,CAAf;AACA,QAAIC,SAAS,GAAGD,QAAQ,CAACE,QAAzB;;AACA,QAAKD,SAAL,EAAiB;AAChB,aAAOA,SAAP;AACA;;AAEDD,IAAAA,QAAQ,CAACE,QAAT,GAAoB,IAApB;;AACA,SAAKC,YAAL;AACA,GApDD;;AAuDAlC,EAAAA,CAAC,CAACmB,MAAF,CAAUL,QAAQ,CAACqB,SAAnB,EAA8B;AAC7B;AACD;AACA;;AAEC;AACD;AACA;AACCC,IAAAA,IAAI,EAAE,YACN;AACC,WAAKC,KAAL;AACA,KAX4B;;AAa7B;AACD;AACA;AACA;AACA;AACCb,IAAAA,MAAM,EAAE,UAAWc,KAAX,EACR;AACC,WAAKhB,CAAL,CAAOE,MAAP,GAAgBc,KAAhB;AACA,KArB4B;;AAuB7B;AACD;AACA;AACCC,IAAAA,OAAO,EAAE,YAAY;AACpB,aAAO,KAAKjB,CAAL,CAAOE,MAAd;AACA,KA5B4B;;AA8B7B;AACD;AACA;AACA;AACA;AACCgB,IAAAA,KAAK,EAAE,UAAWC,GAAX,EAAgBC,MAAhB,EACP;AACC,WAAKC,MAAL,CAAa,KAAKrB,CAAL,CAAOP,EAAP,CAAU6B,IAAV,CAAgBH,GAAhB,EAAqBC,MAArB,CAAb;AACA,KAtC4B;;AAwC7B;AACD;AACA;AACA;AACA;AACCG,IAAAA,OAAO,EAAE,UAAWD,IAAX,EACT;AACC,UAAIjB,SAAS,GAAG,KAAKL,CAAL,CAAOK,SAAvB;;AAEA,UAAK,CAAEA,SAAP,EAAmB;AAClB,eAAO,KAAP;AACA;;AAED,UAAImB,OAAO,GAAG,KAAKxB,CAAL,CAAOK,SAAP,CAAiBiB,IAAjB,CAAsBG,KAAtB,EAAd;AACA,aAAOH,IAAI,CAACH,GAAL,KAAaK,OAAO,CAACL,GAArB,IAA4BG,IAAI,CAACF,MAAL,KAAgBI,OAAO,CAACJ,MAA3D;AACA,KAvD4B;;AA0D7B;AACD;AACA;;AAEC;AACD;AACA;AACA;AACA;AACCR,IAAAA,YAAY,EAAE,YACd;AACC,WAAKc,SAAL;;AAEA,UAAIC,IAAI,GAAG,IAAX;AACA,UAAIlC,EAAE,GAAG,KAAKO,CAAL,CAAOP,EAAhB;AACA,UAAImC,KAAK,GAAGlD,CAAC,CAAEe,EAAE,CAACmC,KAAH,GAAWC,IAAX,EAAF,CAAb;AACA,UAAIvB,SAAS,GAAG,KAAKN,CAAL,CAAOM,SAAvB;AACA,UAAIwB,WAAW,GAAG,KAAlB,CAPD,CASC;;AACA,UAAKF,KAAK,CAACG,GAAN,CAAU,UAAV,MAA0B,QAA/B,EAA0C;AACzCH,QAAAA,KAAK,CAACG,GAAN,CAAW,UAAX,EAAuB,UAAvB;AACA,OAZF,CAcC;;;AACArD,MAAAA,CAAC,CAAEe,EAAE,CAACmC,KAAH,GAAWI,IAAX,EAAF,CAAD,CAAuBC,EAAvB,CAA2B,UAAQ3B,SAAnC,EAA8C,QAA9C,EAAwD,UAAU4B,CAAV,EAAa;AACpE,YAAKP,IAAI,CAAC3B,CAAL,CAAOE,MAAP,KAAkB,KAAvB,EAA+B;AAC9B;AACA;;AAED,YAAIoB,IAAI,GAAG7B,EAAE,CAAC6B,IAAH,CAAS,IAAT,CAAX;;AAEA,YAAK,CAAEA,IAAI,CAACa,GAAL,EAAP,EAAoB;AACnB;AACA;;AAEDR,QAAAA,IAAI,CAACN,MAAL,CAAaC,IAAb,EAAmB,IAAnB,EAAyB,KAAzB,EAAgCY,CAAhC;AACA,OAZD,EAfD,CA6BC;;AACAxD,MAAAA,CAAC,CAAEE,QAAF,CAAD,CAAcqD,EAAd,CAAkB,YAAU3B,SAA5B,EAAuC,UAAU4B,CAAV,EAAa;AACnD,YAAK,CAAEJ,WAAP,EAAqB;AACpBH,UAAAA,IAAI,CAACS,IAAL,CAAWF,CAAX;AACA;AACD,OAJD,EA9BD,CAoCC;;AACA,UAAK,KAAKtC,CAAL,CAAOyC,QAAZ,EAAuB;AACtB3D,QAAAA,CAAC,CAAEE,QAAF,CAAD,CAAcqD,EAAd,CAAkB,cAAY3B,SAA9B,EAAyC,UAAW4B,CAAX,EAAe;AACvD;AACA,cAAKxD,CAAC,CAACwD,CAAC,CAACI,MAAH,CAAD,CAAYC,OAAZ,CAAqB,oBAArB,EAA4CC,MAAjD,EAA0D;AACzDb,YAAAA,IAAI,CAACZ,KAAL;AACA,WAJsD,CAMvD;;;AACA,cAAKrC,CAAC,CAACwD,CAAC,CAACI,MAAH,CAAD,CAAYC,OAAZ,GAAsBE,MAAtB,CAA8BhD,EAAE,CAACmC,KAAH,GAAWc,SAAX,EAA9B,EAAuDF,MAA5D,EAAqE;AACpE;AACA,WATsD,CAWvD;;;AACA,cAAK9D,CAAC,CAACwD,CAAC,CAACI,MAAH,CAAD,CAAYC,OAAZ,CAAoB,SAApB,EAA+BC,MAApC,EAA6C;AAC5C;AACA,WAdsD,CAgBvD;;;AACA,cACC9D,CAAC,CAACwD,CAAC,CAACI,MAAH,CAAD,CAAYC,OAAZ,CAAoB,qBAApB,EAA2CC,MAA3C,IACA9D,CAAC,CAACwD,CAAC,CAACI,MAAH,CAAD,CAAYC,OAAZ,CAAoB,iBAApB,EAAuCC,MAFxC,EAGE;AACD;AACA,WAtBsD,CAwBvD;;;AACA,cAAK9D,CAAC,CAACwD,CAAC,CAACI,MAAH,CAAD,CAAYC,OAAZ,GAAsBE,MAAtB,CAA6B,cAA7B,EAA6CD,MAAlD,EAA2D;AAC1D;AACA;;AAEDb,UAAAA,IAAI,CAACZ,KAAL;AACA,SA9BD;AA+BA;;AAED,UAAK,KAAKnB,CAAL,CAAO+C,MAAZ,EAAqB;AACpB,YAAIA,MAAM,GAAG,KAAK/C,CAAL,CAAO+C,MAApB,CADoB,CAGpB;;AACAA,QAAAA,MAAM,CAACV,EAAP,CAAW,mBAAX,EAAgC,UAAUC,CAAV,EAAaU,IAAb,EAAmBC,MAAnB,EAA2B;AAC1D,cAAKD,IAAI,KAAK,QAAT,IAAqBjB,IAAI,CAAC3B,CAAL,CAAOE,MAAjC,EAA0C;AACzCyB,YAAAA,IAAI,CAACzB,MAAL,CAAa,KAAb;AAEAyC,YAAAA,MAAM,CAACG,GAAP,CAAY,UAAQxC,SAApB,EAA+B,YAAY;AAC1CqB,cAAAA,IAAI,CAACzB,MAAL,CAAa,IAAb;AACA,aAFD;AAGA;AACD,SARD;;AAUA,YAAK,KAAKN,CAAL,CAAOmD,WAAZ,EAA0B;AACzBtD,UAAAA,EAAE,CAACwC,EAAH,CAAO,cAAY3B,SAAZ,GAAsB,cAAtB,GAAqCA,SAA5C,EAAuD,UAAW4B,CAAX,EAAczC,EAAd,EAAkB6B,IAAlB,EAAwB0B,IAAxB,EAA+B;AACrFrB,YAAAA,IAAI,CAACsB,OAAL,CAAc,IAAd,EAAoBD,IAApB,EAA0B,IAA1B;AACA,WAFD;AAGA,SAlBmB,CAoBpB;AACA;;;AACAvD,QAAAA,EAAE,CAACwC,EAAH,CAAO,QAAM3B,SAAb,EAAwB,UAAW4B,CAAX,EAAczC,EAAd,EAAkByD,GAAlB,EAAuB5B,IAAvB,EAA6B0B,IAA7B,EAAoC;AAC3DrB,UAAAA,IAAI,CAACsB,OAAL,CAAcC,GAAd,EAAmBF,IAAnB,EAAyB,KAAzB;AACA,SAFD,EAtBoB,CA0BpB;AACA;;AACAtE,QAAAA,CAAC,CAAEe,EAAE,CAACmC,KAAH,GAAWI,IAAX,EAAF,CAAD,CAAuBC,EAAvB,CAA2B,aAAW3B,SAAtC,EAAiD,QAAjD,EAA2D,UAAU4B,CAAV,EAAa;AACvE,cAAKP,IAAI,CAAC3B,CAAL,CAAOE,MAAP,KAAkB,KAAvB,EAA+B;AAC9B;AACA;;AAED,cAAIoB,IAAI,GAAG7B,EAAE,CAAC6B,IAAH,CAAS,IAAT,CAAX;;AAEA,cAAK,CAAEA,IAAI,CAACa,GAAL,EAAP,EAAoB;AACnB;AACA;;AAED,cAAKR,IAAI,CAAC3B,CAAL,CAAOK,SAAP,IAAoB,SAASsB,IAAI,CAAC3B,CAAL,CAAOK,SAAP,CAAiBiB,IAAjB,CAAsBO,IAAtB,EAAlC,EAAiE;AAChE;AACA;;AAEDF,UAAAA,IAAI,CAACsB,OAAL,CAAc,IAAd,EAAoBf,CAApB,EAAuB,IAAvB;AACA,SAhBD,EA5BoB,CA8CpB;;AACAS,QAAAA,MAAM,CACJV,EADF,CACK,WADL,EACkB,YAAY;AAC5BH,UAAAA,WAAW,GAAG,IAAd;AACA,SAHF,EAIEG,EAJF,CAIK,oBAJL,EAI2B,YAAY;AACrCH,UAAAA,WAAW,GAAG,KAAd;AACA,SANF,EAOEG,EAPF,CAOK,gBAPL,EAOuB,YAAY;AACjCH,UAAAA,WAAW,GAAG,KAAd;AACA,SATF;AAUA,OAhIF,CAkIC;;;AACA,UAAKrC,EAAE,CAACgB,QAAH,GAAc,CAAd,EAAiB0C,SAAjB,CAA2BC,UAAhC,EAA6C;AAC5C3D,QAAAA,EAAE,CAACwC,EAAH,CAAO,oBAAkB3B,SAAzB,EAAoC,UAAU4B,CAAV,EAAalC,CAAb,EAAgBqD,CAAhB,EAAmB;AACtDA,UAAAA,CAAC,CAACtD,QAAF,GAAa4B,IAAI,CAAC3B,CAAL,CAAOK,SAAP,GACZsB,IAAI,CAAC3B,CAAL,CAAOK,SAAP,CAAiBiB,IAAjB,CAAsBG,KAAtB,EADY,GAEZ,IAFD;AAGA,SAJD;AAKA;;AAEDhC,MAAAA,EAAE,CAACwC,EAAH,CAAO,sBAAoB3B,SAA3B,EAAsC,UAAU4B,CAAV,EAAa;AAClDP,QAAAA,IAAI,CAACD,SAAL;AACA,OAFD,EA3ID,CA+IC;;AACAjC,MAAAA,EAAE,CAACwC,EAAH,CAAO,SAAO3B,SAAd,EAAyB,UAAU4B,CAAV,EAAa;AACrCP,QAAAA,IAAI,CAACD,SAAL;;AAEA,YAAKC,IAAI,CAAC3B,CAAL,CAAOG,SAAZ,EAAwB;AACvB;AACA;;AAED,YAAIE,SAAS,GAAGsB,IAAI,CAAC3B,CAAL,CAAOK,SAAvB;;AAEA,YAAKA,SAAL,EAAiB;AAChB,cAAIiD,QAAQ,GAAG3B,IAAI,CAAC3B,CAAL,CAAOK,SAAP,CAAiBiD,QAAhC;AACA,cAAIC,IAAI,GAAG9D,EAAE,CAAC+D,IAAH,CAAQD,IAAR,EAAX;AACA,cAAIpC,GAAG,GAAGmC,QAAQ,CAACnC,GAAT,GAAeoC,IAAI,CAACE,KAA9B;;AAEA,cAAKF,IAAI,CAACG,cAAL,KAAwB,CAA7B,EAAiC;AAChC;AACA,WAPe,CAShB;;;AACA,cAAKvC,GAAG,IAAIoC,IAAI,CAACG,cAAjB,EAAkC;AACjCvC,YAAAA,GAAG,GAAGoC,IAAI,CAACG,cAAL,GAAsB,CAA5B;AACA;;AAED/B,UAAAA,IAAI,CAACN,MAAL,CAAaF,GAAb,EAAkBmC,QAAQ,CAAClC,MAA3B,EAAmC,IAAnC,EAAyCc,CAAzC;AACA;AACD,OAzBD,EAhJD,CA2KC;;AACA,UAAK,KAAKtC,CAAL,CAAO+D,SAAZ,EAAwB;AACvB,aAAKC,UAAL;AACA;;AAEDnE,MAAAA,EAAE,CAACwC,EAAH,CAAO,YAAU3B,SAAjB,EAA4B,YAAY;AACvCqB,QAAAA,IAAI,CAACZ,KAAL,CAAY,IAAZ,EADuC,CAGvC;;;AACAtB,QAAAA,EAAE,CAACoE,GAAH,CAAQvD,SAAR;AAEA5B,QAAAA,CAAC,CAAEe,EAAE,CAACmC,KAAH,GAAWI,IAAX,EAAF,CAAD,CACE6B,GADF,CACO,UAAQvD,SADf,EAC0B,QAD1B,EAEEuD,GAFF,CAEO,aAAWvD,SAFlB,EAE6B,QAF7B;AAIA5B,QAAAA,CAAC,CAAEE,QAAF,CAAD,CACEiF,GADF,CACO,cAAYvD,SADnB,EAEEuD,GAFF,CAEO,YAAUvD,SAFjB,EAGEuD,GAHF,CAGO,SAAOvD,SAHd,EAIEuD,GAJF,CAIO,UAAQvD,SAJf;AAKA,OAfD,EAhLD,CAiMC;;AACA,UAAIU,KAAK,GAAGvB,EAAE,CAACuB,KAAH,CAAS8C,MAAT,EAAZ;;AAEA,UAAK9C,KAAK,IAAIA,KAAK,CAACjB,QAApB,EAA+B;AAC9B;AACAN,QAAAA,EAAE,CAACqD,GAAH,CAAQ,MAAR,EAAgB,YAAY;AAC3B,cAAIxB,IAAI,GAAG7B,EAAE,CAAC6B,IAAH,CAASN,KAAK,CAACjB,QAAf,CAAX,CAD2B,CAG3B;;AACA,cAAKuB,IAAI,CAACa,GAAL,EAAL,EAAkB;AACjBb,YAAAA,IAAI,CAACJ,KAAL;AACA;AACD,SAPD;AAQA,OAVD,MAWK,IAAK,KAAKtB,CAAL,CAAOsB,KAAZ,EAAoB;AACxBzB,QAAAA,EAAE,CAAC6B,IAAH,CAAS,KAAK1B,CAAL,CAAOsB,KAAhB,EAAwBA,KAAxB;AACA;AACD,KAtR4B;;AAyR7B;AACD;AACA;;AAEC;AACD;AACA;AACA;AACA;AACA;AACCH,IAAAA,KAAK,EAAE,UAAUgD,QAAV,EACP;AACC,UAAK,CAAE,KAAK/D,CAAL,CAAOE,MAAT,IAAmB,CAAE,KAAKF,CAAL,CAAOK,SAAjC,EAA6C;AAC5C;AACA;;AAED,UAAIiB,IAAI,GAAG,KAAKtB,CAAL,CAAOK,SAAP,CAAiBiB,IAA5B;AAEA5C,MAAAA,CAAC,CAAE4C,IAAI,CAACO,IAAL,EAAF,CAAD,CAAiBmC,WAAjB,CAA8B,KAAKpE,CAAL,CAAOqE,SAArC;AACA,WAAKjE,CAAL,CAAOK,SAAP,GAAmB,IAAnB;;AAEA,UAAK,CAAE0D,QAAP,EAAkB;AACjB,aAAKG,mBAAL,CAAyB5C,IAAI,CAACG,KAAL,GAAaL,MAAtC;;AAEA,aAAK+C,UAAL,CAAiB,UAAjB,EAA6B,CAAE,KAAKnE,CAAL,CAAOP,EAAT,EAAa6B,IAAb,CAA7B;AACA;AACD,KAnT4B;;AAsT7B;AACD;AACA;AACA;AACA;AACCsC,IAAAA,UAAU,EAAE,YAAY;AACvB,UAAInE,EAAE,GAAG,KAAKO,CAAL,CAAOP,EAAhB;AACA,UAAIkC,IAAI,GAAG,IAAX;AACA,UAAIrB,SAAS,GAAG,KAAKN,CAAL,CAAOM,SAAvB,CAHuB,CAKvB;;AACA,UAAK,CAAE3B,MAAM,CAACyF,YAAd,EAA6B;AAC5B;AACA;;AAED1F,MAAAA,CAAC,CAACE,QAAD,CAAD,CAAYqD,EAAZ,CAAgB,SAAO3B,SAAvB,EAAkC,UAAU+D,GAAV,EAAe;AAChD,YAAInC,CAAC,GAAGmC,GAAG,CAACC,aAAZ;AACA,YAAIC,SAAS,GAAG5F,MAAM,CAACyF,YAAP,GAAsBI,QAAtB,EAAhB;AACA,YAAIjD,OAAO,GAAGI,IAAI,CAAC3B,CAAL,CAAOK,SAArB,CAHgD,CAKhD;AACA;;AACA,YAAK,CAAEkE,SAAF,IAAehD,OAApB,EAA8B;AAC7BW,UAAAA,CAAC,CAACuC,aAAF,CAAgBC,OAAhB,CACC,YADD,EAECnD,OAAO,CAACD,IAAR,CAAaqD,MAAb,CAAqBhD,IAAI,CAAC/B,CAAL,CAAOgF,mBAA5B,CAFD;AAIA1C,UAAAA,CAAC,CAAC2C,cAAF;AACA;AACD,OAdD;AAgBAnG,MAAAA,CAAC,CAACE,QAAD,CAAD,CAAYqD,EAAZ,CAAgB,UAAQ3B,SAAxB,EAAmC,UAAU+D,GAAV,EAAe;AACjD,YAAInC,CAAC,GAAGmC,GAAG,CAACC,aAAZ;AACA,YAAI/C,OAAO,GAAGI,IAAI,CAAC3B,CAAL,CAAOK,SAArB;AACA,YAAIyE,QAAQ,GAAGlG,QAAQ,CAACmG,aAAxB;AACA,YAAIpC,MAAM,GAAGhB,IAAI,CAAC/B,CAAL,CAAO+C,MAApB;AACA,YAAIqC,UAAJ;;AAEA,YAAKzD,OAAO,KAAK,CAAEuD,QAAF,IAAcA,QAAQ,CAACG,QAAT,CAAkBC,WAAlB,OAAoC,MAAvD,CAAZ,EAA6E;AAC5EhD,UAAAA,CAAC,CAAC2C,cAAF;;AAEA,cAAKlG,MAAM,CAAC8F,aAAP,IAAwB9F,MAAM,CAAC8F,aAAP,CAAqBU,OAAlD,EAA4D;AAC3D;AACAH,YAAAA,UAAU,GAAGrG,MAAM,CAAC8F,aAAP,CAAqBU,OAArB,CAA6B,MAA7B,CAAb;AACA,WAHD,MAIK,IAAKjD,CAAC,CAACuC,aAAF,IAAmBvC,CAAC,CAACuC,aAAF,CAAgBU,OAAxC,EAAkD;AACtD;AACAH,YAAAA,UAAU,GAAG9C,CAAC,CAACuC,aAAF,CAAgBU,OAAhB,CAAwB,YAAxB,CAAb;AACA;;AAED,cAAKxC,MAAL,EAAc;AACb;AACA;AACAA,YAAAA,MAAM,CACJyC,MADF,CACU7D,OAAO,CAACD,IAAR,CAAaG,KAAb,EADV,EAEE4D,GAFF,CAEO1C,MAAM,CAAC2C,SAAP,GAAmB,CAAnB,CAFP,EAE8BN,UAF9B,EAGEO,MAHF;AAIA,WAPD,MAQK;AACJ;AACAhE,YAAAA,OAAO,CAACD,IAAR,CAAakE,IAAb,CAAmBR,UAAnB;AACAvF,YAAAA,EAAE,CAACgG,IAAH,CAAQ,KAAR;AACA;AACD;AACD,OAjCD;AAkCA,KAvX4B;;AA0X7B;AACD;AACA;AACA;AACA;AACA;AACCC,IAAAA,QAAQ,EAAE,YACV;AACC,UAAIjG,EAAE,GAAG,KAAKO,CAAL,CAAOP,EAAhB;AACA,UAAIkG,IAAI,GAAGlG,EAAE,CAACmG,OAAH,CAAY,KAAKhG,CAAL,CAAOgG,OAAnB,EAA6BC,OAA7B,EAAX;AACA,UAAIC,GAAG,GAAG,EAAV;AAEArG,MAAAA,EAAE,CAACmG,OAAH,CAAY,UAAZ,EAAyBG,KAAzB,CAAgC,UAAUC,CAAV,EAAa;AAC5C,YAAKL,IAAI,CAACM,OAAL,CAAcD,CAAd,MAAsB,CAAC,CAA5B,EAAgC;AAC/BF,UAAAA,GAAG,CAACI,IAAJ,CAAUF,CAAV;AACA;AACD,OAJD;AAMA,aAAOF,GAAP;AACA,KA7Y4B;;AAgZ7B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC7C,IAAAA,OAAO,EAAE,UAAWC,GAAX,EAAgBF,IAAhB,EAAsBmD,QAAtB,EACT;AACC;AACA,UAAI,CAAE,KAAKnG,CAAL,CAAOK,SAAb,EAAwB;AACvB;AACA,OAJF,CAMC;;;AACA,UAAI2C,IAAI,IAAIA,IAAI,CAACoD,IAAL,KAAc,MAA1B,EAAkC;AACjC;AACA;;AAED,UAAIzE,IAAI,GAAG,IAAX;AACA,UAAIlC,EAAE,GAAG,KAAKO,CAAL,CAAOP,EAAhB;AACA,UAAIkD,MAAM,GAAG,KAAK/C,CAAL,CAAO+C,MAApB;AACA,UAAI0D,QAAQ,GAAG,KAAKrG,CAAL,CAAOK,SAAP,CAAiBiB,IAAhC;AACA,UAAIhB,SAAS,GAAG,KAAKN,CAAL,CAAOM,SAAP,GAAmB,GAAnB,GAAyBf,sBAAsB,EAA/D,CAfD,CAiBC;;AACA,UAAKb,CAAC,CAAC,SAAD,EAAY2H,QAAQ,CAACxE,IAAT,EAAZ,CAAD,CAA8BW,MAAnC,EAA4C;AAC3C;AACA,OApBF,CAsBC;;;AACA,UAAKU,GAAG,KAAK,IAAR,KACHA,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI,IAAvB,IACAA,GAAG,KAAK,IADR,IAEAA,GAAG,KAAK,IAFR,IAGCA,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI,IAHvB,IAICA,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI,IAJvB,IAKCA,GAAG,IAAI,IAAP,IAAeA,GAAG,IAAI,IANnB,CAAL,EAOI;AACH;AACA;;AAED,UAAKF,IAAL,EAAY;AACXA,QAAAA,IAAI,CAACsD,eAAL,GADW,CAGX;AACA;;AACA,YAAKpD,GAAG,KAAK,EAAb,EAAkB;AACjBF,UAAAA,IAAI,CAAC6B,cAAL;AACA;AACD;;AAED,UAAI0B,UAAU,GAAG,YAAY;AAC5B5D,QAAAA,MAAM,CACJG,GADF,CACO,SAAOxC,SADd,EACyB,YAAY;AACnC;AACAqC,UAAAA,MAAM,CAACkB,GAAP,CAAY,eAAavD,SAAzB,EAFmC,CAInC;;AACA,cAAK,CAAE6F,QAAP,EAAkB;AACjBzH,YAAAA,CAAC,CAAC,uEAAD,CAAD,CAA2E8H,MAA3E;AACA,WAPkC,CASnC;;;AACA/G,UAAAA,EAAE,CAACgH,IAAH,CAAQvG,MAAR,CAAgBiG,QAAQ,GAAG,UAAH,GAAgB,iBAAxC,EAVmC,CAYnC;;AACA1G,UAAAA,EAAE,CAACwC,EAAH,CAAO,iBAAP,EAA0B,UAAUC,CAAV,EAAazC,EAAb,EAAiB6B,IAAjB,EAAuB;AAChD,gBAAKqB,MAAM,CAAC2C,SAAP,MAAsBhE,IAAI,CAACO,IAAL,OAAgBwE,QAAQ,CAACxE,IAAT,EAA3C,EAA6D;AAC5Dc,cAAAA,MAAM,CAAC4C,MAAP;AACA;AACD,WAJD,EAbmC,CAmBnC;;AACA,cAAKY,QAAL,EAAgB;AACfzH,YAAAA,CAAC,CAAEe,EAAE,CAACmC,KAAH,GAAWc,SAAX,EAAF,CAAD,CAA4BgE,QAA5B,CAAqC,eAArC;AACA,WAtBkC,CAwBnC;;;AACA/D,UAAAA,MAAM,CAACV,EAAP,CAAW,uBAAqB3B,SAAhC,EAA2C,YAAY;AACtDqG,YAAAA,UAAU,CAAE,YAAY;AACvBhF,cAAAA,IAAI,CAACN,MAAL,CAAagF,QAAb,EAAuB,IAAvB,EAA6B,KAA7B;AACA,aAFS,EAEP,EAFO,CAAV;AAGA,WAJD;AAMA1D,UAAAA,MAAM,CAACV,EAAP,CAAW,uBAAqB3B,SAAhC,EAA2C,YAAY;AACtDqB,YAAAA,IAAI,CAACN,MAAL,CAAagF,QAAb,EAAuB,IAAvB,EAA6B,KAA7B;AACA,WAFD,EA/BmC,CAmCnC;;AACA1D,UAAAA,MAAM,CAACG,GAAP,CAAY,UAAQxC,SAApB,EAA+B,YAAY;AAC1Cb,YAAAA,EAAE,CAACgH,IAAH,CAAQvG,MAAR,CAAgB,IAAhB;AACAT,YAAAA,EAAE,CAACoE,GAAH,CAAQ,iBAAR;AACAlB,YAAAA,MAAM,CAACkB,GAAP,CAAYvD,SAAZ;AACA5B,YAAAA,CAAC,CAAEe,EAAE,CAACmC,KAAH,GAAWc,SAAX,EAAF,CAAD,CAA4BsB,WAA5B,CAAwC,eAAxC;;AAEA,gBAAIrC,IAAI,CAAC3B,CAAL,CAAO4G,YAAX,EAAyB;AACxBjF,cAAAA,IAAI,CAAC3B,CAAL,CAAO4G,YAAP,GAAsB,KAAtB;;AACAjF,cAAAA,IAAI,CAACwC,UAAL,CAAiB,mBAAjB,EAAsC,CAAC1E,EAAD,EAAK4G,QAAL,CAAtC;AACA;AACD,WAVD;AAWA,SAhDF,EAiDEvD,GAjDF,CAiDO,eAAaxC,SAjDpB,EAiD+B,YAAY;AACzC;AACA;AACAqC,UAAAA,MAAM,CAACkB,GAAP,CAAYvD,SAAZ;AACA,SArDF,EAsDE8E,MAtDF,CAsDUiB,QAAQ,CAAC5E,KAAT,EAtDV;AAuDA,OAxDD,CA5CD,CAsGC;AACA;AACA;;;AACA,UAAKyB,GAAG,KAAK,EAAb,EAAkB;AACjBiD,QAAAA,QAAQ,GAAG,IAAX;AAEAzH,QAAAA,CAAC,CAACE,QAAD,CAAD,CAAYkE,GAAZ,CAAiB,OAAjB,EAA0B,YAAY;AAAE;AACvCyD,UAAAA,UAAU;AACV,SAFD;AAGA,OAND,MAOK;AACJA,QAAAA,UAAU;AACV;AACD,KA5gB4B;;AA+gB7B;AACD;AACA;AACA;AACA;AACA;AACA;AACCpC,IAAAA,UAAU,EAAE,UAAW0C,IAAX,EAAiBC,IAAjB,EACZ;AACC,WAAK9G,CAAL,CAAOP,EAAP,CAAUsH,QAAV,CAAoB,OAApB,EAA6B,UAAWC,GAAX,EAAgBhB,CAAhB,EAAoB;AAChDtH,QAAAA,CAAC,CAACsI,GAAG,CAACC,MAAL,CAAD,CAAcC,cAAd,CAA8BL,IAA9B,EAAoCC,IAApC;AACA,OAFD;AAGA,KA3hB4B;;AA8hB7B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCzF,IAAAA,MAAM,EAAE,UAAWF,GAAX,EAAgBC,MAAhB,EAAwB+F,KAAxB,EAA+B7C,aAA/B,EACR;AACC,UAAI3C,IAAI,GAAG,IAAX;AACA,UAAIlC,EAAE,GAAG,KAAKO,CAAL,CAAOP,EAAhB;AACA,UAAI2H,QAAQ,GAAG3H,EAAE,CAAC+D,IAAH,CAAQD,IAAR,EAAf;AACA,UAAIlD,SAAS,GAAG,KAAKL,CAAL,CAAOK,SAAvB;;AAEA,UAAK,CAAEiE,aAAP,EAAsB;AACrBA,QAAAA,aAAa,GAAG,IAAhB;AACA;;AAED,UAAK,CAAE,KAAKtE,CAAL,CAAOE,MAAd,EAAuB;AACtB;AACA;;AAED,UAAK,OAAOiB,GAAP,KAAe,QAApB,EAA+B;AAC9B;AACA,YAAK,CAAEA,GAAG,CAACgB,GAAJ,EAAP,EAAmB;AAClB;AACA,SAJ6B,CAM9B;;;AACA,YAAIV,KAAK,GAAGN,GAAG,CAACM,KAAJ,EAAZ;AACAL,QAAAA,MAAM,GAAGK,KAAK,CAACL,MAAf;AACAD,QAAAA,GAAG,GAAG1B,EAAE,CACN4H,IADI,CACE;AAAE5E,UAAAA,MAAM,EAAE,SAAV;AAAqB6E,UAAAA,KAAK,EAAE;AAA5B,SADF,EAEJzB,OAFI,GAGJI,OAHI,CAGKxE,KAAK,CAACN,GAHX,CAAN,CAT8B,CAc9B;;AACA,YAAKA,GAAG,GAAG,CAAX,EAAe;AACd;AACA,SAjB6B,CAmB9B;AACA;AACA;;;AACA,YAAKiG,QAAQ,CAACG,UAAd,EAA2B;AAC1BpG,UAAAA,GAAG,IAAIiG,QAAQ,CAAC3D,KAAhB;AACA;AACD,OAvCF,CAyCC;AACA;;;AACA,UAAK2D,QAAQ,CAAC5E,MAAT,KAAoB,CAAC,CAArB,KAA2BrB,GAAG,GAAGiG,QAAQ,CAAC3D,KAAf,IAAwBtC,GAAG,IAAIiG,QAAQ,CAAC3D,KAAT,GAAe2D,QAAQ,CAAC5E,MAAlF,CAAL,EAAiG;AAChG,aAAKxC,CAAL,CAAOG,SAAP,GAAmB,IAAnB;AACA,aAAKH,CAAL,CAAOI,cAAP,GAAwB,IAAxB;AAEAX,QAAAA,EAAE,CACAqD,GADF,CACO,MADP,EACe,YAAY;AACzBnB,UAAAA,IAAI,CAAC3B,CAAL,CAAOG,SAAP,GAAmB,KAAnB;AACAwB,UAAAA,IAAI,CAAC3B,CAAL,CAAOI,cAAP,GAAwB,KAAxB;;AACAuB,UAAAA,IAAI,CAACN,MAAL,CAAaF,GAAb,EAAkBC,MAAlB,EAA0BhC,SAA1B,EAAqCkF,aAArC;AACA,SALF,EAMEd,IANF,CAMQgE,IAAI,CAACC,KAAL,CAAYtG,GAAG,GAAGiG,QAAQ,CAAC5E,MAA3B,CANR,EAOEiD,IAPF,CAOQ,KAPR;AASA;AACA,OAzDF,CA2DC;;;AACA,UAAK/G,CAAC,CAACgJ,OAAF,CAAWtG,MAAX,EAAmB,KAAKsE,QAAL,EAAnB,MAAyC,CAAC,CAA/C,EAAmD;AAClD;AACA,OA9DF,CAgEC;AACA;;;AACA,UAAK0B,QAAQ,CAACG,UAAd,EAA2B;AAC1BpG,QAAAA,GAAG,IAAIiG,QAAQ,CAAC3D,KAAhB;AACA,OApEF,CAsEC;AACA;;;AACA,UAAIkE,KAAK,GAAGlI,EAAE,CAACkI,KAAH,CAAU,IAAV,EAAgBvG,MAAhB,EAAwB;AAACwG,QAAAA,MAAM,EAAE,SAAT;AAAoBN,QAAAA,KAAK,EAAE;AAA3B,OAAxB,EAAgEO,OAAhE,EAAZ;AACA,UAAIvG,IAAI,GAAG7B,EAAE,CAAC6B,IAAH,CAASqG,KAAK,CAAExG,GAAF,CAAd,CAAX;;AAEA,UAAKd,SAAL,EAAiB;AAChB;AACA,YAAKA,SAAS,CAACwB,IAAV,KAAmBP,IAAI,CAACO,IAAL,EAAxB,EAAsC;AACrC,eAAKsC,UAAL,CAAiB,aAAjB,EAAgC,CAAE,KAAKnE,CAAL,CAAOP,EAAT,EAAa6B,IAAb,EAAmBgD,aAAa,IAAI,IAApC,CAAhC;;AACA;AACA,SALe,CAOhB;;;AACA,aAAKvD,KAAL;AACA,OApFF,CAsFC;;;AACA,WAAK+G,iBAAL;;AAEA,UAAIjG,IAAI,GAAGnD,CAAC,CAAE4C,IAAI,CAACO,IAAL,EAAF,CAAZ;AACAA,MAAAA,IAAI,CAAC6E,QAAL,CAAe,KAAK9G,CAAL,CAAOqE,SAAtB;;AAEA,WAAKC,mBAAL,CAAyB9C,MAAzB,EA5FD,CA8FC;;;AACA,UAAK+F,KAAK,KAAK/H,SAAV,IAAuB+H,KAAK,KAAK,IAAtC,EAA6C;AAC5C,aAAKY,OAAL,CAAcrJ,CAAC,CAACC,MAAD,CAAf,EAAyBD,CAAC,CAACE,QAAQ,CAACoD,IAAV,CAA1B,EAA2CH,IAA3C,EAAiD,QAAjD;;AAEA,YAAImG,UAAU,GAAGvI,EAAE,CAACmC,KAAH,GAAWI,IAAX,GAAkBiG,UAAnC;;AACA,YAAKD,UAAU,KAAKvI,EAAE,CAACmC,KAAH,GAAWsG,MAAX,GAAoBD,UAAxC,EAAqD;AACpD,cAAIE,MAAM,GAAGzJ,CAAC,CAACsJ,UAAU,CAACC,UAAZ,CAAd;;AAEA,eAAKF,OAAL,CAAcI,MAAd,EAAsBA,MAAtB,EAA8BtG,IAA9B,EAAoC,UAApC;AACA;AACD,OAxGF,CA0GC;;;AACA,WAAK7B,CAAL,CAAOK,SAAP,GAAmB;AAClBiB,QAAAA,IAAI,EAAEA,IADY;AAElBO,QAAAA,IAAI,EAAEP,IAAI,CAACO,IAAL,EAFY;AAGlByB,QAAAA,QAAQ,EAAE;AACTnC,UAAAA,GAAG,EAAE1B,EAAE,CAAC4H,IAAH,CAAS;AAAE7D,YAAAA,IAAI,EAAE;AAAR,WAAT,EAA+BqC,OAA/B,GAAyCI,OAAzC,CAAkD3E,IAAI,CAACG,KAAL,GAAaN,GAA/D,CADI;AAETC,UAAAA,MAAM,EAAEE,IAAI,CAACG,KAAL,GAAaL;AAFZ;AAHQ,OAAnB;;AASA,WAAK+C,UAAL,CAAiB,WAAjB,EAA8B,CAAE,KAAKnE,CAAL,CAAOP,EAAT,EAAa6B,IAAb,EAAmBgD,aAAa,IAAI,IAApC,CAA9B;;AACA7E,MAAAA,EAAE,CAACuB,KAAH,CAASoH,IAAT;AACA,KAjqB4B;;AAoqB7B;AACD;AACA;AACA;AACA;AACA;AACChG,IAAAA,IAAI,EAAE,UAAWF,CAAX,EACN;AACC;AACA;AACA,UAAK,KAAKlC,CAAL,CAAOI,cAAZ,EAA6B;AAC5B8B,QAAAA,CAAC,CAAC2C,cAAF;AACA;AACA;;AAED,UAAI3E,MAAM,GAAG,KAAKF,CAAL,CAAOE,MAApB;AACA,WAAKF,CAAL,CAAO4G,YAAP,GAAsB,CAAC1G,MAAM,KAAK,iBAAX,IAAgCA,MAAM,KAAK,UAA5C,KAA2DgC,CAAC,CAACmG,OAAF,KAAc,EAAzE,GACnB,IADmB,GAEnB,KAFH;AAIA,UAAIC,SAAS,GAAGpI,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,iBAA9C;;AACA,UAAK,CAAEA,MAAP,EAAgB;AACf;AACA;;AAED,UAAK,CAACgC,CAAC,CAACmG,OAAF,KAAc,CAAd,IAAmBnG,CAAC,CAACqG,OAArB,IAAgCrG,CAAC,CAACsG,OAAlC,IAA6CtG,CAAC,CAACuG,MAAhD,KAA2D,EAAEvG,CAAC,CAACqG,OAAF,IAAarG,CAAC,CAACuG,MAAjB,CAAhE,EAA2F;AAC1F;AACA,OApBF,CAsBC;;;AACA,UAAIpI,SAAS,GAAG,KAAKL,CAAL,CAAOK,SAAvB;;AACA,UAAK,CAAEA,SAAP,EAAmB;AAClB;AACA,OA1BF,CA4BC;;;AACA,UAAK,CAAE,KAAKL,CAAL,CAAOP,EAAP,CAAU6B,IAAV,CAAejB,SAAS,CAACwB,IAAzB,EAA+BM,GAA/B,EAAP,EAA8C;AAC7C,aAAKnC,CAAL,CAAOK,SAAP,GAAmB,IAAnB;AACA;AACA;;AAED,UAAIsB,IAAI,GAAG,IAAX;AACA,UAAIlC,EAAE,GAAG,KAAKO,CAAL,CAAOP,EAAhB;AACA,UAAIiJ,SAAS,GAAG,KAAK1I,CAAL,CAAOP,EAAP,CAAUgB,QAAV,GAAqB,CAArB,EAAwBkI,OAAxB,CAAgCC,EAAhC,GAAqC,IAArC,GAA4C,KAA5D,CApCD,CAsCC;;AACA,UAAK,KAAKhJ,CAAL,CAAO6G,IAAP,IAAe/H,CAAC,CAACgJ,OAAF,CAAWxF,CAAC,CAACmG,OAAb,EAAsB,KAAKzI,CAAL,CAAO6G,IAA7B,MAAwC,CAAC,CAA7D,EAAiE;AAChE;AACA;;AAED,cAAQvE,CAAC,CAACmG,OAAV;AACC,aAAK,CAAL;AAAQ;AACP;AACA,eAAKQ,MAAL,CAAa3G,CAAb,EAAgBA,CAAC,CAAC4G,QAAF,GAAa,MAAb,GAAsB,OAAtC,EAA+C,IAA/C;;AACA;;AAED,aAAK,EAAL;AAAS;AACR,cAAK,KAAKlJ,CAAL,CAAOyC,QAAP,IAAmBnC,MAAM,KAAK,IAAnC,EAA0C;AACzC,iBAAKa,KAAL;AACA;;AACD;;AAED,aAAK,EAAL,CAZD,CAYU;;AACT,aAAK,EAAL;AAAS;AACR,cAAKuH,SAAS,IAAI,CAACI,SAAnB,EAA+B;AAC9BxG,YAAAA,CAAC,CAAC2C,cAAF;AAEApF,YAAAA,EAAE,CACA+D,IADF,CACQtB,CAAC,CAACmG,OAAF,KAAc,EAAd,GAAmB,UAAnB,GAAgC,MADxC,EAEE5C,IAFF,CAEQ,KAFR;AAGA;;AACD;;AAED,aAAK,EAAL,CAvBD,CAuBU;;AACT,aAAK,EAAL;AAAS;AACR,cAAK6C,SAAL,EAAiB;AAChBpG,YAAAA,CAAC,CAAC2C,cAAF;AACA,gBAAIgB,OAAO,GAAGpG,EAAE,CAACkI,KAAH,CAAU;AAACnE,cAAAA,IAAI,EAAE;AAAP,aAAV,EAA8BqC,OAA9B,EAAd;;AACA,gBAAIkD,UAAU,GAAG,KAAKrD,QAAL,EAAjB;;AAEA,iBAAKrE,MAAL,CAAa5B,EAAE,CAAC6B,IAAH,CACZuE,OAAO,CAAE3D,CAAC,CAACmG,OAAF,KAAc,EAAd,GAAmBxC,OAAO,CAACrD,MAAR,GAAe,CAAlC,GAAsCuG,UAAU,CAAC,CAAD,CAAlD,CADK,CAAb,EAEG,IAFH,EAES,IAFT,EAEe7G,CAFf;AAGA;;AACD;;AAED,aAAK,EAAL;AAAS;AACR,cAAKoG,SAAL,EAAiB;AAChB,iBAAKO,MAAL,CAAa3G,CAAb,EAAgB,MAAhB;AACA;;AACD;;AAED,aAAK,EAAL;AAAS;AACR,cAAKoG,SAAL,EAAiB;AAChB,iBAAKO,MAAL,CAAa3G,CAAb,EAAgB,IAAhB;AACA;;AACD;;AAED,aAAK,EAAL;AAAS;AACR,cAAKoG,SAAL,EAAiB;AAChB,iBAAKO,MAAL,CAAa3G,CAAb,EAAgB,OAAhB;AACA;;AACD;;AAED,aAAK,EAAL;AAAS;AACR,cAAKoG,SAAL,EAAiB;AAChB,iBAAKO,MAAL,CAAa3G,CAAb,EAAgB,MAAhB;AACA;;AACD;;AAED,aAAK,GAAL;AAAU;AACT,cAAK,KAAKtC,CAAL,CAAO+C,MAAZ,EAAqB;AACpB,iBAAKM,OAAL,CAAa,IAAb,EAAmBf,CAAnB,EAAsB,IAAtB;;AACA;AACA;;AACD;;AAED;AACC;AACA,cAAKhC,MAAM,KAAK,IAAhB,EAAuB;AACtB,iBAAKiE,UAAL,CAAiB,KAAjB,EAAwB,CAAE1E,EAAF,EAAMyC,CAAC,CAACmG,OAAR,EAAiB,KAAKrI,CAAL,CAAOK,SAAP,CAAiBiB,IAAlC,EAAwCY,CAAxC,CAAxB;AACA;;AACD;AAxEF;AA0EA,KAhyB4B;;AAkyB7B;AACD;AACA;AACC4F,IAAAA,iBAAiB,EAAE,YACnB;AACC,UAAIkB,SAAS,GAAG,KAAKhJ,CAAL,CAAOP,EAAP,CAAUmC,KAAV,GAAkBC,IAAlB,EAAhB;AAEAnD,MAAAA,CAAC,CAACM,EAAF,CAAKC,SAAL,CAAegK,MAAf,CAAsB;AAACC,QAAAA,GAAG,EAAC;AAAL,OAAtB,EAAkCnC,QAAlC,CAA2C,OAA3C,EAAoD,UAAUtG,QAAV,EAAoB;AACvE,YAAI,KAAKmB,KAAL,GAAaC,IAAb,OAAwBmH,SAA5B,EAAuC;AACtC,eAAK1H,IAAL,CAAUR,IAAV;AACA;AACD,OAJD;AAKA,KA9yB4B;;AAgzB7B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCiH,IAAAA,OAAO,EAAE,UAAWrF,SAAX,EAAsByG,QAAtB,EAAgC7H,IAAhC,EAAsC8H,MAAtC,EACT;AACC,UAAIC,MAAM,GAAG/H,IAAI,CAAC8H,MAAD,CAAJ,EAAb;AACA,UAAIE,MAAM,GAAGhI,IAAI,CAACiI,WAAL,EAAb;AACA,UAAIC,KAAK,GAAGlI,IAAI,CAACmI,UAAL,EAAZ;AAEA,UAAIC,SAAS,GAAGP,QAAQ,CAACO,SAAT,EAAhB;AACA,UAAIC,UAAU,GAAGR,QAAQ,CAACQ,UAAT,EAAjB;AACA,UAAIC,eAAe,GAAGlH,SAAS,CAAC4G,MAAV,EAAtB;AACA,UAAIO,cAAc,GAAGnH,SAAS,CAAC8G,KAAV,EAArB,CARD,CAUC;AACA;;AACA,UAAKJ,MAAM,KAAK,UAAhB,EAA6B;AAC5BC,QAAAA,MAAM,CAACS,GAAP,IAAcC,QAAQ,CAAEzI,IAAI,CAAC0I,OAAL,CAAa,OAAb,EAAsBjI,GAAtB,CAA0B,KAA1B,CAAF,EAAoC,EAApC,CAAtB;AACA,OAdF,CAgBC;;;AACA,UAAKsH,MAAM,CAACS,GAAP,GAAaJ,SAAlB,EAA8B;AAC7BP,QAAAA,QAAQ,CAACO,SAAT,CAAoBL,MAAM,CAACS,GAA3B;AACA,OAnBF,CAqBC;;;AACA,UAAKT,MAAM,CAACY,IAAP,GAAcN,UAAnB,EAAgC;AAC/BR,QAAAA,QAAQ,CAACQ,UAAT,CAAqBN,MAAM,CAACY,IAA5B;AACA,OAxBF,CA0BC;;;AACA,UAAKZ,MAAM,CAACS,GAAP,GAAaR,MAAb,GAAsBI,SAAS,GAAGE,eAAlC,IAAqDN,MAAM,GAAGM,eAAnE,EAAqF;AACpFT,QAAAA,QAAQ,CAACO,SAAT,CAAoBL,MAAM,CAACS,GAAP,GAAaR,MAAb,GAAsBM,eAA1C;AACA,OA7BF,CA+BC;;;AACA,UAAKP,MAAM,CAACY,IAAP,GAAcT,KAAd,GAAsBG,UAAU,GAAGE,cAAnC,IAAqDL,KAAK,GAAGK,cAAlE,EAAmF;AAClFV,QAAAA,QAAQ,CAACQ,UAAT,CAAqBN,MAAM,CAACY,IAAP,GAAcT,KAAd,GAAsBK,cAA3C;AACA;AACD,KA/1B4B;;AAk2B7B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACChB,IAAAA,MAAM,EAAE,UAAW3G,CAAX,EAAcgI,SAAd,EAAyBC,WAAzB,EACR;AACC,UAAIxI,IAAI,GAAQ,IAAhB;AACA,UAAIlC,EAAE,GAAU,KAAKO,CAAL,CAAOP,EAAvB;AACA,UAAI2H,QAAQ,GAAI3H,EAAE,CAAC+D,IAAH,CAAQD,IAAR,EAAhB;AACA,UAAI8D,IAAI,GAAQD,QAAQ,CAAC1D,cAAzB;;AACA,UAAIkC,OAAO,GAAK,KAAKF,QAAL,EAAhB;;AACA,UAAI0E,IAAI,GAAQ,KAAKpK,CAAL,CAAOK,SAAvB;;AACA,UAAK,CAAE+J,IAAP,EAAc;AACb;AACA;;AAED,UAAIC,WAAW,GAAID,IAAI,CAAC9I,IAAxB;;AACA,UAAK,CAAE+I,WAAP,EAAqB;AACpB;AACA;;AAED,UAAIC,OAAO,GAAG7K,EAAE,CACd4H,IADY,CACN;AAAE5E,QAAAA,MAAM,EAAE,SAAV;AAAqB6E,QAAAA,KAAK,EAAE;AAA5B,OADM,EAEZzB,OAFY,GAGZI,OAHY,CAGHoE,WAAW,CAAC5I,KAAZ,GAAoBN,GAHjB,CAAd,CAhBD,CAqBC;AACA;AACA;;AACA,UAAKiG,QAAQ,CAACG,UAAd,EAA2B;AAC1B+C,QAAAA,OAAO,IAAIlD,QAAQ,CAAC3D,KAApB;AACA;;AAED,UAAI8G,OAAO,GAAG9K,EAAE,CACdmG,OADY,CACHA,OADG,EAEZC,OAFY,GAGZI,OAHY,CAGHoE,WAAW,CAAC5I,KAAZ,GAAoBL,MAHjB,CAAd;AAKA,UACCD,GAAG,GAAGmJ,OADP;AAAA,UAEClJ,MAAM,GAAGwE,OAAO,CAAE2E,OAAF,CAFjB,CAjCD,CAmC+B;;AAE9B,UAAKL,SAAS,KAAK,OAAnB,EAA6B;AAC5B,YAAKK,OAAO,IAAI3E,OAAO,CAACpD,MAAR,GAAiB,CAAjC,EAAqC;AACpCrB,UAAAA,GAAG;AACHC,UAAAA,MAAM,GAAGwE,OAAO,CAAC,CAAD,CAAhB;AACA,SAHD,MAIK;AACJxE,UAAAA,MAAM,GAAGwE,OAAO,CAAE2E,OAAO,GAAC,CAAV,CAAhB;AACA;AACD,OARD,MASK,IAAKL,SAAS,KAAK,MAAnB,EAA4B;AAChC,YAAKK,OAAO,KAAK,CAAjB,EAAqB;AACpBpJ,UAAAA,GAAG;AACHC,UAAAA,MAAM,GAAGwE,OAAO,CAAEA,OAAO,CAACpD,MAAR,GAAiB,CAAnB,CAAhB;AACA,SAHD,MAIK;AACJpB,UAAAA,MAAM,GAAGwE,OAAO,CAAE2E,OAAO,GAAC,CAAV,CAAhB;AACA;AACD,OARI,MASA,IAAKL,SAAS,KAAK,IAAnB,EAA0B;AAC9B/I,QAAAA,GAAG;AACH,OAFI,MAGA,IAAK+I,SAAS,KAAK,MAAnB,EAA4B;AAChC/I,QAAAA,GAAG;AACH;;AAED,UAAKA,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAGkG,IAAlB,IAA0B3I,CAAC,CAACgJ,OAAF,CAAWtG,MAAX,EAAmBwE,OAAnB,MAAiC,CAAC,CAAjE,EAAqE;AACpE,YAAI1D,CAAJ,EAAO;AACNA,UAAAA,CAAC,CAAC2C,cAAF;AACA;;AAED,aAAKxD,MAAL,CAAaF,GAAb,EAAkBC,MAAlB,EAA0B,IAA1B,EAAgCc,CAAhC;AACA,OAND,MAOK,IAAK,CAAEiI,WAAF,IAAiB,CAAE,KAAKvK,CAAL,CAAOyC,QAA/B,EAA0C;AAC9C;AACA;AACA,YAAIH,CAAJ,EAAO;AACNA,UAAAA,CAAC,CAAC2C,cAAF;AACA;AACD,OANI,MAOA;AACJ,aAAK9D,KAAL;AACA;AACD,KA77B4B;;AAg8B7B;AACD;AACA;AACA;AACA;AACA;AACCW,IAAAA,SAAS,EAAE,YACX;AACC,UAAIC,IAAI,GAAG,IAAX;AACA,UAAIlC,EAAE,GAAG,KAAKO,CAAL,CAAOP,EAAhB;AACA,UAAI+K,QAAQ,GAAG,KAAK5K,CAAL,CAAO4K,QAAP,KAAoB,IAApB,GACd,KAAK5K,CAAL,CAAO4K,QADO,GAEd/K,EAAE,CAACgB,QAAH,GAAc,CAAd,EAAiBgK,SAFlB;;AAIA,UAAKD,QAAQ,IAAI,CAAC,CAAlB,EAAsB;AACrB;AACA,OATF,CAWC;;;AACA,UAAI,CAAE,KAAKxK,CAAL,CAAOO,QAAb,EAAuB;AACtB,YAAImK,GAAG,GAAGhM,CAAC,CAAC,uCAAqC8L,QAArC,GAA8C,WAA/C,CAAD,CACRzI,GADQ,CACH;AACL4I,UAAAA,QAAQ,EAAE,UADL;AAELrB,UAAAA,MAAM,EAAE,CAFH;AAGLE,UAAAA,KAAK,EAAE,CAHF;AAILoB,UAAAA,QAAQ,EAAE;AAJL,SADG,CAAV;AAQAF,QAAAA,GAAG,CAACG,QAAJ,GAAe5I,EAAf,CAAmB,OAAnB,EAA4B,UAAUC,CAAV,EAAa;AACxC,cAAIZ,IAAI,GAAG7B,EAAE,CAAC6B,IAAH,CAAQ,QAAR,EAAkBK,IAAI,CAAC+D,QAAL,EAAlB,EAAmC;AAAClC,YAAAA,IAAI,EAAE;AAAP,WAAnC,CAAX;;AAEA,cAAKlC,IAAI,CAACa,GAAL,EAAL,EAAkB;AACjBR,YAAAA,IAAI,CAACN,MAAL,CAAaC,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+BY,CAA/B;AACA;AACD,SAND;AAQA,aAAKlC,CAAL,CAAOO,QAAP,GAAkBmK,GAAlB;AACA,OA9BF,CAgCC;;;AACA,UAAIpJ,IAAI,GAAG,KAAKtB,CAAL,CAAOP,EAAP,CAAU6B,IAAV,CAAe,QAAf,EAAyB,WAAzB,EAAsC;AAACkC,QAAAA,IAAI,EAAE,SAAP;AAAkB8D,QAAAA,KAAK,EAAE;AAAzB,OAAtC,EAA2EzF,IAA3E,EAAX;;AACA,UAAIP,IAAJ,EAAU;AACT5C,QAAAA,CAAC,CAAC4C,IAAD,CAAD,CAAQwJ,OAAR,CAAgB,KAAK9K,CAAL,CAAOO,QAAvB;AACA;AACD,KA5+B4B;;AA8+B7B;AACD;AACA;AACA;AACA;AACA;AACC2D,IAAAA,mBAAmB,EAAE,UAAU9C,MAAV,EACrB;AACC,UAAI3B,EAAE,GAAG,KAAKO,CAAL,CAAOP,EAAhB;AACA,UAAIgB,QAAQ,GAAGhB,EAAE,CAACgB,QAAH,GAAc,CAAd,CAAf;;AAEA,UAAKA,QAAQ,CAACsK,cAAd,EAA+B;AAC9B,YAAIC,QAAQ,GAAGvK,QAAQ,CAACsK,cAAT,CAAwB/K,CAAxB,CAA0BiL,YAAzC;AACA,YAAIC,SAAS,GAAGzK,QAAQ,CAAC0K,SAAT,CAAmB3I,MAAnB,GAA4B/B,QAAQ,CAACsK,cAAT,CAAwB/K,CAAxB,CAA0BoL,aAAtE;;AAEA,YAAIhK,MAAM,GAAG4J,QAAT,IAAqB5J,MAAM,IAAI8J,SAAnC,EAA8C;AAC7CzL,UAAAA,EAAE,CAAC4L,YAAH,GAAkBC,MAAlB;AACA;AACD;AACD;AAjgC4B,GAA9B;AAqgCA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA9L,EAAAA,QAAQ,CAACM,QAAT,GAAoB;AACnB;AACD;AACA;AACA;AACCuC,IAAAA,QAAQ,EAAE,IALS;;AAOnB;AACD;AACA;AACA;AACC4B,IAAAA,SAAS,EAAE,OAXQ;;AAanB;AACD;AACA;AACA;AACCN,IAAAA,SAAS,EAAE,IAjBQ;;AAmBnB;AACD;AACA;AACA;AACCiB,IAAAA,mBAAmB,EAAE,SAvBF;;AAyBnB;AACD;AACA;AACA;AACA;AACCgB,IAAAA,OAAO,EAAE,EA9BU;AA8BN;;AAEb;AACD;AACA;AACA;AACCjD,IAAAA,MAAM,EAAE,IApCW;;AAsCnB;AACD;AACA;AACA;AACCI,IAAAA,WAAW,EAAE,KA1CM;;AA4CnB;AACD;AACA;AACA;AACA;AACC7B,IAAAA,KAAK,EAAE,IAjDY;;AAmDnB;AACD;AACA;AACA;AACCuF,IAAAA,IAAI,EAAE,IAvDa;;AAyDnB;AACD;AACA;AACA;AACC+D,IAAAA,QAAQ,EAAE;AA7DS,GAApB;AAkEAhL,EAAAA,QAAQ,CAAC+L,OAAT,GAAmB,OAAnB;AAGA7M,EAAAA,CAAC,CAACM,EAAF,CAAKC,SAAL,CAAeO,QAAf,GAA0BA,QAA1B;AACAd,EAAAA,CAAC,CAACM,EAAF,CAAKK,SAAL,CAAeG,QAAf,GAA0BA,QAA1B;AAGAH,EAAAA,SAAS,CAACY,GAAV,CAAcuL,QAAd,CAAwB,aAAxB,EAAuC,YAAY;AAClD,WAAO,KAAKzE,QAAL,CAAe,OAAf,EAAwB,UAAUC,GAAV,EAAe;AAC7C,UAAKA,GAAG,CAACrG,QAAT,EAAoB;AACnBqG,QAAAA,GAAG,CAACrG,QAAJ,CAAaG,IAAb;AACA;AACD,KAJM,CAAP;AAKA,GAND;AAQAzB,EAAAA,SAAS,CAACY,GAAV,CAAcuL,QAAd,CAAwB,gBAAxB,EAA0C,YAAY;AACrD,WAAO,KAAKzE,QAAL,CAAe,MAAf,EAAuB,UAAUC,GAAV,EAAe7F,GAAf,EAAoBC,MAApB,EAA4B;AACzD,UAAK4F,GAAG,CAACrG,QAAT,EAAoB;AACnBqG,QAAAA,GAAG,CAACrG,QAAJ,CAAaO,KAAb,CAAoBC,GAApB,EAAyBC,MAAzB;AACA;AACD,KAJM,CAAP;AAKA,GAND;AAQA/B,EAAAA,SAAS,CAACY,GAAV,CAAcuL,QAAd,CAAwB,gBAAxB,EAA0C,YAAY;AACrD,WAAO,KAAKzE,QAAL,CAAe,OAAf,EAAwB,UAAUC,GAAV,EAAe;AAC7C,UAAKA,GAAG,CAACrG,QAAT,EAAoB;AACnBqG,QAAAA,GAAG,CAACrG,QAAJ,CAAaT,MAAb,CAAqB,KAArB;AACA;AACD,KAJM,CAAP;AAKA,GAND;AAQAb,EAAAA,SAAS,CAACY,GAAV,CAAcuL,QAAd,CAAwB,eAAxB,EAAyC,UAAW9L,IAAX,EAAkB;AAC1D,WAAO,KAAKqH,QAAL,CAAe,OAAf,EAAwB,UAAUC,GAAV,EAAe;AAC7C,UAAKA,GAAG,CAACrG,QAAT,EAAoB;AACnBqG,QAAAA,GAAG,CAACrG,QAAJ,CAAaT,MAAb,CAAqBR,IAAI,KAAKN,SAAT,GAAqB,IAArB,GAA4BM,IAAjD;AACA;AACD,KAJM,CAAP;AAKA,GAND;AAQAL,EAAAA,SAAS,CAACY,GAAV,CAAcuL,QAAd,CAAwB,gBAAxB,EAA0C,UAAW9L,IAAX,EAAkB;AAC3D,QAAIsH,GAAG,GAAG,KAAKyE,OAAf;;AAEA,QAAIzE,GAAG,CAACxE,MAAR,EAAgB;AACf,aAAOwE,GAAG,CAAC,CAAD,CAAH,CAAOrG,QAAP,GACJqG,GAAG,CAAC,CAAD,CAAH,CAAOrG,QAAP,CAAgBM,OAAhB,EADI,GAEJ,KAFH;AAGA;;AAED,WAAO,KAAP;AACA,GAVD;AAYA5B,EAAAA,SAAS,CAACY,GAAV,CAAcuL,QAAd,CAAwB,aAAxB,EAAuC,UAAWE,GAAX,EAAiB;AACvD,WAAO,KAAK3E,QAAL,CAAe,OAAf,EAAwB,UAAUC,GAAV,EAAe;AAC7C,UAAKA,GAAG,CAACrG,QAAT,EAAoB;AACnBqG,QAAAA,GAAG,CAACrG,QAAJ,CAAakI,MAAb,CAAqB,IAArB,EAA2B6C,GAA3B,EAAgC,KAAhC;AACA;AACD,KAJM,CAAP;AAKA,GAND,EA/rC6C,CAusC7C;;AACArM,EAAAA,SAAS,CAACsM,GAAV,CAAcC,QAAd,CAAuBtK,IAAvB,CAA4B4E,IAA5B,CAAkC,UAAWzF,QAAX,EAAqBf,IAArB,EAA2BiI,KAA3B,EAAmC;AACpE,QAAIpG,OAAO,GAAG7B,IAAI,CAAC6B,OAAnB;AACA,QAAIsK,EAAE,GAAGpL,QAAQ,CAACE,QAAlB;AACA,QAAImF,GAAG,GAAG,EAAV;;AAEA,QAAK,CAAE+F,EAAF,IAAQtK,OAAO,KAAKnC,SAAzB,EAAqC;AACpC,aAAOuI,KAAP;AACA;;AAED,SAAM,IAAI3B,CAAC,GAAC,CAAN,EAAS8F,GAAG,GAACnE,KAAK,CAACnF,MAAzB,EAAkCwD,CAAC,GAAC8F,GAApC,EAA0C9F,CAAC,EAA3C,EAAgD;AAC/C,UAAMzE,OAAO,KAAK,IAAZ,IAAqBsK,EAAE,CAACtK,OAAH,CAAYoG,KAAK,CAAC3B,CAAD,CAAjB,CAAtB,IACFzE,OAAO,KAAK,KAAZ,IAAqB,CAAEsK,EAAE,CAACtK,OAAH,CAAYoG,KAAK,CAAC3B,CAAD,CAAjB,CAD1B,EAEE;AACDF,QAAAA,GAAG,CAACI,IAAJ,CAAUyB,KAAK,CAAC3B,CAAD,CAAf;AACA;AACD;;AAED,WAAOF,GAAP;AACA,GAlBD,EAxsC6C,CA6tC7C;AACA;;AACApH,EAAAA,CAAC,CAACE,QAAD,CAAD,CAAYqD,EAAZ,CAAgB,gBAAhB,EAAkC,UAAUC,CAAV,EAAazB,QAAb,EAAuBsL,IAAvB,EAA6B;AAC9D,QAAK7J,CAAC,CAAC5B,SAAF,KAAgB,IAArB,EAA4B;AAC3B;AACA;;AAED,QAAI0L,IAAI,GAAGvL,QAAQ,CAACwL,KAAT,CAAexF,IAA1B;AACA,QAAI3G,QAAQ,GAAGT,SAAS,CAACS,QAAV,CAAmB2G,IAAlC;;AAEA,QAAKuF,IAAI,IAAIlM,QAAb,EAAwB;AACvB,UAAIJ,IAAI,GAAGhB,CAAC,CAACmB,MAAF,CAAU,EAAV,EAAcC,QAAd,EAAwBkM,IAAxB,CAAX;;AAEA,UAAKA,IAAI,KAAK,KAAd,EAAsB;AACrB,YAAIxM,QAAJ,CAAciB,QAAd,EAAwBf,IAAxB;AACA;AACD;AACD,GAfD;AAkBA,SAAOF,QAAP;AACC,CA3wCA,CAAD","sourcesContent":["/*! KeyTable 2.6.2\n * Â©2009-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     KeyTable\n * @description Spreadsheet like keyboard navigation for DataTables\n * @version     2.6.2\n * @file        dataTables.keyTable.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2009-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\nvar namespaceCounter = 0;\nvar editorNamespaceCounter = 0;\n\n\nvar KeyTable = function ( dt, opts ) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.8' ) ) {\n\t\tthrow 'KeyTable requires DataTables 1.10.8 or newer';\n\t}\n\n\t// User and defaults configuration object\n\tthis.c = $.extend( true, {},\n\t\tDataTable.defaults.keyTable,\n\t\tKeyTable.defaults,\n\t\topts\n\t);\n\n\t// Internal settings\n\tthis.s = {\n\t\t/** @type {DataTable.Api} DataTables' API instance */\n\t\tdt: new DataTable.Api( dt ),\n\n\t\tenable: true,\n\n\t\t/** @type {bool} Flag for if a draw is triggered by focus */\n\t\tfocusDraw: false,\n\n\t\t/** @type {bool} Flag to indicate when waiting for a draw to happen.\n\t\t  *   Will ignore key presses at this point\n\t\t  */\n\t\twaitingForDraw: false,\n\n\t\t/** @type {object} Information about the last cell that was focused */\n\t\tlastFocus: null,\n\n\t\t/** @type {string} Unique namespace per instance */\n\t\tnamespace: '.keyTable-'+(namespaceCounter++),\n\n\t\t/** @type {Node} Input element for tabbing into the table */\n\t\ttabInput: null\n\t};\n\n\t// DOM items\n\tthis.dom = {\n\n\t};\n\n\t// Check if row reorder has already been initialised on this table\n\tvar settings = this.s.dt.settings()[0];\n\tvar exisiting = settings.keytable;\n\tif ( exisiting ) {\n\t\treturn exisiting;\n\t}\n\n\tsettings.keytable = this;\n\tthis._constructor();\n};\n\n\n$.extend( KeyTable.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * API methods for DataTables API interface\n\t */\n\n\t/**\n\t * Blur the table's cell focus\n\t */\n\tblur: function ()\n\t{\n\t\tthis._blur();\n\t},\n\n\t/**\n\t * Enable cell focus for the table\n\t *\n\t * @param  {string} state Can be `true`, `false` or `-string navigation-only`\n\t */\n\tenable: function ( state )\n\t{\n\t\tthis.s.enable = state;\n\t},\n\n\t/**\n\t * Get enable status\n\t */\n\tenabled: function () {\n\t\treturn this.s.enable;\n\t},\n\n\t/**\n\t * Focus on a cell\n\t * @param  {integer} row    Row index\n\t * @param  {integer} column Column index\n\t */\n\tfocus: function ( row, column )\n\t{\n\t\tthis._focus( this.s.dt.cell( row, column ) );\n\t},\n\n\t/**\n\t * Is the cell focused\n\t * @param  {object} cell Cell index to check\n\t * @returns {boolean} true if focused, false otherwise\n\t */\n\tfocused: function ( cell )\n\t{\n\t\tvar lastFocus = this.s.lastFocus;\n\n\t\tif ( ! lastFocus ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar lastIdx = this.s.lastFocus.cell.index();\n\t\treturn cell.row === lastIdx.row && cell.column === lastIdx.column;\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the KeyTable instance\n\t *\n\t * @private\n\t */\n\t_constructor: function ()\n\t{\n\t\tthis._tabInput();\n\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar table = $( dt.table().node() );\n\t\tvar namespace = this.s.namespace;\n\t\tvar editorBlock = false;\n\n\t\t// Need to be able to calculate the cell positions relative to the table\n\t\tif ( table.css('position') === 'static' ) {\n\t\t\ttable.css( 'position', 'relative' );\n\t\t}\n\n\t\t// Click to focus\n\t\t$( dt.table().body() ).on( 'click'+namespace, 'th, td', function (e) {\n\t\t\tif ( that.s.enable === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cell = dt.cell( this );\n\n\t\t\tif ( ! cell.any() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthat._focus( cell, null, false, e );\n\t\t} );\n\n\t\t// Key events\n\t\t$( document ).on( 'keydown'+namespace, function (e) {\n\t\t\tif ( ! editorBlock ) {\n\t\t\t\tthat._key( e );\n\t\t\t}\n\t\t} );\n\n\t\t// Click blur\n\t\tif ( this.c.blurable ) {\n\t\t\t$( document ).on( 'mousedown'+namespace, function ( e ) {\n\t\t\t\t// Click on the search input will blur focus\n\t\t\t\tif ( $(e.target).parents( '.dataTables_filter' ).length ) {\n\t\t\t\t\tthat._blur();\n\t\t\t\t}\n\n\t\t\t\t// If the click was inside the DataTables container, don't blur\n\t\t\t\tif ( $(e.target).parents().filter( dt.table().container() ).length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Don't blur in Editor form\n\t\t\t\tif ( $(e.target).parents('div.DTE').length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Or an Editor date input\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).parents('div.editor-datetime').length ||\n\t\t\t\t\t$(e.target).parents('div.dt-datetime').length \n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//If the click was inside the fixed columns container, don't blur\n\t\t\t\tif ( $(e.target).parents().filter('.DTFC_Cloned').length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthat._blur();\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.c.editor ) {\n\t\t\tvar editor = this.c.editor;\n\n\t\t\t// Need to disable KeyTable when the main editor is shown\n\t\t\teditor.on( 'open.keyTableMain', function (e, mode, action) {\n\t\t\t\tif ( mode !== 'inline' && that.s.enable ) {\n\t\t\t\t\tthat.enable( false );\n\n\t\t\t\t\teditor.one( 'close'+namespace, function () {\n\t\t\t\t\t\tthat.enable( true );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( this.c.editOnFocus ) {\n\t\t\t\tdt.on( 'key-focus'+namespace+' key-refocus'+namespace, function ( e, dt, cell, orig ) {\n\t\t\t\t\tthat._editor( null, orig, true );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Activate Editor when a key is pressed (will be ignored, if\n\t\t\t// already active).\n\t\t\tdt.on( 'key'+namespace, function ( e, dt, key, cell, orig ) {\n\t\t\t\tthat._editor( key, orig, false );\n\t\t\t} );\n\n\t\t\t// Active editing on double click - it will already have focus from\n\t\t\t// the click event handler above\n\t\t\t$( dt.table().body() ).on( 'dblclick'+namespace, 'th, td', function (e) {\n\t\t\t\tif ( that.s.enable === false ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar cell = dt.cell( this );\n\n\t\t\t\tif ( ! cell.any() ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( that.s.lastFocus && this !== that.s.lastFocus.cell.node() ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthat._editor( null, e, true );\n\t\t\t} );\n\n\t\t\t// While Editor is busy processing, we don't want to process any key events\n\t\t\teditor\n\t\t\t\t.on('preSubmit', function () {\n\t\t\t\t\teditorBlock = true;\n\t\t\t\t} )\n\t\t\t\t.on('preSubmitCancelled', function () {\n\t\t\t\t\teditorBlock = false;\n\t\t\t\t} )\n\t\t\t\t.on('submitComplete', function () {\n\t\t\t\t\teditorBlock = false;\n\t\t\t\t} );\n\t\t}\n\n\t\t// Stave saving\n\t\tif ( dt.settings()[0].oFeatures.bStateSave ) {\n\t\t\tdt.on( 'stateSaveParams'+namespace, function (e, s, d) {\n\t\t\t\td.keyTable = that.s.lastFocus ?\n\t\t\t\t\tthat.s.lastFocus.cell.index() :\n\t\t\t\t\tnull;\n\t\t\t} );\n\t\t}\n\n\t\tdt.on( 'column-visibility'+namespace, function (e) {\n\t\t\tthat._tabInput();\n\t\t} );\n\n\t\t// Redraw - retain focus on the current cell\n\t\tdt.on( 'draw'+namespace, function (e) {\n\t\t\tthat._tabInput();\n\n\t\t\tif ( that.s.focusDraw ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lastFocus = that.s.lastFocus;\n\n\t\t\tif ( lastFocus ) {\n\t\t\t\tvar relative = that.s.lastFocus.relative;\n\t\t\t\tvar info = dt.page.info();\n\t\t\t\tvar row = relative.row + info.start;\n\n\t\t\t\tif ( info.recordsDisplay === 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Reverse if needed\n\t\t\t\tif ( row >= info.recordsDisplay ) {\n\t\t\t\t\trow = info.recordsDisplay - 1;\n\t\t\t\t}\n\n\t\t\t\tthat._focus( row, relative.column, true, e );\n\t\t\t}\n\t\t} );\n\n\t\t// Clipboard support\n\t\tif ( this.c.clipboard ) {\n\t\t\tthis._clipboard();\n\t\t}\n\n\t\tdt.on( 'destroy'+namespace, function () {\n\t\t\tthat._blur( true );\n\n\t\t\t// Event tidy up\n\t\t\tdt.off( namespace );\n\n\t\t\t$( dt.table().body() )\n\t\t\t\t.off( 'click'+namespace, 'th, td' )\n\t\t\t\t.off( 'dblclick'+namespace, 'th, td' );\n\n\t\t\t$( document )\n\t\t\t\t.off( 'mousedown'+namespace )\n\t\t\t\t.off( 'keydown'+namespace )\n\t\t\t\t.off( 'copy'+namespace )\n\t\t\t\t.off( 'paste'+namespace );\n\t\t} );\n\n\t\t// Initial focus comes from state or options\n\t\tvar state = dt.state.loaded();\n\n\t\tif ( state && state.keyTable ) {\n\t\t\t// Wait until init is done\n\t\t\tdt.one( 'init', function () {\n\t\t\t\tvar cell = dt.cell( state.keyTable );\n\n\t\t\t\t// Ensure that the saved cell still exists\n\t\t\t\tif ( cell.any() ) {\n\t\t\t\t\tcell.focus();\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\telse if ( this.c.focus ) {\n\t\t\tdt.cell( this.c.focus ).focus();\n\t\t}\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Blur the control\n\t *\n\t * @param {boolean} [noEvents=false] Don't trigger updates / events (for destroying)\n\t * @private\n\t */\n\t_blur: function (noEvents)\n\t{\n\t\tif ( ! this.s.enable || ! this.s.lastFocus ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar cell = this.s.lastFocus.cell;\n\n\t\t$( cell.node() ).removeClass( this.c.className );\n\t\tthis.s.lastFocus = null;\n\n\t\tif ( ! noEvents ) {\n\t\t\tthis._updateFixedColumns(cell.index().column);\n\n\t\t\tthis._emitEvent( 'key-blur', [ this.s.dt, cell ] );\n\t\t}\n\t},\n\n\n\t/**\n\t * Clipboard interaction handlers\n\t *\n\t * @private\n\t */\n\t_clipboard: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar that = this;\n\t\tvar namespace = this.s.namespace;\n\n\t\t// IE8 doesn't support getting selected text\n\t\tif ( ! window.getSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$(document).on( 'copy'+namespace, function (ejq) {\n\t\t\tvar e = ejq.originalEvent;\n\t\t\tvar selection = window.getSelection().toString();\n\t\t\tvar focused = that.s.lastFocus;\n\n\t\t\t// Only copy cell text to clipboard if there is no other selection\n\t\t\t// and there is a focused cell\n\t\t\tif ( ! selection && focused ) {\n\t\t\t\te.clipboardData.setData(\n\t\t\t\t\t'text/plain',\n\t\t\t\t\tfocused.cell.render( that.c.clipboardOrthogonal )\n\t\t\t\t);\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t} );\n\n\t\t$(document).on( 'paste'+namespace, function (ejq) {\n\t\t\tvar e = ejq.originalEvent;\n\t\t\tvar focused = that.s.lastFocus;\n\t\t\tvar activeEl = document.activeElement;\n\t\t\tvar editor = that.c.editor;\n\t\t\tvar pastedText;\n\n\t\t\tif ( focused && (! activeEl || activeEl.nodeName.toLowerCase() === 'body') ) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\tif ( window.clipboardData && window.clipboardData.getData ) {\n\t\t\t\t\t// IE\n\t\t\t\t\tpastedText = window.clipboardData.getData('Text');\n\t\t\t\t}\n\t\t\t\telse if ( e.clipboardData && e.clipboardData.getData ) {\n\t\t\t\t\t// Everything else\n\t\t\t\t\tpastedText = e.clipboardData.getData('text/plain');\n\t\t\t\t}\n\n\t\t\t\tif ( editor ) {\n\t\t\t\t\t// Got Editor - need to activate inline editing,\n\t\t\t\t\t// set the value and submit\n\t\t\t\t\teditor\n\t\t\t\t\t\t.inline( focused.cell.index() )\n\t\t\t\t\t\t.set( editor.displayed()[0], pastedText )\n\t\t\t\t\t\t.submit();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// No editor, so just dump the data in\n\t\t\t\t\tfocused.cell.data( pastedText );\n\t\t\t\t\tdt.draw(false);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\n\t/**\n\t * Get an array of the column indexes that KeyTable can operate on. This\n\t * is a merge of the user supplied columns and the visible columns.\n\t *\n\t * @private\n\t */\n\t_columns: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar user = dt.columns( this.c.columns ).indexes();\n\t\tvar out = [];\n\n\t\tdt.columns( ':visible' ).every( function (i) {\n\t\t\tif ( user.indexOf( i ) !== -1 ) {\n\t\t\t\tout.push( i );\n\t\t\t}\n\t\t} );\n\n\t\treturn out;\n\t},\n\n\n\t/**\n\t * Perform excel like navigation for Editor by triggering an edit on key\n\t * press\n\t *\n\t * @param  {integer} key Key code for the pressed key\n\t * @param  {object} orig Original event\n\t * @private\n\t */\n\t_editor: function ( key, orig, hardEdit )\n\t{\n\t\t// If nothing focused, we can't take any action\n\t\tif (! this.s.lastFocus) {\n\t\t\treturn;\t\n\t\t}\n\n\t\t// DataTables draw event\n\t\tif (orig && orig.type === 'draw') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar editor = this.c.editor;\n\t\tvar editCell = this.s.lastFocus.cell;\n\t\tvar namespace = this.s.namespace + 'e' + editorNamespaceCounter++;\n\n\t\t// Do nothing if there is already an inline edit in this cell\n\t\tif ( $('div.DTE', editCell.node()).length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't activate Editor on control key presses\n\t\tif ( key !== null && (\n\t\t\t(key >= 0x00 && key <= 0x09) ||\n\t\t\tkey === 0x0b ||\n\t\t\tkey === 0x0c ||\n\t\t\t(key >= 0x0e && key <= 0x1f) ||\n\t\t\t(key >= 0x70 && key <= 0x7b) ||\n\t\t\t(key >= 0x7f && key <= 0x9f)\n\t\t) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( orig ) {\n\t\t\torig.stopPropagation();\n\n\t\t\t// Return key should do nothing - for textareas it would empty the\n\t\t\t// contents\n\t\t\tif ( key === 13 ) {\n\t\t\t\torig.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\tvar editInline = function () {\n\t\t\teditor\n\t\t\t\t.one( 'open'+namespace, function () {\n\t\t\t\t\t// Remove cancel open\n\t\t\t\t\teditor.off( 'cancelOpen'+namespace );\n\n\t\t\t\t\t// Excel style - select all text\n\t\t\t\t\tif ( ! hardEdit ) {\n\t\t\t\t\t\t$('div.DTE_Field_InputControl input, div.DTE_Field_InputControl textarea').select();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reduce the keys the Keys listens for\n\t\t\t\t\tdt.keys.enable( hardEdit ? 'tab-only' : 'navigation-only' );\n\n\t\t\t\t\t// On blur of the navigation submit\n\t\t\t\t\tdt.on( 'key-blur.editor', function (e, dt, cell) {\n\t\t\t\t\t\tif ( editor.displayed() && cell.node() === editCell.node() ) {\n\t\t\t\t\t\t\teditor.submit();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Highlight the cell a different colour on full edit\n\t\t\t\t\tif ( hardEdit ) {\n\t\t\t\t\t\t$( dt.table().container() ).addClass('dtk-focus-alt');\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the dev cancels the submit, we need to return focus\n\t\t\t\t\teditor.on( 'preSubmitCancelled'+namespace, function () {\n\t\t\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t\t\tthat._focus( editCell, null, false );\n\t\t\t\t\t\t}, 50 );\n\t\t\t\t\t} );\n\n\t\t\t\t\teditor.on( 'submitUnsuccessful'+namespace, function () {\n\t\t\t\t\t\tthat._focus( editCell, null, false );\n\t\t\t\t\t} );\n\n\t\t\t\t\t// Restore full key navigation on close\n\t\t\t\t\teditor.one( 'close'+namespace, function () {\n\t\t\t\t\t\tdt.keys.enable( true );\n\t\t\t\t\t\tdt.off( 'key-blur.editor' );\n\t\t\t\t\t\teditor.off( namespace );\n\t\t\t\t\t\t$( dt.table().container() ).removeClass('dtk-focus-alt');\n\n\t\t\t\t\t\tif (that.s.returnSubmit) {\n\t\t\t\t\t\t\tthat.s.returnSubmit = false;\n\t\t\t\t\t\t\tthat._emitEvent( 'key-return-submit', [dt, editCell] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.one( 'cancelOpen'+namespace, function () {\n\t\t\t\t\t// `preOpen` can cancel the display of the form, so it\n\t\t\t\t\t// might be that the open event handler isn't needed\n\t\t\t\t\teditor.off( namespace );\n\t\t\t\t} )\n\t\t\t\t.inline( editCell.index() );\n\t\t};\n\n\t\t// Editor 1.7 listens for `return` on keyup, so if return is the trigger\n\t\t// key, we need to wait for `keyup` otherwise Editor would just submit\n\t\t// the content triggered by this keypress.\n\t\tif ( key === 13 ) {\n\t\t\thardEdit = true;\n\n\t\t\t$(document).one( 'keyup', function () { // immediately removed\n\t\t\t\teditInline();\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\teditInline();\n\t\t}\n\t},\n\n\n\t/**\n\t * Emit an event on the DataTable for listeners\n\t *\n\t * @param  {string} name Event name\n\t * @param  {array} args Event arguments\n\t * @private\n\t */\n\t_emitEvent: function ( name, args )\n\t{\n\t\tthis.s.dt.iterator( 'table', function ( ctx, i ) {\n\t\t\t$(ctx.nTable).triggerHandler( name, args );\n\t\t} );\n\t},\n\n\n\t/**\n\t * Focus on a particular cell, shifting the table's paging if required\n\t *\n\t * @param  {DataTables.Api|integer} row Can be given as an API instance that\n\t *   contains the cell to focus or as an integer. As the latter it is the\n\t *   visible row index (from the whole data set) - NOT the data index\n\t * @param  {integer} [column] Not required if a cell is given as the first\n\t *   parameter. Otherwise this is the column data index for the cell to\n\t *   focus on\n\t * @param {boolean} [shift=true] Should the viewport be moved to show cell\n\t * @private\n\t */\n\t_focus: function ( row, column, shift, originalEvent )\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar pageInfo = dt.page.info();\n\t\tvar lastFocus = this.s.lastFocus;\n\n\t\tif ( ! originalEvent) {\n\t\t\toriginalEvent = null;\n\t\t}\n\n\t\tif ( ! this.s.enable ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof row !== 'number' ) {\n\t\t\t// Its an API instance - check that there is actually a row\n\t\t\tif ( ! row.any() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Convert the cell to a row and column\n\t\t\tvar index = row.index();\n\t\t\tcolumn = index.column;\n\t\t\trow = dt\n\t\t\t\t.rows( { filter: 'applied', order: 'applied' } )\n\t\t\t\t.indexes()\n\t\t\t\t.indexOf( index.row );\n\t\t\t\n\t\t\t// Don't focus rows that were filtered out.\n\t\t\tif ( row < 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For server-side processing normalise the row by adding the start\n\t\t\t// point, since `rows().indexes()` includes only rows that are\n\t\t\t// available at the client-side\n\t\t\tif ( pageInfo.serverSide ) {\n\t\t\t\trow += pageInfo.start;\n\t\t\t}\n\t\t}\n\n\t\t// Is the row on the current page? If not, we need to redraw to show the\n\t\t// page\n\t\tif ( pageInfo.length !== -1 && (row < pageInfo.start || row >= pageInfo.start+pageInfo.length) ) {\n\t\t\tthis.s.focusDraw = true;\n\t\t\tthis.s.waitingForDraw = true;\n\n\t\t\tdt\n\t\t\t\t.one( 'draw', function () {\n\t\t\t\t\tthat.s.focusDraw = false;\n\t\t\t\t\tthat.s.waitingForDraw = false;\n\t\t\t\t\tthat._focus( row, column, undefined, originalEvent );\n\t\t\t\t} )\n\t\t\t\t.page( Math.floor( row / pageInfo.length ) )\n\t\t\t\t.draw( false );\n\n\t\t\treturn;\n\t\t}\n\n\t\t// In the available columns?\n\t\tif ( $.inArray( column, this._columns() ) === -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// De-normalise the server-side processing row, so we select the row\n\t\t// in its displayed position\n\t\tif ( pageInfo.serverSide ) {\n\t\t\trow -= pageInfo.start;\n\t\t}\n\n\t\t// Get the cell from the current position - ignoring any cells which might\n\t\t// not have been rendered (therefore can't use `:eq()` selector).\n\t\tvar cells = dt.cells( null, column, {search: 'applied', order: 'applied'} ).flatten();\n\t\tvar cell = dt.cell( cells[ row ] );\n\n\t\tif ( lastFocus ) {\n\t\t\t// Don't trigger a refocus on the same cell\n\t\t\tif ( lastFocus.node === cell.node() ) {\n\t\t\t\tthis._emitEvent( 'key-refocus', [ this.s.dt, cell, originalEvent || null ] );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise blur the old focus\n\t\t\tthis._blur();\n\t\t}\n\n\t\t// Clear focus from other tables\n\t\tthis._removeOtherFocus();\n\n\t\tvar node = $( cell.node() );\n\t\tnode.addClass( this.c.className );\n\n\t\tthis._updateFixedColumns(column);\n\n\t\t// Shift viewpoint and page to make cell visible\n\t\tif ( shift === undefined || shift === true ) {\n\t\t\tthis._scroll( $(window), $(document.body), node, 'offset' );\n\n\t\t\tvar bodyParent = dt.table().body().parentNode;\n\t\t\tif ( bodyParent !== dt.table().header().parentNode ) {\n\t\t\t\tvar parent = $(bodyParent.parentNode);\n\n\t\t\t\tthis._scroll( parent, parent, node, 'position' );\n\t\t\t}\n\t\t}\n\n\t\t// Event and finish\n\t\tthis.s.lastFocus = {\n\t\t\tcell: cell,\n\t\t\tnode: cell.node(),\n\t\t\trelative: {\n\t\t\t\trow: dt.rows( { page: 'current' } ).indexes().indexOf( cell.index().row ),\n\t\t\t\tcolumn: cell.index().column\n\t\t\t}\n\t\t};\n\n\t\tthis._emitEvent( 'key-focus', [ this.s.dt, cell, originalEvent || null ] );\n\t\tdt.state.save();\n\t},\n\n\n\t/**\n\t * Handle key press\n\t *\n\t * @param  {object} e Event\n\t * @private\n\t */\n\t_key: function ( e )\n\t{\n\t\t// If we are waiting for a draw to happen from another key event, then\n\t\t// do nothing for this new key press.\n\t\tif ( this.s.waitingForDraw ) {\n\t\t\te.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tvar enable = this.s.enable;\n\t\tthis.s.returnSubmit = (enable === 'navigation-only' || enable === 'tab-only') && e.keyCode === 13\n\t\t\t? true\n\t\t\t: false;\n\n\t\tvar navEnable = enable === true || enable === 'navigation-only';\n\t\tif ( ! enable ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( (e.keyCode === 0 || e.ctrlKey || e.metaKey || e.altKey) && !(e.ctrlKey && e.altKey) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If not focused, then there is no key action to take\n\t\tvar lastFocus = this.s.lastFocus;\n\t\tif ( ! lastFocus ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// And the last focus still exists!\n\t\tif ( ! this.s.dt.cell(lastFocus.node).any() ) {\n\t\t\tthis.s.lastFocus = null;\n\t\t\treturn;\n\t\t}\n\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar scrolling = this.s.dt.settings()[0].oScroll.sY ? true : false;\n\n\t\t// If we are not listening for this key, do nothing\n\t\tif ( this.c.keys && $.inArray( e.keyCode, this.c.keys ) === -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch( e.keyCode ) {\n\t\t\tcase 9: // tab\n\t\t\t\t// `enable` can be tab-only\n\t\t\t\tthis._shift( e, e.shiftKey ? 'left' : 'right', true );\n\t\t\t\tbreak;\n\n\t\t\tcase 27: // esc\n\t\t\t\tif ( this.c.blurable && enable === true ) {\n\t\t\t\t\tthis._blur();\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 33: // page up (previous page)\n\t\t\tcase 34: // page down (next page)\n\t\t\t\tif ( navEnable && !scrolling ) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tdt\n\t\t\t\t\t\t.page( e.keyCode === 33 ? 'previous' : 'next' )\n\t\t\t\t\t\t.draw( false );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 35: // end (end of current page)\n\t\t\tcase 36: // home (start of current page)\n\t\t\t\tif ( navEnable ) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tvar indexes = dt.cells( {page: 'current'} ).indexes();\n\t\t\t\t\tvar colIndexes = this._columns();\n\n\t\t\t\t\tthis._focus( dt.cell(\n\t\t\t\t\t\tindexes[ e.keyCode === 35 ? indexes.length-1 : colIndexes[0] ]\n\t\t\t\t\t), null, true, e );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 37: // left arrow\n\t\t\t\tif ( navEnable ) {\n\t\t\t\t\tthis._shift( e, 'left' );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 38: // up arrow\n\t\t\t\tif ( navEnable ) {\n\t\t\t\t\tthis._shift( e, 'up' );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 39: // right arrow\n\t\t\t\tif ( navEnable ) {\n\t\t\t\t\tthis._shift( e, 'right' );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 40: // down arrow\n\t\t\t\tif ( navEnable ) {\n\t\t\t\t\tthis._shift( e, 'down' );\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 113: // F2 - Excel like hard edit\n\t\t\t\tif ( this.c.editor ) {\n\t\t\t\t\tthis._editor(null, e, true);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t// else fallthrough\n\n\t\t\tdefault:\n\t\t\t\t// Everything else - pass through only when fully enabled\n\t\t\t\tif ( enable === true ) {\n\t\t\t\t\tthis._emitEvent( 'key', [ dt, e.keyCode, this.s.lastFocus.cell, e ] );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t},\n\n\t/**\n\t * Remove focus from all tables other than this one\n\t */\n\t_removeOtherFocus: function ()\n\t{\n\t\tvar thisTable = this.s.dt.table().node();\n\n\t\t$.fn.dataTable.tables({api:true}).iterator('table', function (settings) {\n\t\t\tif (this.table().node() !== thisTable) {\n\t\t\t\tthis.cell.blur();\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Scroll a container to make a cell visible in it. This can be used for\n\t * both DataTables scrolling and native window scrolling.\n\t *\n\t * @param  {jQuery} container Scrolling container\n\t * @param  {jQuery} scroller  Item being scrolled\n\t * @param  {jQuery} cell      Cell in the scroller\n\t * @param  {string} posOff    `position` or `offset` - which to use for the\n\t *   calculation. `offset` for the document, otherwise `position`\n\t * @private\n\t */\n\t_scroll: function ( container, scroller, cell, posOff )\n\t{\n\t\tvar offset = cell[posOff]();\n\t\tvar height = cell.outerHeight();\n\t\tvar width = cell.outerWidth();\n\n\t\tvar scrollTop = scroller.scrollTop();\n\t\tvar scrollLeft = scroller.scrollLeft();\n\t\tvar containerHeight = container.height();\n\t\tvar containerWidth = container.width();\n\n\t\t// If Scroller is being used, the table can be `position: absolute` and that\n\t\t// needs to be taken account of in the offset. If no Scroller, this will be 0\n\t\tif ( posOff === 'position' ) {\n\t\t\toffset.top += parseInt( cell.closest('table').css('top'), 10 );\n\t\t}\n\n\t\t// Top correction\n\t\tif ( offset.top < scrollTop ) {\n\t\t\tscroller.scrollTop( offset.top );\n\t\t}\n\n\t\t// Left correction\n\t\tif ( offset.left < scrollLeft ) {\n\t\t\tscroller.scrollLeft( offset.left );\n\t\t}\n\n\t\t// Bottom correction\n\t\tif ( offset.top + height > scrollTop + containerHeight && height < containerHeight ) {\n\t\t\tscroller.scrollTop( offset.top + height - containerHeight );\n\t\t}\n\n\t\t// Right correction\n\t\tif ( offset.left + width > scrollLeft + containerWidth && width < containerWidth ) {\n\t\t\tscroller.scrollLeft( offset.left + width - containerWidth );\n\t\t}\n\t},\n\n\n\t/**\n\t * Calculate a single offset movement in the table - up, down, left and\n\t * right and then perform the focus if possible\n\t *\n\t * @param  {object}  e           Event object\n\t * @param  {string}  direction   Movement direction\n\t * @param  {boolean} keyBlurable `true` if the key press can result in the\n\t *   table being blurred. This is so arrow keys won't blur the table, but\n\t *   tab will.\n\t * @private\n\t */\n\t_shift: function ( e, direction, keyBlurable )\n\t{\n\t\tvar that      = this;\n\t\tvar dt        = this.s.dt;\n\t\tvar pageInfo  = dt.page.info();\n\t\tvar rows      = pageInfo.recordsDisplay;\n\t\tvar columns   = this._columns();\n\t\tvar last      = this.s.lastFocus;\n\t\tif ( ! last ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar currentCell  = last.cell;\n\t\tif ( ! currentCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar currRow = dt\n\t\t\t.rows( { filter: 'applied', order: 'applied' } )\n\t\t\t.indexes()\n\t\t\t.indexOf( currentCell.index().row );\n\n\t\t// When server-side processing, `rows().indexes()` only gives the rows\n\t\t// that are available at the client-side, so we need to normalise the\n\t\t// row's current position by the display start point\n\t\tif ( pageInfo.serverSide ) {\n\t\t\tcurrRow += pageInfo.start;\n\t\t}\n\n\t\tvar currCol = dt\n\t\t\t.columns( columns )\n\t\t\t.indexes()\n\t\t\t.indexOf( currentCell.index().column );\n\n\t\tvar\n\t\t\trow = currRow,\n\t\t\tcolumn = columns[ currCol ]; // row is the display, column is an index\n\n\t\tif ( direction === 'right' ) {\n\t\t\tif ( currCol >= columns.length - 1 ) {\n\t\t\t\trow++;\n\t\t\t\tcolumn = columns[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcolumn = columns[ currCol+1 ];\n\t\t\t}\n\t\t}\n\t\telse if ( direction === 'left' ) {\n\t\t\tif ( currCol === 0 ) {\n\t\t\t\trow--;\n\t\t\t\tcolumn = columns[ columns.length - 1 ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcolumn = columns[ currCol-1 ];\n\t\t\t}\n\t\t}\n\t\telse if ( direction === 'up' ) {\n\t\t\trow--;\n\t\t}\n\t\telse if ( direction === 'down' ) {\n\t\t\trow++;\n\t\t}\n\n\t\tif ( row >= 0 && row < rows && $.inArray( column, columns ) !== -1 ) {\n\t\t\tif (e) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\tthis._focus( row, column, true, e );\n\t\t}\n\t\telse if ( ! keyBlurable || ! this.c.blurable ) {\n\t\t\t// No new focus, but if the table isn't blurable, then don't loose\n\t\t\t// focus\n\t\t\tif (e) {\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._blur();\n\t\t}\n\t},\n\n\n\t/**\n\t * Create and insert a hidden input element that can receive focus on behalf\n\t * of the table\n\t *\n\t * @private\n\t */\n\t_tabInput: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar tabIndex = this.c.tabIndex !== null ?\n\t\t\tthis.c.tabIndex :\n\t\t\tdt.settings()[0].iTabIndex;\n\n\t\tif ( tabIndex == -1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Only create the input element once on first class\n\t\tif (! this.s.tabInput) {\n\t\t\tvar div = $('<div><input type=\"text\" tabindex=\"'+tabIndex+'\"/></div>')\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\theight: 1,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t} );\n\n\t\t\tdiv.children().on( 'focus', function (e) {\n\t\t\t\tvar cell = dt.cell(':eq(0)', that._columns(), {page: 'current'});\n\t\n\t\t\t\tif ( cell.any() ) {\n\t\t\t\t\tthat._focus( cell, null, true, e );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.s.tabInput = div;\n\t\t}\n\n\t\t// Insert the input element into the first cell in the table's body\n\t\tvar cell = this.s.dt.cell(':eq(0)', '0:visible', {page: 'current', order: 'current'}).node();\n\t\tif (cell) {\n\t\t\t$(cell).prepend(this.s.tabInput);\n\t\t}\n\t},\n\n\t/**\n\t * Update fixed columns if they are enabled and if the cell we are\n\t * focusing is inside a fixed column\n\t * @param  {integer} column Index of the column being changed\n\t * @private\n\t */\n\t_updateFixedColumns: function( column )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar settings = dt.settings()[0];\n\n\t\tif ( settings._oFixedColumns ) {\n\t\t\tvar leftCols = settings._oFixedColumns.s.iLeftColumns;\n\t\t\tvar rightCols = settings.aoColumns.length - settings._oFixedColumns.s.iRightColumns;\n\n\t\t\tif (column < leftCols || column >= rightCols) {\n\t\t\t\tdt.fixedColumns().update();\n\t\t\t}\n\t\t}\n\t}\n} );\n\n\n/**\n * KeyTable default settings for initialisation\n *\n * @namespace\n * @name KeyTable.defaults\n * @static\n */\nKeyTable.defaults = {\n\t/**\n\t * Can focus be removed from the table\n\t * @type {Boolean}\n\t */\n\tblurable: true,\n\n\t/**\n\t * Class to give to the focused cell\n\t * @type {String}\n\t */\n\tclassName: 'focus',\n\n\t/**\n\t * Enable or disable clipboard support\n\t * @type {Boolean}\n\t */\n\tclipboard: true,\n\n\t/**\n\t * Orthogonal data that should be copied to clipboard\n\t * @type {string}\n\t */\n\tclipboardOrthogonal: 'display',\n\n\t/**\n\t * Columns that can be focused. This is automatically merged with the\n\t * visible columns as only visible columns can gain focus.\n\t * @type {String}\n\t */\n\tcolumns: '', // all\n\n\t/**\n\t * Editor instance to automatically perform Excel like navigation\n\t * @type {Editor}\n\t */\n\teditor: null,\n\n\t/**\n\t * Trigger editing immediately on focus\n\t * @type {boolean}\n\t */\n\teditOnFocus: false,\n\n\t/**\n\t * Select a cell to automatically select on start up. `null` for no\n\t * automatic selection\n\t * @type {cell-selector}\n\t */\n\tfocus: null,\n\n\t/**\n\t * Array of keys to listen for\n\t * @type {null|array}\n\t */\n\tkeys: null,\n\n\t/**\n\t * Tab index for where the table should sit in the document's tab flow\n\t * @type {integer|null}\n\t */\n\ttabIndex: null\n};\n\n\n\nKeyTable.version = \"2.6.2\";\n\n\n$.fn.dataTable.KeyTable = KeyTable;\n$.fn.DataTable.KeyTable = KeyTable;\n\n\nDataTable.Api.register( 'cell.blur()', function () {\n\treturn this.iterator( 'table', function (ctx) {\n\t\tif ( ctx.keytable ) {\n\t\t\tctx.keytable.blur();\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'cell().focus()', function () {\n\treturn this.iterator( 'cell', function (ctx, row, column) {\n\t\tif ( ctx.keytable ) {\n\t\t\tctx.keytable.focus( row, column );\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'keys.disable()', function () {\n\treturn this.iterator( 'table', function (ctx) {\n\t\tif ( ctx.keytable ) {\n\t\t\tctx.keytable.enable( false );\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'keys.enable()', function ( opts ) {\n\treturn this.iterator( 'table', function (ctx) {\n\t\tif ( ctx.keytable ) {\n\t\t\tctx.keytable.enable( opts === undefined ? true : opts );\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'keys.enabled()', function ( opts ) {\n\tvar ctx = this.context;\n\n\tif (ctx.length) {\n\t\treturn ctx[0].keytable\n\t\t\t? ctx[0].keytable.enabled()\n\t\t\t: false;\n\t}\n\n\treturn false;\n} );\n\nDataTable.Api.register( 'keys.move()', function ( dir ) {\n\treturn this.iterator( 'table', function (ctx) {\n\t\tif ( ctx.keytable ) {\n\t\t\tctx.keytable._shift( null, dir, false );\n\t\t}\n\t} );\n} );\n\n// Cell selector\nDataTable.ext.selector.cell.push( function ( settings, opts, cells ) {\n\tvar focused = opts.focused;\n\tvar kt = settings.keytable;\n\tvar out = [];\n\n\tif ( ! kt || focused === undefined ) {\n\t\treturn cells;\n\t}\n\n\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\tif ( (focused === true &&  kt.focused( cells[i] ) ) ||\n\t\t\t (focused === false && ! kt.focused( cells[i] ) )\n\t\t) {\n\t\t\tout.push( cells[i] );\n\t\t}\n\t}\n\n\treturn out;\n} );\n\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'preInit.dt.dtk', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar init = settings.oInit.keys;\n\tvar defaults = DataTable.defaults.keys;\n\n\tif ( init || defaults ) {\n\t\tvar opts = $.extend( {}, defaults, init );\n\n\t\tif ( init !== false ) {\n\t\t\tnew KeyTable( settings, opts  );\n\t\t}\n\t}\n} );\n\n\nreturn KeyTable;\n}));\n"]},"metadata":{},"sourceType":"script"}