{"ast":null,"code":"/*! Select for DataTables 1.3.3\n * 2015-2021 SpryMedia Ltd - datatables.net/license/mit\n */\n\n/**\n * @summary     Select for DataTables\n * @description A collection of API methods, events and buttons for DataTables\n *   that provides selection options of the items in a DataTable\n * @version     1.3.3\n * @file        dataTables.select.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net/forums\n * @copyright   Copyright 2015-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net/extensions/select\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable; // Version information for debugger\n\n  DataTable.select = {};\n  DataTable.select.version = '1.3.3';\n\n  DataTable.select.init = function (dt) {\n    var ctx = dt.settings()[0];\n    var init = ctx.oInit.select;\n    var defaults = DataTable.defaults.select;\n    var opts = init === undefined ? defaults : init; // Set defaults\n\n    var items = 'row';\n    var style = 'api';\n    var blurable = false;\n    var toggleable = true;\n    var info = true;\n    var selector = 'td, th';\n    var className = 'selected';\n    var setStyle = false;\n    ctx._select = {}; // Initialisation customisations\n\n    if (opts === true) {\n      style = 'os';\n      setStyle = true;\n    } else if (typeof opts === 'string') {\n      style = opts;\n      setStyle = true;\n    } else if ($.isPlainObject(opts)) {\n      if (opts.blurable !== undefined) {\n        blurable = opts.blurable;\n      }\n\n      if (opts.toggleable !== undefined) {\n        toggleable = opts.toggleable;\n      }\n\n      if (opts.info !== undefined) {\n        info = opts.info;\n      }\n\n      if (opts.items !== undefined) {\n        items = opts.items;\n      }\n\n      if (opts.style !== undefined) {\n        style = opts.style;\n        setStyle = true;\n      } else {\n        style = 'os';\n        setStyle = true;\n      }\n\n      if (opts.selector !== undefined) {\n        selector = opts.selector;\n      }\n\n      if (opts.className !== undefined) {\n        className = opts.className;\n      }\n    }\n\n    dt.select.selector(selector);\n    dt.select.items(items);\n    dt.select.style(style);\n    dt.select.blurable(blurable);\n    dt.select.toggleable(toggleable);\n    dt.select.info(info);\n    ctx._select.className = className; // Sort table based on selected rows. Requires Select Datatables extension\n\n    $.fn.dataTable.ext.order['select-checkbox'] = function (settings, col) {\n      return this.api().column(col, {\n        order: 'index'\n      }).nodes().map(function (td) {\n        if (settings._select.items === 'row') {\n          return $(td).parent().hasClass(settings._select.className);\n        } else if (settings._select.items === 'cell') {\n          return $(td).hasClass(settings._select.className);\n        }\n\n        return false;\n      });\n    }; // If the init options haven't enabled select, but there is a selectable\n    // class name, then enable\n\n\n    if (!setStyle && $(dt.table().node()).hasClass('selectable')) {\n      dt.select.style('os');\n    }\n  };\n  /*\n  \n  Select is a collection of API methods, event handlers, event emitters and\n  buttons (for the `Buttons` extension) for DataTables. It provides the following\n  features, with an overview of how they are implemented:\n  \n  ## Selection of rows, columns and cells. Whether an item is selected or not is\n     stored in:\n  \n  * rows: a `_select_selected` property which contains a boolean value of the\n    DataTables' `aoData` object for each row\n  * columns: a `_select_selected` property which contains a boolean value of the\n    DataTables' `aoColumns` object for each column\n  * cells: a `_selected_cells` property which contains an array of boolean values\n    of the `aoData` object for each row. The array is the same length as the\n    columns array, with each element of it representing a cell.\n  \n  This method of using boolean flags allows Select to operate when nodes have not\n  been created for rows / cells (DataTables' defer rendering feature).\n  \n  ## API methods\n  \n  A range of API methods are available for triggering selection and de-selection\n  of rows. Methods are also available to configure the selection events that can\n  be triggered by an end user (such as which items are to be selected). To a large\n  extent, these of API methods *is* Select. It is basically a collection of helper\n  functions that can be used to select items in a DataTable.\n  \n  Configuration of select is held in the object `_select` which is attached to the\n  DataTables settings object on initialisation. Select being available on a table\n  is not optional when Select is loaded, but its default is for selection only to\n  be available via the API - so the end user wouldn't be able to select rows\n  without additional configuration.\n  \n  The `_select` object contains the following properties:\n  \n  ```\n  {\n  \titems:string       - Can be `rows`, `columns` or `cells`. Defines what item \n  \t                     will be selected if the user is allowed to activate row\n  \t                     selection using the mouse.\n  \tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the\n  \t                     interaction style when selecting items\n  \tblurable:boolean   - If row selection can be cleared by clicking outside of\n  \t                     the table\n  \ttoggleable:boolean - If row selection can be cancelled by repeated clicking\n  \t                     on the row\n  \tinfo:boolean       - If the selection summary should be shown in the table\n  \t                     information elements\n  }\n  ```\n  \n  In addition to the API methods, Select also extends the DataTables selector\n  options for rows, columns and cells adding a `selected` option to the selector\n  options object, allowing the developer to select only selected items or\n  unselected items.\n  \n  ## Mouse selection of items\n  \n  Clicking on items can be used to select items. This is done by a simple event\n  handler that will select the items using the API methods.\n  \n   */\n\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Local functions\n   */\n\n  /**\n   * Add one or more cells to the selection when shift clicking in OS selection\n   * style cell selection.\n   *\n   * Cell range is more complicated than row and column as we want to select\n   * in the visible grid rather than by index in sequence. For example, if you\n   * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n   * should also be selected (and not 1-3, 1-4. etc)\n   * \n   * @param  {DataTable.Api} dt   DataTable\n   * @param  {object}        idx  Cell index to select to\n   * @param  {object}        last Cell index to select from\n   * @private\n   */\n\n\n  function cellRange(dt, idx, last) {\n    var indexes;\n    var columnIndexes;\n    var rowIndexes;\n\n    var selectColumns = function (start, end) {\n      if (start > end) {\n        var tmp = end;\n        end = start;\n        start = tmp;\n      }\n\n      var record = false;\n      return dt.columns(':visible').indexes().filter(function (i) {\n        if (i === start) {\n          record = true;\n        }\n\n        if (i === end) {\n          // not else if, as start might === end\n          record = false;\n          return true;\n        }\n\n        return record;\n      });\n    };\n\n    var selectRows = function (start, end) {\n      var indexes = dt.rows({\n        search: 'applied'\n      }).indexes(); // Which comes first - might need to swap\n\n      if (indexes.indexOf(start) > indexes.indexOf(end)) {\n        var tmp = end;\n        end = start;\n        start = tmp;\n      }\n\n      var record = false;\n      return indexes.filter(function (i) {\n        if (i === start) {\n          record = true;\n        }\n\n        if (i === end) {\n          record = false;\n          return true;\n        }\n\n        return record;\n      });\n    };\n\n    if (!dt.cells({\n      selected: true\n    }).any() && !last) {\n      // select from the top left cell to this one\n      columnIndexes = selectColumns(0, idx.column);\n      rowIndexes = selectRows(0, idx.row);\n    } else {\n      // Get column indexes between old and new\n      columnIndexes = selectColumns(last.column, idx.column);\n      rowIndexes = selectRows(last.row, idx.row);\n    }\n\n    indexes = dt.cells(rowIndexes, columnIndexes).flatten();\n\n    if (!dt.cells(idx, {\n      selected: true\n    }).any()) {\n      // Select range\n      dt.cells(indexes).select();\n    } else {\n      // Deselect range\n      dt.cells(indexes).deselect();\n    }\n  }\n  /**\n   * Disable mouse selection by removing the selectors\n   *\n   * @param {DataTable.Api} dt DataTable to remove events from\n   * @private\n   */\n\n\n  function disableMouseSelection(dt) {\n    var ctx = dt.settings()[0];\n    var selector = ctx._select.selector;\n    $(dt.table().container()).off('mousedown.dtSelect', selector).off('mouseup.dtSelect', selector).off('click.dtSelect', selector);\n    $('body').off('click.dtSelect' + _safeId(dt.table().node()));\n  }\n  /**\n   * Attach mouse listeners to the table to allow mouse selection of items\n   *\n   * @param {DataTable.Api} dt DataTable to remove events from\n   * @private\n   */\n\n\n  function enableMouseSelection(dt) {\n    var container = $(dt.table().container());\n    var ctx = dt.settings()[0];\n    var selector = ctx._select.selector;\n    var matchSelection;\n    container.on('mousedown.dtSelect', selector, function (e) {\n      // Disallow text selection for shift clicking on the table so multi\n      // element selection doesn't look terrible!\n      if (e.shiftKey || e.metaKey || e.ctrlKey) {\n        container.css('-moz-user-select', 'none').one('selectstart.dtSelect', selector, function () {\n          return false;\n        });\n      }\n\n      if (window.getSelection) {\n        matchSelection = window.getSelection();\n      }\n    }).on('mouseup.dtSelect', selector, function () {\n      // Allow text selection to occur again, Mozilla style (tested in FF\n      // 35.0.1 - still required)\n      container.css('-moz-user-select', '');\n    }).on('click.dtSelect', selector, function (e) {\n      var items = dt.select.items();\n      var idx; // If text was selected (click and drag), then we shouldn't change\n      // the row's selected state\n\n      if (matchSelection) {\n        var selection = window.getSelection(); // If the element that contains the selection is not in the table, we can ignore it\n        // This can happen if the developer selects text from the click event\n\n        if (!selection.anchorNode || $(selection.anchorNode).closest('table')[0] === dt.table().node()) {\n          if (selection !== matchSelection) {\n            return;\n          }\n        }\n      }\n\n      var ctx = dt.settings()[0];\n      var wrapperClass = dt.settings()[0].oClasses.sWrapper.trim().replace(/ +/g, '.'); // Ignore clicks inside a sub-table\n\n      if ($(e.target).closest('div.' + wrapperClass)[0] != dt.table().container()) {\n        return;\n      }\n\n      var cell = dt.cell($(e.target).closest('td, th')); // Check the cell actually belongs to the host DataTable (so child\n      // rows, etc, are ignored)\n\n      if (!cell.any()) {\n        return;\n      }\n\n      var event = $.Event('user-select.dt');\n      eventTrigger(dt, event, [items, cell, e]);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n\n      var cellIndex = cell.index();\n\n      if (items === 'row') {\n        idx = cellIndex.row;\n        typeSelect(e, dt, ctx, 'row', idx);\n      } else if (items === 'column') {\n        idx = cell.index().column;\n        typeSelect(e, dt, ctx, 'column', idx);\n      } else if (items === 'cell') {\n        idx = cell.index();\n        typeSelect(e, dt, ctx, 'cell', idx);\n      }\n\n      ctx._select_lastCell = cellIndex;\n    }); // Blurable\n\n    $('body').on('click.dtSelect' + _safeId(dt.table().node()), function (e) {\n      if (ctx._select.blurable) {\n        // If the click was inside the DataTables container, don't blur\n        if ($(e.target).parents().filter(dt.table().container()).length) {\n          return;\n        } // Ignore elements which have been removed from the DOM (i.e. paging\n        // buttons)\n\n\n        if ($(e.target).parents('html').length === 0) {\n          return;\n        } // Don't blur in Editor form\n\n\n        if ($(e.target).parents('div.DTE').length) {\n          return;\n        }\n\n        clear(ctx, true);\n      }\n    });\n  }\n  /**\n   * Trigger an event on a DataTable\n   *\n   * @param {DataTable.Api} api      DataTable to trigger events on\n   * @param  {boolean}      selected true if selected, false if deselected\n   * @param  {string}       type     Item type acting on\n   * @param  {boolean}      any      Require that there are values before\n   *     triggering\n   * @private\n   */\n\n\n  function eventTrigger(api, type, args, any) {\n    if (any && !api.flatten().length) {\n      return;\n    }\n\n    if (typeof type === 'string') {\n      type = type + '.dt';\n    }\n\n    args.unshift(api);\n    $(api.table().node()).trigger(type, args);\n  }\n  /**\n   * Update the information element of the DataTable showing information about the\n   * items selected. This is done by adding tags to the existing text\n   * \n   * @param {DataTable.Api} api DataTable to update\n   * @private\n   */\n\n\n  function info(api) {\n    var ctx = api.settings()[0];\n\n    if (!ctx._select.info || !ctx.aanFeatures.i) {\n      return;\n    }\n\n    if (api.select.style() === 'api') {\n      return;\n    }\n\n    var rows = api.rows({\n      selected: true\n    }).flatten().length;\n    var columns = api.columns({\n      selected: true\n    }).flatten().length;\n    var cells = api.cells({\n      selected: true\n    }).flatten().length;\n\n    var add = function (el, name, num) {\n      el.append($('<span class=\"select-item\"/>').append(api.i18n('select.' + name + 's', {\n        _: '%d ' + name + 's selected',\n        0: '',\n        1: '1 ' + name + ' selected'\n      }, num)));\n    }; // Internal knowledge of DataTables to loop over all information elements\n\n\n    $.each(ctx.aanFeatures.i, function (i, el) {\n      el = $(el);\n      var output = $('<span class=\"select-info\"/>');\n      add(output, 'row', rows);\n      add(output, 'column', columns);\n      add(output, 'cell', cells);\n      var exisiting = el.children('span.select-info');\n\n      if (exisiting.length) {\n        exisiting.remove();\n      }\n\n      if (output.text() !== '') {\n        el.append(output);\n      }\n    });\n  }\n  /**\n   * Initialisation of a new table. Attach event handlers and callbacks to allow\n   * Select to operate correctly.\n   *\n   * This will occur _after_ the initial DataTables initialisation, although\n   * before Ajax data is rendered, if there is ajax data\n   *\n   * @param  {DataTable.settings} ctx Settings object to operate on\n   * @private\n   */\n\n\n  function init(ctx) {\n    var api = new DataTable.Api(ctx); // Row callback so that classes can be added to rows and cells if the item\n    // was selected before the element was created. This will happen with the\n    // `deferRender` option enabled.\n    // \n    // This method of attaching to `aoRowCreatedCallback` is a hack until\n    // DataTables has proper events for row manipulation If you are reviewing\n    // this code to create your own plug-ins, please do not do this!\n\n    ctx.aoRowCreatedCallback.push({\n      fn: function (row, data, index) {\n        var i, ien;\n        var d = ctx.aoData[index]; // Row\n\n        if (d._select_selected) {\n          $(row).addClass(ctx._select.className);\n        } // Cells and columns - if separated out, we would need to do two\n        // loops, so it makes sense to combine them into a single one\n\n\n        for (i = 0, ien = ctx.aoColumns.length; i < ien; i++) {\n          if (ctx.aoColumns[i]._select_selected || d._selected_cells && d._selected_cells[i]) {\n            $(d.anCells[i]).addClass(ctx._select.className);\n          }\n        }\n      },\n      sName: 'select-deferRender'\n    }); // On Ajax reload we want to reselect all rows which are currently selected,\n    // if there is an rowId (i.e. a unique value to identify each row with)\n\n    api.on('preXhr.dt.dtSelect', function (e, settings) {\n      if (settings !== api.settings()[0]) {\n        // Not triggered by our DataTable!\n        return;\n      } // note that column selection doesn't need to be cached and then\n      // reselected, as they are already selected\n\n\n      var rows = api.rows({\n        selected: true\n      }).ids(true).filter(function (d) {\n        return d !== undefined;\n      });\n      var cells = api.cells({\n        selected: true\n      }).eq(0).map(function (cellIdx) {\n        var id = api.row(cellIdx.row).id(true);\n        return id ? {\n          row: id,\n          column: cellIdx.column\n        } : undefined;\n      }).filter(function (d) {\n        return d !== undefined;\n      }); // On the next draw, reselect the currently selected items\n\n      api.one('draw.dt.dtSelect', function () {\n        api.rows(rows).select(); // `cells` is not a cell index selector, so it needs a loop\n\n        if (cells.any()) {\n          cells.each(function (id) {\n            api.cells(id.row, id.column).select();\n          });\n        }\n      });\n    }); // Update the table information element with selected item summary\n\n    api.on('draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {\n      info(api);\n    }); // Clean up and release\n\n    api.on('destroy.dtSelect', function () {\n      api.rows({\n        selected: true\n      }).deselect();\n      disableMouseSelection(api);\n      api.off('.dtSelect');\n    });\n  }\n  /**\n   * Add one or more items (rows or columns) to the selection when shift clicking\n   * in OS selection style\n   *\n   * @param  {DataTable.Api} dt   DataTable\n   * @param  {string}        type Row or column range selector\n   * @param  {object}        idx  Item index to select to\n   * @param  {object}        last Item index to select from\n   * @private\n   */\n\n\n  function rowColumnRange(dt, type, idx, last) {\n    // Add a range of rows from the last selected row to this one\n    var indexes = dt[type + 's']({\n      search: 'applied'\n    }).indexes();\n    var idx1 = $.inArray(last, indexes);\n    var idx2 = $.inArray(idx, indexes);\n\n    if (!dt[type + 's']({\n      selected: true\n    }).any() && idx1 === -1) {\n      // select from top to here - slightly odd, but both Windows and Mac OS\n      // do this\n      indexes.splice($.inArray(idx, indexes) + 1, indexes.length);\n    } else {\n      // reverse so we can shift click 'up' as well as down\n      if (idx1 > idx2) {\n        var tmp = idx2;\n        idx2 = idx1;\n        idx1 = tmp;\n      }\n\n      indexes.splice(idx2 + 1, indexes.length);\n      indexes.splice(0, idx1);\n    }\n\n    if (!dt[type](idx, {\n      selected: true\n    }).any()) {\n      // Select range\n      dt[type + 's'](indexes).select();\n    } else {\n      // Deselect range - need to keep the clicked on row selected\n      indexes.splice($.inArray(idx, indexes), 1);\n      dt[type + 's'](indexes).deselect();\n    }\n  }\n  /**\n   * Clear all selected items\n   *\n   * @param  {DataTable.settings} ctx Settings object of the host DataTable\n   * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n   *     of selection style\n   * @private\n   */\n\n\n  function clear(ctx, force) {\n    if (force || ctx._select.style === 'single') {\n      var api = new DataTable.Api(ctx);\n      api.rows({\n        selected: true\n      }).deselect();\n      api.columns({\n        selected: true\n      }).deselect();\n      api.cells({\n        selected: true\n      }).deselect();\n    }\n  }\n  /**\n   * Select items based on the current configuration for style and items.\n   *\n   * @param  {object}             e    Mouse event object\n   * @param  {DataTables.Api}     dt   DataTable\n   * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n   * @param  {string}             type Items to select\n   * @param  {int|object}         idx  Index of the item to select\n   * @private\n   */\n\n\n  function typeSelect(e, dt, ctx, type, idx) {\n    var style = dt.select.style();\n    var toggleable = dt.select.toggleable();\n    var isSelected = dt[type](idx, {\n      selected: true\n    }).any();\n\n    if (isSelected && !toggleable) {\n      return;\n    }\n\n    if (style === 'os') {\n      if (e.ctrlKey || e.metaKey) {\n        // Add or remove from the selection\n        dt[type](idx).select(!isSelected);\n      } else if (e.shiftKey) {\n        if (type === 'cell') {\n          cellRange(dt, idx, ctx._select_lastCell || null);\n        } else {\n          rowColumnRange(dt, type, idx, ctx._select_lastCell ? ctx._select_lastCell[type] : null);\n        }\n      } else {\n        // No cmd or shift click - deselect if selected, or select\n        // this row only\n        var selected = dt[type + 's']({\n          selected: true\n        });\n\n        if (isSelected && selected.flatten().length === 1) {\n          dt[type](idx).deselect();\n        } else {\n          selected.deselect();\n          dt[type](idx).select();\n        }\n      }\n    } else if (style == 'multi+shift') {\n      if (e.shiftKey) {\n        if (type === 'cell') {\n          cellRange(dt, idx, ctx._select_lastCell || null);\n        } else {\n          rowColumnRange(dt, type, idx, ctx._select_lastCell ? ctx._select_lastCell[type] : null);\n        }\n      } else {\n        dt[type](idx).select(!isSelected);\n      }\n    } else {\n      dt[type](idx).select(!isSelected);\n    }\n  }\n\n  function _safeId(node) {\n    return node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\n  }\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables selectors\n   */\n  // row and column are basically identical just assigned to different properties\n  // and checking a different array, so we can dynamically create the functions to\n  // reduce the code size\n\n\n  $.each([{\n    type: 'row',\n    prop: 'aoData'\n  }, {\n    type: 'column',\n    prop: 'aoColumns'\n  }], function (i, o) {\n    DataTable.ext.selector[o.type].push(function (settings, opts, indexes) {\n      var selected = opts.selected;\n      var data;\n      var out = [];\n\n      if (selected !== true && selected !== false) {\n        return indexes;\n      }\n\n      for (var i = 0, ien = indexes.length; i < ien; i++) {\n        data = settings[o.prop][indexes[i]];\n\n        if (selected === true && data._select_selected === true || selected === false && !data._select_selected) {\n          out.push(indexes[i]);\n        }\n      }\n\n      return out;\n    });\n  });\n  DataTable.ext.selector.cell.push(function (settings, opts, cells) {\n    var selected = opts.selected;\n    var rowData;\n    var out = [];\n\n    if (selected === undefined) {\n      return cells;\n    }\n\n    for (var i = 0, ien = cells.length; i < ien; i++) {\n      rowData = settings.aoData[cells[i].row];\n\n      if (selected === true && rowData._selected_cells && rowData._selected_cells[cells[i].column] === true || selected === false && (!rowData._selected_cells || !rowData._selected_cells[cells[i].column])) {\n        out.push(cells[i]);\n      }\n    }\n\n    return out;\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * DataTables API\n   *\n   * For complete documentation, please refer to the docs/api directory or the\n   * DataTables site\n   */\n  // Local variables to improve compression\n\n  var apiRegister = DataTable.Api.register;\n  var apiRegisterPlural = DataTable.Api.registerPlural;\n  apiRegister('select()', function () {\n    return this.iterator('table', function (ctx) {\n      DataTable.select.init(new DataTable.Api(ctx));\n    });\n  });\n  apiRegister('select.blurable()', function (flag) {\n    if (flag === undefined) {\n      return this.context[0]._select.blurable;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.blurable = flag;\n    });\n  });\n  apiRegister('select.toggleable()', function (flag) {\n    if (flag === undefined) {\n      return this.context[0]._select.toggleable;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.toggleable = flag;\n    });\n  });\n  apiRegister('select.info()', function (flag) {\n    if (flag === undefined) {\n      return this.context[0]._select.info;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.info = flag;\n    });\n  });\n  apiRegister('select.items()', function (items) {\n    if (items === undefined) {\n      return this.context[0]._select.items;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.items = items;\n      eventTrigger(new DataTable.Api(ctx), 'selectItems', [items]);\n    });\n  }); // Takes effect from the _next_ selection. None disables future selection, but\n  // does not clear the current selection. Use the `deselect` methods for that\n\n  apiRegister('select.style()', function (style) {\n    if (style === undefined) {\n      return this.context[0]._select.style;\n    }\n\n    return this.iterator('table', function (ctx) {\n      ctx._select.style = style;\n\n      if (!ctx._select_init) {\n        init(ctx);\n      } // Add / remove mouse event handlers. They aren't required when only\n      // API selection is available\n\n\n      var dt = new DataTable.Api(ctx);\n      disableMouseSelection(dt);\n\n      if (style !== 'api') {\n        enableMouseSelection(dt);\n      }\n\n      eventTrigger(new DataTable.Api(ctx), 'selectStyle', [style]);\n    });\n  });\n  apiRegister('select.selector()', function (selector) {\n    if (selector === undefined) {\n      return this.context[0]._select.selector;\n    }\n\n    return this.iterator('table', function (ctx) {\n      disableMouseSelection(new DataTable.Api(ctx));\n      ctx._select.selector = selector;\n\n      if (ctx._select.style !== 'api') {\n        enableMouseSelection(new DataTable.Api(ctx));\n      }\n    });\n  });\n  apiRegisterPlural('rows().select()', 'row().select()', function (select) {\n    var api = this;\n\n    if (select === false) {\n      return this.deselect();\n    }\n\n    this.iterator('row', function (ctx, idx) {\n      clear(ctx);\n      ctx.aoData[idx]._select_selected = true;\n      $(ctx.aoData[idx].nTr).addClass(ctx._select.className);\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'select', ['row', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('columns().select()', 'column().select()', function (select) {\n    var api = this;\n\n    if (select === false) {\n      return this.deselect();\n    }\n\n    this.iterator('column', function (ctx, idx) {\n      clear(ctx);\n      ctx.aoColumns[idx]._select_selected = true;\n      var column = new DataTable.Api(ctx).column(idx);\n      $(column.header()).addClass(ctx._select.className);\n      $(column.footer()).addClass(ctx._select.className);\n      column.nodes().to$().addClass(ctx._select.className);\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'select', ['column', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('cells().select()', 'cell().select()', function (select) {\n    var api = this;\n\n    if (select === false) {\n      return this.deselect();\n    }\n\n    this.iterator('cell', function (ctx, rowIdx, colIdx) {\n      clear(ctx);\n      var data = ctx.aoData[rowIdx];\n\n      if (data._selected_cells === undefined) {\n        data._selected_cells = [];\n      }\n\n      data._selected_cells[colIdx] = true;\n\n      if (data.anCells) {\n        $(data.anCells[colIdx]).addClass(ctx._select.className);\n      }\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'select', ['cell', api.cells(api[i]).indexes().toArray()], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('rows().deselect()', 'row().deselect()', function () {\n    var api = this;\n    this.iterator('row', function (ctx, idx) {\n      ctx.aoData[idx]._select_selected = false;\n      ctx._select_lastCell = null;\n      $(ctx.aoData[idx].nTr).removeClass(ctx._select.className);\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'deselect', ['row', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('columns().deselect()', 'column().deselect()', function () {\n    var api = this;\n    this.iterator('column', function (ctx, idx) {\n      ctx.aoColumns[idx]._select_selected = false;\n      var api = new DataTable.Api(ctx);\n      var column = api.column(idx);\n      $(column.header()).removeClass(ctx._select.className);\n      $(column.footer()).removeClass(ctx._select.className); // Need to loop over each cell, rather than just using\n      // `column().nodes()` as cells which are individually selected should\n      // not have the `selected` class removed from them\n\n      api.cells(null, idx).indexes().each(function (cellIdx) {\n        var data = ctx.aoData[cellIdx.row];\n        var cellSelected = data._selected_cells;\n\n        if (data.anCells && (!cellSelected || !cellSelected[cellIdx.column])) {\n          $(data.anCells[cellIdx.column]).removeClass(ctx._select.className);\n        }\n      });\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'deselect', ['column', api[i]], true);\n    });\n    return this;\n  });\n  apiRegisterPlural('cells().deselect()', 'cell().deselect()', function () {\n    var api = this;\n    this.iterator('cell', function (ctx, rowIdx, colIdx) {\n      var data = ctx.aoData[rowIdx];\n      data._selected_cells[colIdx] = false; // Remove class only if the cells exist, and the cell is not column\n      // selected, in which case the class should remain (since it is selected\n      // in the column)\n\n      if (data.anCells && !ctx.aoColumns[colIdx]._select_selected) {\n        $(data.anCells[colIdx]).removeClass(ctx._select.className);\n      }\n    });\n    this.iterator('table', function (ctx, i) {\n      eventTrigger(api, 'deselect', ['cell', api[i]], true);\n    });\n    return this;\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Buttons\n   */\n\n  function i18n(label, def) {\n    return function (dt) {\n      return dt.i18n('buttons.' + label, def);\n    };\n  } // Common events with suitable namespaces\n\n\n  function namespacedEvents(config) {\n    var unique = config._eventNamespace;\n    return 'draw.dt.DT' + unique + ' select.dt.DT' + unique + ' deselect.dt.DT' + unique;\n  }\n\n  function enabled(dt, config) {\n    if ($.inArray('rows', config.limitTo) !== -1 && dt.rows({\n      selected: true\n    }).any()) {\n      return true;\n    }\n\n    if ($.inArray('columns', config.limitTo) !== -1 && dt.columns({\n      selected: true\n    }).any()) {\n      return true;\n    }\n\n    if ($.inArray('cells', config.limitTo) !== -1 && dt.cells({\n      selected: true\n    }).any()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  var _buttonNamespace = 0;\n  $.extend(DataTable.ext.buttons, {\n    selected: {\n      text: i18n('selected', 'Selected'),\n      className: 'buttons-selected',\n      limitTo: ['rows', 'columns', 'cells'],\n      init: function (dt, node, config) {\n        var that = this;\n        config._eventNamespace = '.select' + _buttonNamespace++; // .DT namespace listeners are removed by DataTables automatically\n        // on table destroy\n\n        dt.on(namespacedEvents(config), function () {\n          that.enable(enabled(dt, config));\n        });\n        this.disable();\n      },\n      destroy: function (dt, node, config) {\n        dt.off(config._eventNamespace);\n      }\n    },\n    selectedSingle: {\n      text: i18n('selectedSingle', 'Selected single'),\n      className: 'buttons-selected-single',\n      init: function (dt, node, config) {\n        var that = this;\n        config._eventNamespace = '.select' + _buttonNamespace++;\n        dt.on(namespacedEvents(config), function () {\n          var count = dt.rows({\n            selected: true\n          }).flatten().length + dt.columns({\n            selected: true\n          }).flatten().length + dt.cells({\n            selected: true\n          }).flatten().length;\n          that.enable(count === 1);\n        });\n        this.disable();\n      },\n      destroy: function (dt, node, config) {\n        dt.off(config._eventNamespace);\n      }\n    },\n    selectAll: {\n      text: i18n('selectAll', 'Select all'),\n      className: 'buttons-select-all',\n      action: function () {\n        var items = this.select.items();\n        this[items + 's']().select();\n      }\n    },\n    selectNone: {\n      text: i18n('selectNone', 'Deselect all'),\n      className: 'buttons-select-none',\n      action: function () {\n        clear(this.settings()[0], true);\n      },\n      init: function (dt, node, config) {\n        var that = this;\n        config._eventNamespace = '.select' + _buttonNamespace++;\n        dt.on(namespacedEvents(config), function () {\n          var count = dt.rows({\n            selected: true\n          }).flatten().length + dt.columns({\n            selected: true\n          }).flatten().length + dt.cells({\n            selected: true\n          }).flatten().length;\n          that.enable(count > 0);\n        });\n        this.disable();\n      },\n      destroy: function (dt, node, config) {\n        dt.off(config._eventNamespace);\n      }\n    }\n  });\n  $.each(['Row', 'Column', 'Cell'], function (i, item) {\n    var lc = item.toLowerCase();\n    DataTable.ext.buttons['select' + item + 's'] = {\n      text: i18n('select' + item + 's', 'Select ' + lc + 's'),\n      className: 'buttons-select-' + lc + 's',\n      action: function () {\n        this.select.items(lc);\n      },\n      init: function (dt) {\n        var that = this;\n        dt.on('selectItems.dt.DT', function (e, ctx, items) {\n          that.active(items === lc);\n        });\n      }\n    };\n  });\n  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n   * Initialisation\n   */\n  // DataTables creation - check if select has been defined in the options. Note\n  // this required that the table be in the document! If it isn't then something\n  // needs to trigger this method unfortunately. The next major release of\n  // DataTables will rework the events and address this.\n\n  $(document).on('preInit.dt.dtSelect', function (e, ctx) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    DataTable.select.init(new DataTable.Api(ctx));\n  });\n  return DataTable.select;\n});","map":{"version":3,"sources":["C:/Users/Sher/Desktop/datahub tagging ui/frontend/node_modules/datatables.net-select/js/dataTables.select.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","select","version","init","dt","ctx","settings","oInit","defaults","opts","items","style","blurable","toggleable","info","selector","className","setStyle","_select","isPlainObject","ext","order","col","api","column","nodes","map","td","parent","hasClass","table","node","cellRange","idx","last","indexes","columnIndexes","rowIndexes","selectColumns","start","end","tmp","record","columns","filter","i","selectRows","rows","search","indexOf","cells","selected","any","row","flatten","deselect","disableMouseSelection","container","off","_safeId","enableMouseSelection","matchSelection","on","e","shiftKey","metaKey","ctrlKey","css","one","getSelection","selection","anchorNode","closest","wrapperClass","oClasses","sWrapper","trim","replace","target","cell","event","Event","eventTrigger","isDefaultPrevented","cellIndex","index","typeSelect","_select_lastCell","parents","length","clear","type","args","unshift","trigger","aanFeatures","add","el","name","num","append","i18n","_","each","output","exisiting","children","remove","text","Api","aoRowCreatedCallback","push","data","ien","d","aoData","_select_selected","addClass","aoColumns","_selected_cells","anCells","sName","ids","eq","cellIdx","id","rowColumnRange","idx1","inArray","idx2","splice","force","isSelected","prop","o","out","rowData","apiRegister","register","apiRegisterPlural","registerPlural","iterator","flag","context","_select_init","nTr","header","footer","to$","rowIdx","colIdx","toArray","removeClass","cellSelected","label","def","namespacedEvents","config","unique","_eventNamespace","enabled","limitTo","_buttonNamespace","extend","buttons","that","enable","disable","destroy","selectedSingle","count","selectAll","action","selectNone","item","lc","toLowerCase","active","namespace"],"mappings":"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","sourcesContent":["/*! Select for DataTables 1.3.3\n * 2015-2021 SpryMedia Ltd - datatables.net/license/mit\n */\n\n/**\n * @summary     Select for DataTables\n * @description A collection of API methods, events and buttons for DataTables\n *   that provides selection options of the items in a DataTable\n * @version     1.3.3\n * @file        dataTables.select.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net/forums\n * @copyright   Copyright 2015-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net/extensions/select\n */\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Version information for debugger\nDataTable.select = {};\n\nDataTable.select.version = '1.3.3';\n\nDataTable.select.init = function ( dt ) {\n\tvar ctx = dt.settings()[0];\n\tvar init = ctx.oInit.select;\n\tvar defaults = DataTable.defaults.select;\n\tvar opts = init === undefined ?\n\t\tdefaults :\n\t\tinit;\n\n\t// Set defaults\n\tvar items = 'row';\n\tvar style = 'api';\n\tvar blurable = false;\n\tvar toggleable = true;\n\tvar info = true;\n\tvar selector = 'td, th';\n\tvar className = 'selected';\n\tvar setStyle = false;\n\n\tctx._select = {};\n\n\t// Initialisation customisations\n\tif ( opts === true ) {\n\t\tstyle = 'os';\n\t\tsetStyle = true;\n\t}\n\telse if ( typeof opts === 'string' ) {\n\t\tstyle = opts;\n\t\tsetStyle = true;\n\t}\n\telse if ( $.isPlainObject( opts ) ) {\n\t\tif ( opts.blurable !== undefined ) {\n\t\t\tblurable = opts.blurable;\n\t\t}\n\t\t\n\t\tif ( opts.toggleable !== undefined ) {\n\t\t\ttoggleable = opts.toggleable;\n\t\t}\n\n\t\tif ( opts.info !== undefined ) {\n\t\t\tinfo = opts.info;\n\t\t}\n\n\t\tif ( opts.items !== undefined ) {\n\t\t\titems = opts.items;\n\t\t}\n\n\t\tif ( opts.style !== undefined ) {\n\t\t\tstyle = opts.style;\n\t\t\tsetStyle = true;\n\t\t}\n\t\telse {\n\t\t\tstyle = 'os';\n\t\t\tsetStyle = true;\n\t\t}\n\n\t\tif ( opts.selector !== undefined ) {\n\t\t\tselector = opts.selector;\n\t\t}\n\n\t\tif ( opts.className !== undefined ) {\n\t\t\tclassName = opts.className;\n\t\t}\n\t}\n\n\tdt.select.selector( selector );\n\tdt.select.items( items );\n\tdt.select.style( style );\n\tdt.select.blurable( blurable );\n\tdt.select.toggleable( toggleable );\n\tdt.select.info( info );\n\tctx._select.className = className;\n\n\n\t// Sort table based on selected rows. Requires Select Datatables extension\n\t$.fn.dataTable.ext.order['select-checkbox'] = function ( settings, col ) {\n\t\treturn this.api().column( col, {order: 'index'} ).nodes().map( function ( td ) {\n\t\t\tif ( settings._select.items === 'row' ) {\n\t\t\t\treturn $( td ).parent().hasClass( settings._select.className );\n\t\t\t} else if ( settings._select.items === 'cell' ) {\n\t\t\t\treturn $( td ).hasClass( settings._select.className );\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t};\n\n\t// If the init options haven't enabled select, but there is a selectable\n\t// class name, then enable\n\tif ( ! setStyle && $( dt.table().node() ).hasClass( 'selectable' ) ) {\n\t\tdt.select.style( 'os' );\n\t}\n};\n\n/*\n\nSelect is a collection of API methods, event handlers, event emitters and\nbuttons (for the `Buttons` extension) for DataTables. It provides the following\nfeatures, with an overview of how they are implemented:\n\n## Selection of rows, columns and cells. Whether an item is selected or not is\n   stored in:\n\n* rows: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoData` object for each row\n* columns: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoColumns` object for each column\n* cells: a `_selected_cells` property which contains an array of boolean values\n  of the `aoData` object for each row. The array is the same length as the\n  columns array, with each element of it representing a cell.\n\nThis method of using boolean flags allows Select to operate when nodes have not\nbeen created for rows / cells (DataTables' defer rendering feature).\n\n## API methods\n\nA range of API methods are available for triggering selection and de-selection\nof rows. Methods are also available to configure the selection events that can\nbe triggered by an end user (such as which items are to be selected). To a large\nextent, these of API methods *is* Select. It is basically a collection of helper\nfunctions that can be used to select items in a DataTable.\n\nConfiguration of select is held in the object `_select` which is attached to the\nDataTables settings object on initialisation. Select being available on a table\nis not optional when Select is loaded, but its default is for selection only to\nbe available via the API - so the end user wouldn't be able to select rows\nwithout additional configuration.\n\nThe `_select` object contains the following properties:\n\n```\n{\n\titems:string       - Can be `rows`, `columns` or `cells`. Defines what item \n\t                     will be selected if the user is allowed to activate row\n\t                     selection using the mouse.\n\tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the\n\t                     interaction style when selecting items\n\tblurable:boolean   - If row selection can be cleared by clicking outside of\n\t                     the table\n\ttoggleable:boolean - If row selection can be cancelled by repeated clicking\n\t                     on the row\n\tinfo:boolean       - If the selection summary should be shown in the table\n\t                     information elements\n}\n```\n\nIn addition to the API methods, Select also extends the DataTables selector\noptions for rows, columns and cells adding a `selected` option to the selector\noptions object, allowing the developer to select only selected items or\nunselected items.\n\n## Mouse selection of items\n\nClicking on items can be used to select items. This is done by a simple event\nhandler that will select the items using the API methods.\n\n */\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Local functions\n */\n\n/**\n * Add one or more cells to the selection when shift clicking in OS selection\n * style cell selection.\n *\n * Cell range is more complicated than row and column as we want to select\n * in the visible grid rather than by index in sequence. For example, if you\n * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n * should also be selected (and not 1-3, 1-4. etc)\n * \n * @param  {DataTable.Api} dt   DataTable\n * @param  {object}        idx  Cell index to select to\n * @param  {object}        last Cell index to select from\n * @private\n */\nfunction cellRange( dt, idx, last )\n{\n\tvar indexes;\n\tvar columnIndexes;\n\tvar rowIndexes;\n\tvar selectColumns = function ( start, end ) {\n\t\tif ( start > end ) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\t\t\n\t\tvar record = false;\n\t\treturn dt.columns( ':visible' ).indexes().filter( function (i) {\n\t\t\tif ( i === start ) {\n\t\t\t\trecord = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( i === end ) { // not else if, as start might === end\n\t\t\t\trecord = false;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn record;\n\t\t} );\n\t};\n\n\tvar selectRows = function ( start, end ) {\n\t\tvar indexes = dt.rows( { search: 'applied' } ).indexes();\n\n\t\t// Which comes first - might need to swap\n\t\tif ( indexes.indexOf( start ) > indexes.indexOf( end ) ) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\n\t\tvar record = false;\n\t\treturn indexes.filter( function (i) {\n\t\t\tif ( i === start ) {\n\t\t\t\trecord = true;\n\t\t\t}\n\t\t\t\n\t\t\tif ( i === end ) {\n\t\t\t\trecord = false;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn record;\n\t\t} );\n\t};\n\n\tif ( ! dt.cells( { selected: true } ).any() && ! last ) {\n\t\t// select from the top left cell to this one\n\t\tcolumnIndexes = selectColumns( 0, idx.column );\n\t\trowIndexes = selectRows( 0 , idx.row );\n\t}\n\telse {\n\t\t// Get column indexes between old and new\n\t\tcolumnIndexes = selectColumns( last.column, idx.column );\n\t\trowIndexes = selectRows( last.row , idx.row );\n\t}\n\n\tindexes = dt.cells( rowIndexes, columnIndexes ).flatten();\n\n\tif ( ! dt.cells( idx, { selected: true } ).any() ) {\n\t\t// Select range\n\t\tdt.cells( indexes ).select();\n\t}\n\telse {\n\t\t// Deselect range\n\t\tdt.cells( indexes ).deselect();\n\t}\n}\n\n/**\n * Disable mouse selection by removing the selectors\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction disableMouseSelection( dt )\n{\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\n\t$( dt.table().container() )\n\t\t.off( 'mousedown.dtSelect', selector )\n\t\t.off( 'mouseup.dtSelect', selector )\n\t\t.off( 'click.dtSelect', selector );\n\n\t$('body').off( 'click.dtSelect' + _safeId(dt.table().node()) );\n}\n\n/**\n * Attach mouse listeners to the table to allow mouse selection of items\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction enableMouseSelection ( dt )\n{\n\tvar container = $( dt.table().container() );\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\tvar matchSelection;\n\n\tcontainer\n\t\t.on( 'mousedown.dtSelect', selector, function(e) {\n\t\t\t// Disallow text selection for shift clicking on the table so multi\n\t\t\t// element selection doesn't look terrible!\n\t\t\tif ( e.shiftKey || e.metaKey || e.ctrlKey ) {\n\t\t\t\tcontainer\n\t\t\t\t\t.css( '-moz-user-select', 'none' )\n\t\t\t\t\t.one('selectstart.dtSelect', selector, function () {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} );\n\t\t\t}\n\n\t\t\tif ( window.getSelection ) {\n\t\t\t\tmatchSelection = window.getSelection();\n\t\t\t}\n\t\t} )\n\t\t.on( 'mouseup.dtSelect', selector, function() {\n\t\t\t// Allow text selection to occur again, Mozilla style (tested in FF\n\t\t\t// 35.0.1 - still required)\n\t\t\tcontainer.css( '-moz-user-select', '' );\n\t\t} )\n\t\t.on( 'click.dtSelect', selector, function ( e ) {\n\t\t\tvar items = dt.select.items();\n\t\t\tvar idx;\n\n\t\t\t// If text was selected (click and drag), then we shouldn't change\n\t\t\t// the row's selected state\n\t\t\tif ( matchSelection ) {\n\t\t\t\tvar selection = window.getSelection();\n\n\t\t\t\t// If the element that contains the selection is not in the table, we can ignore it\n\t\t\t\t// This can happen if the developer selects text from the click event\n\t\t\t\tif ( ! selection.anchorNode || $(selection.anchorNode).closest('table')[0] === dt.table().node() ) {\n\t\t\t\t\tif ( selection !== matchSelection ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ctx = dt.settings()[0];\n\t\t\tvar wrapperClass = dt.settings()[0].oClasses.sWrapper.trim().replace(/ +/g, '.');\n\n\t\t\t// Ignore clicks inside a sub-table\n\t\t\tif ( $(e.target).closest('div.'+wrapperClass)[0] != dt.table().container() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cell = dt.cell( $(e.target).closest('td, th') );\n\n\t\t\t// Check the cell actually belongs to the host DataTable (so child\n\t\t\t// rows, etc, are ignored)\n\t\t\tif ( ! cell.any() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = $.Event('user-select.dt');\n\t\t\teventTrigger( dt, event, [ items, cell, e ] );\n\n\t\t\tif ( event.isDefaultPrevented() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cellIndex = cell.index();\n\t\t\tif ( items === 'row' ) {\n\t\t\t\tidx = cellIndex.row;\n\t\t\t\ttypeSelect( e, dt, ctx, 'row', idx );\n\t\t\t}\n\t\t\telse if ( items === 'column' ) {\n\t\t\t\tidx = cell.index().column;\n\t\t\t\ttypeSelect( e, dt, ctx, 'column', idx );\n\t\t\t}\n\t\t\telse if ( items === 'cell' ) {\n\t\t\t\tidx = cell.index();\n\t\t\t\ttypeSelect( e, dt, ctx, 'cell', idx );\n\t\t\t}\n\n\t\t\tctx._select_lastCell = cellIndex;\n\t\t} );\n\n\t// Blurable\n\t$('body').on( 'click.dtSelect' + _safeId(dt.table().node()), function ( e ) {\n\t\tif ( ctx._select.blurable ) {\n\t\t\t// If the click was inside the DataTables container, don't blur\n\t\t\tif ( $(e.target).parents().filter( dt.table().container() ).length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore elements which have been removed from the DOM (i.e. paging\n\t\t\t// buttons)\n\t\t\tif ( $(e.target).parents('html').length === 0 ) {\n\t\t\t \treturn;\n\t\t\t}\n\n\t\t\t// Don't blur in Editor form\n\t\t\tif ( $(e.target).parents('div.DTE').length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclear( ctx, true );\n\t\t}\n\t} );\n}\n\n/**\n * Trigger an event on a DataTable\n *\n * @param {DataTable.Api} api      DataTable to trigger events on\n * @param  {boolean}      selected true if selected, false if deselected\n * @param  {string}       type     Item type acting on\n * @param  {boolean}      any      Require that there are values before\n *     triggering\n * @private\n */\nfunction eventTrigger ( api, type, args, any )\n{\n\tif ( any && ! api.flatten().length ) {\n\t\treturn;\n\t}\n\n\tif ( typeof type === 'string' ) {\n\t\ttype = type +'.dt';\n\t}\n\n\targs.unshift( api );\n\n\t$(api.table().node()).trigger( type, args );\n}\n\n/**\n * Update the information element of the DataTable showing information about the\n * items selected. This is done by adding tags to the existing text\n * \n * @param {DataTable.Api} api DataTable to update\n * @private\n */\nfunction info ( api )\n{\n\tvar ctx = api.settings()[0];\n\n\tif ( ! ctx._select.info || ! ctx.aanFeatures.i ) {\n\t\treturn;\n\t}\n\n\tif ( api.select.style() === 'api' ) {\n\t\treturn;\n\t}\n\n\tvar rows    = api.rows( { selected: true } ).flatten().length;\n\tvar columns = api.columns( { selected: true } ).flatten().length;\n\tvar cells   = api.cells( { selected: true } ).flatten().length;\n\n\tvar add = function ( el, name, num ) {\n\t\tel.append( $('<span class=\"select-item\"/>').append( api.i18n(\n\t\t\t'select.'+name+'s',\n\t\t\t{ _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },\n\t\t\tnum\n\t\t) ) );\n\t};\n\n\t// Internal knowledge of DataTables to loop over all information elements\n\t$.each( ctx.aanFeatures.i, function ( i, el ) {\n\t\tel = $(el);\n\n\t\tvar output  = $('<span class=\"select-info\"/>');\n\t\tadd( output, 'row', rows );\n\t\tadd( output, 'column', columns );\n\t\tadd( output, 'cell', cells  );\n\n\t\tvar exisiting = el.children('span.select-info');\n\t\tif ( exisiting.length ) {\n\t\t\texisiting.remove();\n\t\t}\n\n\t\tif ( output.text() !== '' ) {\n\t\t\tel.append( output );\n\t\t}\n\t} );\n}\n\n/**\n * Initialisation of a new table. Attach event handlers and callbacks to allow\n * Select to operate correctly.\n *\n * This will occur _after_ the initial DataTables initialisation, although\n * before Ajax data is rendered, if there is ajax data\n *\n * @param  {DataTable.settings} ctx Settings object to operate on\n * @private\n */\nfunction init ( ctx ) {\n\tvar api = new DataTable.Api( ctx );\n\n\t// Row callback so that classes can be added to rows and cells if the item\n\t// was selected before the element was created. This will happen with the\n\t// `deferRender` option enabled.\n\t// \n\t// This method of attaching to `aoRowCreatedCallback` is a hack until\n\t// DataTables has proper events for row manipulation If you are reviewing\n\t// this code to create your own plug-ins, please do not do this!\n\tctx.aoRowCreatedCallback.push( {\n\t\tfn: function ( row, data, index ) {\n\t\t\tvar i, ien;\n\t\t\tvar d = ctx.aoData[ index ];\n\n\t\t\t// Row\n\t\t\tif ( d._select_selected ) {\n\t\t\t\t$( row ).addClass( ctx._select.className );\n\t\t\t}\n\n\t\t\t// Cells and columns - if separated out, we would need to do two\n\t\t\t// loops, so it makes sense to combine them into a single one\n\t\t\tfor ( i=0, ien=ctx.aoColumns.length ; i<ien ; i++ ) {\n\t\t\t\tif ( ctx.aoColumns[i]._select_selected || (d._selected_cells && d._selected_cells[i]) ) {\n\t\t\t\t\t$(d.anCells[i]).addClass( ctx._select.className );\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsName: 'select-deferRender'\n\t} );\n\n\t// On Ajax reload we want to reselect all rows which are currently selected,\n\t// if there is an rowId (i.e. a unique value to identify each row with)\n\tapi.on( 'preXhr.dt.dtSelect', function (e, settings) {\n\t\tif (settings !== api.settings()[0]) {\n\t\t\t// Not triggered by our DataTable!\n\t\t\treturn;\n\t\t}\n\n\t\t// note that column selection doesn't need to be cached and then\n\t\t// reselected, as they are already selected\n\t\tvar rows = api.rows( { selected: true } ).ids( true ).filter( function ( d ) {\n\t\t\treturn d !== undefined;\n\t\t} );\n\n\t\tvar cells = api.cells( { selected: true } ).eq(0).map( function ( cellIdx ) {\n\t\t\tvar id = api.row( cellIdx.row ).id( true );\n\t\t\treturn id ?\n\t\t\t\t{ row: id, column: cellIdx.column } :\n\t\t\t\tundefined;\n\t\t} ).filter( function ( d ) {\n\t\t\treturn d !== undefined;\n\t\t} );\n\n\t\t// On the next draw, reselect the currently selected items\n\t\tapi.one( 'draw.dt.dtSelect', function () {\n\t\t\tapi.rows( rows ).select();\n\n\t\t\t// `cells` is not a cell index selector, so it needs a loop\n\t\t\tif ( cells.any() ) {\n\t\t\t\tcells.each( function ( id ) {\n\t\t\t\t\tapi.cells( id.row, id.column ).select();\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t} );\n\n\t// Update the table information element with selected item summary\n\tapi.on( 'draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {\n\t\tinfo( api );\n\t} );\n\n\t// Clean up and release\n\tapi.on( 'destroy.dtSelect', function () {\n\t\tapi.rows({selected: true}).deselect();\n\n\t\tdisableMouseSelection( api );\n\t\tapi.off( '.dtSelect' );\n\t} );\n}\n\n/**\n * Add one or more items (rows or columns) to the selection when shift clicking\n * in OS selection style\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {string}        type Row or column range selector\n * @param  {object}        idx  Item index to select to\n * @param  {object}        last Item index to select from\n * @private\n */\nfunction rowColumnRange( dt, type, idx, last )\n{\n\t// Add a range of rows from the last selected row to this one\n\tvar indexes = dt[type+'s']( { search: 'applied' } ).indexes();\n\tvar idx1 = $.inArray( last, indexes );\n\tvar idx2 = $.inArray( idx, indexes );\n\n\tif ( ! dt[type+'s']( { selected: true } ).any() && idx1 === -1 ) {\n\t\t// select from top to here - slightly odd, but both Windows and Mac OS\n\t\t// do this\n\t\tindexes.splice( $.inArray( idx, indexes )+1, indexes.length );\n\t}\n\telse {\n\t\t// reverse so we can shift click 'up' as well as down\n\t\tif ( idx1 > idx2 ) {\n\t\t\tvar tmp = idx2;\n\t\t\tidx2 = idx1;\n\t\t\tidx1 = tmp;\n\t\t}\n\n\t\tindexes.splice( idx2+1, indexes.length );\n\t\tindexes.splice( 0, idx1 );\n\t}\n\n\tif ( ! dt[type]( idx, { selected: true } ).any() ) {\n\t\t// Select range\n\t\tdt[type+'s']( indexes ).select();\n\t}\n\telse {\n\t\t// Deselect range - need to keep the clicked on row selected\n\t\tindexes.splice( $.inArray( idx, indexes ), 1 );\n\t\tdt[type+'s']( indexes ).deselect();\n\t}\n}\n\n/**\n * Clear all selected items\n *\n * @param  {DataTable.settings} ctx Settings object of the host DataTable\n * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n *     of selection style\n * @private\n */\nfunction clear( ctx, force )\n{\n\tif ( force || ctx._select.style === 'single' ) {\n\t\tvar api = new DataTable.Api( ctx );\n\t\t\n\t\tapi.rows( { selected: true } ).deselect();\n\t\tapi.columns( { selected: true } ).deselect();\n\t\tapi.cells( { selected: true } ).deselect();\n\t}\n}\n\n/**\n * Select items based on the current configuration for style and items.\n *\n * @param  {object}             e    Mouse event object\n * @param  {DataTables.Api}     dt   DataTable\n * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n * @param  {string}             type Items to select\n * @param  {int|object}         idx  Index of the item to select\n * @private\n */\nfunction typeSelect ( e, dt, ctx, type, idx )\n{\n\tvar style = dt.select.style();\n\tvar toggleable = dt.select.toggleable();\n\tvar isSelected = dt[type]( idx, { selected: true } ).any();\n\t\n\tif ( isSelected && ! toggleable ) {\n\t\treturn;\n\t}\n\n\tif ( style === 'os' ) {\n\t\tif ( e.ctrlKey || e.metaKey ) {\n\t\t\t// Add or remove from the selection\n\t\t\tdt[type]( idx ).select( ! isSelected );\n\t\t}\n\t\telse if ( e.shiftKey ) {\n\t\t\tif ( type === 'cell' ) {\n\t\t\t\tcellRange( dt, idx, ctx._select_lastCell || null );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange( dt, type, idx, ctx._select_lastCell ?\n\t\t\t\t\tctx._select_lastCell[type] :\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No cmd or shift click - deselect if selected, or select\n\t\t\t// this row only\n\t\t\tvar selected = dt[type+'s']( { selected: true } );\n\n\t\t\tif ( isSelected && selected.flatten().length === 1 ) {\n\t\t\t\tdt[type]( idx ).deselect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselected.deselect();\n\t\t\t\tdt[type]( idx ).select();\n\t\t\t}\n\t\t}\n\t} else if ( style == 'multi+shift' ) {\n\t\tif ( e.shiftKey ) {\n\t\t\tif ( type === 'cell' ) {\n\t\t\t\tcellRange( dt, idx, ctx._select_lastCell || null );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange( dt, type, idx, ctx._select_lastCell ?\n\t\t\t\t\tctx._select_lastCell[type] :\n\t\t\t\t\tnull\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdt[ type ]( idx ).select( ! isSelected );\n\t\t}\n\t}\n\telse {\n\t\tdt[ type ]( idx ).select( ! isSelected );\n\t}\n}\n\nfunction _safeId( node ) {\n\treturn node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\n}\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables selectors\n */\n\n// row and column are basically identical just assigned to different properties\n// and checking a different array, so we can dynamically create the functions to\n// reduce the code size\n$.each( [\n\t{ type: 'row', prop: 'aoData' },\n\t{ type: 'column', prop: 'aoColumns' }\n], function ( i, o ) {\n\tDataTable.ext.selector[ o.type ].push( function ( settings, opts, indexes ) {\n\t\tvar selected = opts.selected;\n\t\tvar data;\n\t\tvar out = [];\n\n\t\tif ( selected !== true && selected !== false ) {\n\t\t\treturn indexes;\n\t\t}\n\n\t\tfor ( var i=0, ien=indexes.length ; i<ien ; i++ ) {\n\t\t\tdata = settings[ o.prop ][ indexes[i] ];\n\n\t\t\tif ( (selected === true && data._select_selected === true) ||\n\t\t\t     (selected === false && ! data._select_selected )\n\t\t\t) {\n\t\t\t\tout.push( indexes[i] );\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t} );\n} );\n\nDataTable.ext.selector.cell.push( function ( settings, opts, cells ) {\n\tvar selected = opts.selected;\n\tvar rowData;\n\tvar out = [];\n\n\tif ( selected === undefined ) {\n\t\treturn cells;\n\t}\n\n\tfor ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\trowData = settings.aoData[ cells[i].row ];\n\n\t\tif ( (selected === true && rowData._selected_cells && rowData._selected_cells[ cells[i].column ] === true) ||\n\t\t     (selected === false && ( ! rowData._selected_cells || ! rowData._selected_cells[ cells[i].column ] ) )\n\t\t) {\n\t\t\tout.push( cells[i] );\n\t\t}\n\t}\n\n\treturn out;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Local variables to improve compression\nvar apiRegister = DataTable.Api.register;\nvar apiRegisterPlural = DataTable.Api.registerPlural;\n\napiRegister( 'select()', function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tDataTable.select.init( new DataTable.Api( ctx ) );\n\t} );\n} );\n\napiRegister( 'select.blurable()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.context[0]._select.blurable;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.blurable = flag;\n\t} );\n} );\n\napiRegister( 'select.toggleable()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.context[0]._select.toggleable;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.toggleable = flag;\n\t} );\n} );\n\napiRegister( 'select.info()', function ( flag ) {\n\tif ( flag === undefined ) {\n\t\treturn this.context[0]._select.info;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.info = flag;\n\t} );\n} );\n\napiRegister( 'select.items()', function ( items ) {\n\tif ( items === undefined ) {\n\t\treturn this.context[0]._select.items;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.items = items;\n\n\t\teventTrigger( new DataTable.Api( ctx ), 'selectItems', [ items ] );\n\t} );\n} );\n\n// Takes effect from the _next_ selection. None disables future selection, but\n// does not clear the current selection. Use the `deselect` methods for that\napiRegister( 'select.style()', function ( style ) {\n\tif ( style === undefined ) {\n\t\treturn this.context[0]._select.style;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tctx._select.style = style;\n\n\t\tif ( ! ctx._select_init ) {\n\t\t\tinit( ctx );\n\t\t}\n\n\t\t// Add / remove mouse event handlers. They aren't required when only\n\t\t// API selection is available\n\t\tvar dt = new DataTable.Api( ctx );\n\t\tdisableMouseSelection( dt );\n\t\t\n\t\tif ( style !== 'api' ) {\n\t\t\tenableMouseSelection( dt );\n\t\t}\n\n\t\teventTrigger( new DataTable.Api( ctx ), 'selectStyle', [ style ] );\n\t} );\n} );\n\napiRegister( 'select.selector()', function ( selector ) {\n\tif ( selector === undefined ) {\n\t\treturn this.context[0]._select.selector;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tdisableMouseSelection( new DataTable.Api( ctx ) );\n\n\t\tctx._select.selector = selector;\n\n\t\tif ( ctx._select.style !== 'api' ) {\n\t\t\tenableMouseSelection( new DataTable.Api( ctx ) );\n\t\t}\n\t} );\n} );\n\n\n\napiRegisterPlural( 'rows().select()', 'row().select()', function ( select ) {\n\tvar api = this;\n\n\tif ( select === false ) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator( 'row', function ( ctx, idx ) {\n\t\tclear( ctx );\n\n\t\tctx.aoData[ idx ]._select_selected = true;\n\t\t$( ctx.aoData[ idx ].nTr ).addClass( ctx._select.className );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'select', [ 'row', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'columns().select()', 'column().select()', function ( select ) {\n\tvar api = this;\n\n\tif ( select === false ) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator( 'column', function ( ctx, idx ) {\n\t\tclear( ctx );\n\n\t\tctx.aoColumns[ idx ]._select_selected = true;\n\n\t\tvar column = new DataTable.Api( ctx ).column( idx );\n\n\t\t$( column.header() ).addClass( ctx._select.className );\n\t\t$( column.footer() ).addClass( ctx._select.className );\n\n\t\tcolumn.nodes().to$().addClass( ctx._select.className );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'select', [ 'column', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'cells().select()', 'cell().select()', function ( select ) {\n\tvar api = this;\n\n\tif ( select === false ) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\n\t\tclear( ctx );\n\n\t\tvar data = ctx.aoData[ rowIdx ];\n\n\t\tif ( data._selected_cells === undefined ) {\n\t\t\tdata._selected_cells = [];\n\t\t}\n\n\t\tdata._selected_cells[ colIdx ] = true;\n\n\t\tif ( data.anCells ) {\n\t\t\t$( data.anCells[ colIdx ] ).addClass( ctx._select.className );\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'select', [ 'cell', api.cells(api[i]).indexes().toArray() ], true );\n\t} );\n\n\treturn this;\n} );\n\n\napiRegisterPlural( 'rows().deselect()', 'row().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator( 'row', function ( ctx, idx ) {\n\t\tctx.aoData[ idx ]._select_selected = false;\n\t\tctx._select_lastCell = null;\n\t\t$( ctx.aoData[ idx ].nTr ).removeClass( ctx._select.className );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'deselect', [ 'row', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'columns().deselect()', 'column().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator( 'column', function ( ctx, idx ) {\n\t\tctx.aoColumns[ idx ]._select_selected = false;\n\n\t\tvar api = new DataTable.Api( ctx );\n\t\tvar column = api.column( idx );\n\n\t\t$( column.header() ).removeClass( ctx._select.className );\n\t\t$( column.footer() ).removeClass( ctx._select.className );\n\n\t\t// Need to loop over each cell, rather than just using\n\t\t// `column().nodes()` as cells which are individually selected should\n\t\t// not have the `selected` class removed from them\n\t\tapi.cells( null, idx ).indexes().each( function (cellIdx) {\n\t\t\tvar data = ctx.aoData[ cellIdx.row ];\n\t\t\tvar cellSelected = data._selected_cells;\n\n\t\t\tif ( data.anCells && (! cellSelected || ! cellSelected[ cellIdx.column ]) ) {\n\t\t\t\t$( data.anCells[ cellIdx.column  ] ).removeClass( ctx._select.className );\n\t\t\t}\n\t\t} );\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'deselect', [ 'column', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\napiRegisterPlural( 'cells().deselect()', 'cell().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\n\t\tvar data = ctx.aoData[ rowIdx ];\n\n\t\tdata._selected_cells[ colIdx ] = false;\n\n\t\t// Remove class only if the cells exist, and the cell is not column\n\t\t// selected, in which case the class should remain (since it is selected\n\t\t// in the column)\n\t\tif ( data.anCells && ! ctx.aoColumns[ colIdx ]._select_selected ) {\n\t\t\t$( data.anCells[ colIdx ] ).removeClass( ctx._select.className );\n\t\t}\n\t} );\n\n\tthis.iterator( 'table', function ( ctx, i ) {\n\t\teventTrigger( api, 'deselect', [ 'cell', api[i] ], true );\n\t} );\n\n\treturn this;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Buttons\n */\nfunction i18n( label, def ) {\n\treturn function (dt) {\n\t\treturn dt.i18n( 'buttons.'+label, def );\n\t};\n}\n\n// Common events with suitable namespaces\nfunction namespacedEvents ( config ) {\n\tvar unique = config._eventNamespace;\n\n\treturn 'draw.dt.DT'+unique+' select.dt.DT'+unique+' deselect.dt.DT'+unique;\n}\n\nfunction enabled ( dt, config ) {\n\tif ( $.inArray( 'rows', config.limitTo ) !== -1 && dt.rows( { selected: true } ).any() ) {\n\t\treturn true;\n\t}\n\n\tif ( $.inArray( 'columns', config.limitTo ) !== -1 && dt.columns( { selected: true } ).any() ) {\n\t\treturn true;\n\t}\n\n\tif ( $.inArray( 'cells', config.limitTo ) !== -1 && dt.cells( { selected: true } ).any() ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nvar _buttonNamespace = 0;\n\n$.extend( DataTable.ext.buttons, {\n\tselected: {\n\t\ttext: i18n( 'selected', 'Selected' ),\n\t\tclassName: 'buttons-selected',\n\t\tlimitTo: [ 'rows', 'columns', 'cells' ],\n\t\tinit: function ( dt, node, config ) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);\n\n\t\t\t// .DT namespace listeners are removed by DataTables automatically\n\t\t\t// on table destroy\n\t\t\tdt.on( namespacedEvents(config), function () {\n\t\t\t\tthat.enable( enabled(dt, config) );\n\t\t\t} );\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function ( dt, node, config ) {\n\t\t\tdt.off( config._eventNamespace );\n\t\t}\n\t},\n\tselectedSingle: {\n\t\ttext: i18n( 'selectedSingle', 'Selected single' ),\n\t\tclassName: 'buttons-selected-single',\n\t\tinit: function ( dt, node, config ) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);\n\n\t\t\tdt.on( namespacedEvents(config), function () {\n\t\t\t\tvar count = dt.rows( { selected: true } ).flatten().length +\n\t\t\t\t            dt.columns( { selected: true } ).flatten().length +\n\t\t\t\t            dt.cells( { selected: true } ).flatten().length;\n\n\t\t\t\tthat.enable( count === 1 );\n\t\t\t} );\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function ( dt, node, config ) {\n\t\t\tdt.off( config._eventNamespace );\n\t\t}\n\t},\n\tselectAll: {\n\t\ttext: i18n( 'selectAll', 'Select all' ),\n\t\tclassName: 'buttons-select-all',\n\t\taction: function () {\n\t\t\tvar items = this.select.items();\n\t\t\tthis[ items+'s' ]().select();\n\t\t}\n\t},\n\tselectNone: {\n\t\ttext: i18n( 'selectNone', 'Deselect all' ),\n\t\tclassName: 'buttons-select-none',\n\t\taction: function () {\n\t\t\tclear( this.settings()[0], true );\n\t\t},\n\t\tinit: function ( dt, node, config ) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select'+(_buttonNamespace++);\n\n\t\t\tdt.on( namespacedEvents(config), function () {\n\t\t\t\tvar count = dt.rows( { selected: true } ).flatten().length +\n\t\t\t\t            dt.columns( { selected: true } ).flatten().length +\n\t\t\t\t            dt.cells( { selected: true } ).flatten().length;\n\n\t\t\t\tthat.enable( count > 0 );\n\t\t\t} );\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function ( dt, node, config ) {\n\t\t\tdt.off( config._eventNamespace );\n\t\t}\n\t}\n} );\n\n$.each( [ 'Row', 'Column', 'Cell' ], function ( i, item ) {\n\tvar lc = item.toLowerCase();\n\n\tDataTable.ext.buttons[ 'select'+item+'s' ] = {\n\t\ttext: i18n( 'select'+item+'s', 'Select '+lc+'s' ),\n\t\tclassName: 'buttons-select-'+lc+'s',\n\t\taction: function () {\n\t\t\tthis.select.items( lc );\n\t\t},\n\t\tinit: function ( dt ) {\n\t\t\tvar that = this;\n\n\t\t\tdt.on( 'selectItems.dt.DT', function ( e, ctx, items ) {\n\t\t\t\tthat.active( items === lc );\n\t\t\t} );\n\t\t}\n\t};\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n */\n\n// DataTables creation - check if select has been defined in the options. Note\n// this required that the table be in the document! If it isn't then something\n// needs to trigger this method unfortunately. The next major release of\n// DataTables will rework the events and address this.\n$(document).on( 'preInit.dt.dtSelect', function (e, ctx) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tDataTable.select.init( new DataTable.Api( ctx ) );\n} );\n\n\nreturn DataTable.select;\n}));\n"]},"metadata":{},"sourceType":"script"}