{"ast":null,"code":"/*! RowGroup 1.1.3\n * Â©2017-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     RowGroup\n * @description RowGrouping for DataTables\n * @version     1.1.3\n * @file        dataTables.rowGroup.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net\n * @copyright   Copyright 2017-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['jquery', 'datatables.net'], function ($) {\n      return factory($, window, document);\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = function (root, $) {\n      if (!root) {\n        root = window;\n      }\n\n      if (!$ || !$.fn.dataTable) {\n        $ = require('datatables.net')(root, $).$;\n      }\n\n      return factory($, root, root.document);\n    };\n  } else {\n    // Browser\n    factory(jQuery, window, document);\n  }\n})(function ($, window, document, undefined) {\n  'use strict';\n\n  var DataTable = $.fn.dataTable;\n\n  var RowGroup = function (dt, opts) {\n    // Sanity check that we are using DataTables 1.10 or newer\n    if (!DataTable.versionCheck || !DataTable.versionCheck('1.10.8')) {\n      throw 'RowGroup requires DataTables 1.10.8 or newer';\n    } // User and defaults configuration object\n\n\n    this.c = $.extend(true, {}, DataTable.defaults.rowGroup, RowGroup.defaults, opts); // Internal settings\n\n    this.s = {\n      dt: new DataTable.Api(dt)\n    }; // DOM items\n\n    this.dom = {}; // Check if row grouping has already been initialised on this table\n\n    var settings = this.s.dt.settings()[0];\n    var existing = settings.rowGroup;\n\n    if (existing) {\n      return existing;\n    }\n\n    settings.rowGroup = this;\n\n    this._constructor();\n  };\n\n  $.extend(RowGroup.prototype, {\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * API methods for DataTables API interface\n     */\n\n    /**\n     * Get/set the grouping data source - need to call draw after this is\n     * executed as a setter\n     * @returns string~RowGroup\n     */\n    dataSrc: function (val) {\n      if (val === undefined) {\n        return this.c.dataSrc;\n      }\n\n      var dt = this.s.dt;\n      this.c.dataSrc = val;\n      $(dt.table().node()).triggerHandler('rowgroup-datasrc.dt', [dt, val]);\n      return this;\n    },\n\n    /**\n     * Disable - need to call draw after this is executed\n     * @returns RowGroup\n     */\n    disable: function () {\n      this.c.enable = false;\n      return this;\n    },\n\n    /**\n     * Enable - need to call draw after this is executed\n     * @returns RowGroup\n     */\n    enable: function (flag) {\n      if (flag === false) {\n        return this.disable();\n      }\n\n      this.c.enable = true;\n      return this;\n    },\n\n    /**\n     * Get enabled flag\n     * @returns boolean\n     */\n    enabled: function () {\n      return this.c.enable;\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Constructor\n     */\n    _constructor: function () {\n      var that = this;\n      var dt = this.s.dt;\n      var hostSettings = dt.settings()[0];\n      dt.on('draw.dtrg', function (e, s) {\n        if (that.c.enable && hostSettings === s) {\n          that._draw();\n        }\n      });\n      dt.on('column-visibility.dt.dtrg responsive-resize.dt.dtrg', function () {\n        that._adjustColspan();\n      });\n      dt.on('destroy', function () {\n        dt.off('.dtrg');\n      });\n    },\n\n    /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n     * Private methods\n     */\n\n    /**\n     * Adjust column span when column visibility changes\n     * @private\n     */\n    _adjustColspan: function () {\n      $('tr.' + this.c.className, this.s.dt.table().body()).find('td:visible').attr('colspan', this._colspan());\n    },\n\n    /**\n     * Get the number of columns that a grouping row should span\n     * @private\n     */\n    _colspan: function () {\n      return this.s.dt.columns().visible().reduce(function (a, b) {\n        return a + b;\n      }, 0);\n    },\n\n    /**\n     * Update function that is called whenever we need to draw the grouping rows.\n     * This is basically a bootstrap for the self iterative _group and _groupDisplay\n     * methods\n     * @private\n     */\n    _draw: function () {\n      var dt = this.s.dt;\n\n      var groupedRows = this._group(0, dt.rows({\n        page: 'current'\n      }).indexes());\n\n      this._groupDisplay(0, groupedRows);\n    },\n\n    /**\n     * Get the grouping information from a data set (index) of rows\n     * @param {number} level Nesting level\n     * @param {DataTables.Api} rows API of the rows to consider for this group\n     * @returns {object[]} Nested grouping information - it is structured like this:\n     *\t{\n     *\t\tdataPoint: 'Edinburgh',\n     *\t\trows: [ 1,2,3,4,5,6,7 ],\n     *\t\tchildren: [ {\n     *\t\t\tdataPoint: 'developer'\n     *\t\t\trows: [ 1, 2, 3 ]\n     *\t\t},\n     *\t\t{\n     *\t\t\tdataPoint: 'support',\n     *\t\t\trows: [ 4, 5, 6, 7 ]\n     *\t\t} ]\n     *\t}\n     * @private\n     */\n    _group: function (level, rows) {\n      var fns = Array.isArray(this.c.dataSrc) ? this.c.dataSrc : [this.c.dataSrc];\n\n      var fn = DataTable.ext.oApi._fnGetObjectDataFn(fns[level]);\n\n      var dt = this.s.dt;\n      var group, last;\n      var data = [];\n      var that = this;\n\n      for (var i = 0, ien = rows.length; i < ien; i++) {\n        var rowIndex = rows[i];\n        var rowData = dt.row(rowIndex).data();\n        var group = fn(rowData);\n\n        if (group === null || group === undefined) {\n          group = that.c.emptyDataGroup;\n        }\n\n        if (last === undefined || group !== last) {\n          data.push({\n            dataPoint: group,\n            rows: []\n          });\n          last = group;\n        }\n\n        data[data.length - 1].rows.push(rowIndex);\n      }\n\n      if (fns[level + 1] !== undefined) {\n        for (var i = 0, ien = data.length; i < ien; i++) {\n          data[i].children = this._group(level + 1, data[i].rows);\n        }\n      }\n\n      return data;\n    },\n\n    /**\n     * Row group display - insert the rows into the document\n     * @param {number} level Nesting level\n     * @param {object[]} groups Takes the nested array from `_group`\n     * @private\n     */\n    _groupDisplay: function (level, groups) {\n      var dt = this.s.dt;\n      var display;\n\n      for (var i = 0, ien = groups.length; i < ien; i++) {\n        var group = groups[i];\n        var groupName = group.dataPoint;\n        var row;\n        var rows = group.rows;\n\n        if (this.c.startRender) {\n          display = this.c.startRender.call(this, dt.rows(rows), groupName, level);\n          row = this._rowWrap(display, this.c.startClassName, level);\n\n          if (row) {\n            row.insertBefore(dt.row(rows[0]).node());\n          }\n        }\n\n        if (this.c.endRender) {\n          display = this.c.endRender.call(this, dt.rows(rows), groupName, level);\n          row = this._rowWrap(display, this.c.endClassName, level);\n\n          if (row) {\n            row.insertAfter(dt.row(rows[rows.length - 1]).node());\n          }\n        }\n\n        if (group.children) {\n          this._groupDisplay(level + 1, group.children);\n        }\n      }\n    },\n\n    /**\n     * Take a rendered value from an end user and make it suitable for display\n     * as a row, by wrapping it in a row, or detecting that it is a row.\n     * @param {node|jQuery|string} display Display value\n     * @param {string} className Class to add to the row\n     * @param {array} group\n     * @param {number} group level\n     * @private\n     */\n    _rowWrap: function (display, className, level) {\n      var row;\n\n      if (display === null || display === '') {\n        display = this.c.emptyDataGroup;\n      }\n\n      if (display === undefined || display === null) {\n        return null;\n      }\n\n      if (typeof display === 'object' && display.nodeName && display.nodeName.toLowerCase() === 'tr') {\n        row = $(display);\n      } else if (display instanceof $ && display.length && display[0].nodeName.toLowerCase() === 'tr') {\n        row = display;\n      } else {\n        row = $('<tr/>').append($('<td/>').attr('colspan', this._colspan()).append(display));\n      }\n\n      return row.addClass(this.c.className).addClass(className).addClass('dtrg-level-' + level);\n    }\n  });\n  /**\n   * RowGroup default settings for initialisation\n   *\n   * @namespace\n   * @name RowGroup.defaults\n   * @static\n   */\n\n  RowGroup.defaults = {\n    /**\n     * Class to apply to grouping rows - applied to both the start and\n     * end grouping rows.\n     * @type string\n     */\n    className: 'dtrg-group',\n\n    /**\n     * Data property from which to read the grouping information\n     * @type string|integer|array\n     */\n    dataSrc: 0,\n\n    /**\n     * Text to show if no data is found for a group\n     * @type string\n     */\n    emptyDataGroup: 'No group',\n\n    /**\n     * Initial enablement state\n     * @boolean\n     */\n    enable: true,\n\n    /**\n     * Class name to give to the end grouping row\n     * @type string\n     */\n    endClassName: 'dtrg-end',\n\n    /**\n     * End grouping label function\n     * @function\n     */\n    endRender: null,\n\n    /**\n     * Class name to give to the start grouping row\n     * @type string\n     */\n    startClassName: 'dtrg-start',\n\n    /**\n     * Start grouping label function\n     * @function\n     */\n    startRender: function (rows, group) {\n      return group;\n    }\n  };\n  RowGroup.version = \"1.1.3\";\n  $.fn.dataTable.RowGroup = RowGroup;\n  $.fn.DataTable.RowGroup = RowGroup;\n  DataTable.Api.register('rowGroup()', function () {\n    return this;\n  });\n  DataTable.Api.register('rowGroup().disable()', function () {\n    return this.iterator('table', function (ctx) {\n      if (ctx.rowGroup) {\n        ctx.rowGroup.enable(false);\n      }\n    });\n  });\n  DataTable.Api.register('rowGroup().enable()', function (opts) {\n    return this.iterator('table', function (ctx) {\n      if (ctx.rowGroup) {\n        ctx.rowGroup.enable(opts === undefined ? true : opts);\n      }\n    });\n  });\n  DataTable.Api.register('rowGroup().enabled()', function () {\n    var ctx = this.context;\n    return ctx.length && ctx[0].rowGroup ? ctx[0].rowGroup.enabled() : false;\n  });\n  DataTable.Api.register('rowGroup().dataSrc()', function (val) {\n    if (val === undefined) {\n      return this.context[0].rowGroup.dataSrc();\n    }\n\n    return this.iterator('table', function (ctx) {\n      if (ctx.rowGroup) {\n        ctx.rowGroup.dataSrc(val);\n      }\n    });\n  }); // Attach a listener to the document which listens for DataTables initialisation\n  // events so we can automatically initialise\n\n  $(document).on('preInit.dt.dtrg', function (e, settings, json) {\n    if (e.namespace !== 'dt') {\n      return;\n    }\n\n    var init = settings.oInit.rowGroup;\n    var defaults = DataTable.defaults.rowGroup;\n\n    if (init || defaults) {\n      var opts = $.extend({}, defaults, init);\n\n      if (init !== false) {\n        new RowGroup(settings, opts);\n      }\n    }\n  });\n  return RowGroup;\n});","map":{"version":3,"sources":["C:/Users/Sher/Desktop/datahub tagging ui/frontend/node_modules/datatables.net-rowgroup/js/dataTables.rowGroup.js"],"names":["factory","define","amd","$","window","document","exports","module","root","fn","dataTable","require","jQuery","undefined","DataTable","RowGroup","dt","opts","versionCheck","c","extend","defaults","rowGroup","s","Api","dom","settings","existing","_constructor","prototype","dataSrc","val","table","node","triggerHandler","disable","enable","flag","enabled","that","hostSettings","on","e","_draw","_adjustColspan","off","className","body","find","attr","_colspan","columns","visible","reduce","a","b","groupedRows","_group","rows","page","indexes","_groupDisplay","level","fns","Array","isArray","ext","oApi","_fnGetObjectDataFn","group","last","data","i","ien","length","rowIndex","rowData","row","emptyDataGroup","push","dataPoint","children","groups","display","groupName","startRender","call","_rowWrap","startClassName","insertBefore","endRender","endClassName","insertAfter","nodeName","toLowerCase","append","addClass","version","register","iterator","ctx","context","json","namespace","init","oInit"],"mappings":"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","sourcesContent":["/*! RowGroup 1.1.3\n * Â©2017-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     RowGroup\n * @description RowGrouping for DataTables\n * @version     1.1.3\n * @file        dataTables.rowGroup.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net\n * @copyright   Copyright 2017-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'datatables.net'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = function (root, $) {\n\t\t\tif ( ! root ) {\n\t\t\t\troot = window;\n\t\t\t}\n\n\t\t\tif ( ! $ || ! $.fn.dataTable ) {\n\t\t\t\t$ = require('datatables.net')(root, $).$;\n\t\t\t}\n\n\t\t\treturn factory( $, root, root.document );\n\t\t};\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\nvar RowGroup = function ( dt, opts ) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.8' ) ) {\n\t\tthrow 'RowGroup requires DataTables 1.10.8 or newer';\n\t}\n\n\t// User and defaults configuration object\n\tthis.c = $.extend( true, {},\n\t\tDataTable.defaults.rowGroup,\n\t\tRowGroup.defaults,\n\t\topts\n\t);\n\n\t// Internal settings\n\tthis.s = {\n\t\tdt: new DataTable.Api( dt )\n\t};\n\n\t// DOM items\n\tthis.dom = {\n\n\t};\n\n\t// Check if row grouping has already been initialised on this table\n\tvar settings = this.s.dt.settings()[0];\n\tvar existing = settings.rowGroup;\n\tif ( existing ) {\n\t\treturn existing;\n\t}\n\n\tsettings.rowGroup = this;\n\tthis._constructor();\n};\n\n\n$.extend( RowGroup.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * API methods for DataTables API interface\n\t */\n\n\t/**\n\t * Get/set the grouping data source - need to call draw after this is\n\t * executed as a setter\n\t * @returns string~RowGroup\n\t */\n\tdataSrc: function ( val )\n\t{\n\t\tif ( val === undefined ) {\n\t\t\treturn this.c.dataSrc;\n\t\t}\n\n\t\tvar dt = this.s.dt;\n\n\t\tthis.c.dataSrc = val;\n\n\t\t$(dt.table().node()).triggerHandler( 'rowgroup-datasrc.dt', [ dt, val ] );\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Disable - need to call draw after this is executed\n\t * @returns RowGroup\n\t */\n\tdisable: function ()\n\t{\n\t\tthis.c.enable = false;\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable - need to call draw after this is executed\n\t * @returns RowGroup\n\t */\n\tenable: function ( flag )\n\t{\n\t\tif ( flag === false ) {\n\t\t\treturn this.disable();\n\t\t}\n\n\t\tthis.c.enable = true;\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get enabled flag\n\t * @returns boolean\n\t */\n\tenabled: function ()\n\t{\n\t\treturn this.c.enable;\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\t_constructor: function ()\n\t{\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar hostSettings = dt.settings()[0];\n\n\t\tdt.on( 'draw.dtrg', function (e, s) {\n\t\t\tif ( that.c.enable && hostSettings === s ) {\n\t\t\t\tthat._draw();\n\t\t\t}\n\t\t} );\n\n\t\tdt.on( 'column-visibility.dt.dtrg responsive-resize.dt.dtrg', function () {\n\t\t\tthat._adjustColspan();\n\t\t} );\n\n\t\tdt.on( 'destroy', function () {\n\t\t\tdt.off( '.dtrg' );\n\t\t} );\n\t},\n\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Adjust column span when column visibility changes\n\t * @private\n\t */\n\t_adjustColspan: function ()\n\t{\n\t\t$( 'tr.'+this.c.className, this.s.dt.table().body() ).find('td:visible')\n\t\t\t.attr( 'colspan', this._colspan() );\n\t},\n\n\t/**\n\t * Get the number of columns that a grouping row should span\n\t * @private\n\t */\n\t_colspan: function ()\n\t{\n\t\treturn this.s.dt.columns().visible().reduce( function (a, b) {\n\t\t\treturn a + b;\n\t\t}, 0 );\n\t},\n\n\n\t/**\n\t * Update function that is called whenever we need to draw the grouping rows.\n\t * This is basically a bootstrap for the self iterative _group and _groupDisplay\n\t * methods\n\t * @private\n\t */\n\t_draw: function ()\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar groupedRows = this._group( 0, dt.rows( { page: 'current' } ).indexes() );\n\n\t\tthis._groupDisplay( 0, groupedRows );\n\t},\n\n\t/**\n\t * Get the grouping information from a data set (index) of rows\n\t * @param {number} level Nesting level\n\t * @param {DataTables.Api} rows API of the rows to consider for this group\n\t * @returns {object[]} Nested grouping information - it is structured like this:\n\t *\t{\n\t *\t\tdataPoint: 'Edinburgh',\n\t *\t\trows: [ 1,2,3,4,5,6,7 ],\n\t *\t\tchildren: [ {\n\t *\t\t\tdataPoint: 'developer'\n\t *\t\t\trows: [ 1, 2, 3 ]\n\t *\t\t},\n\t *\t\t{\n\t *\t\t\tdataPoint: 'support',\n\t *\t\t\trows: [ 4, 5, 6, 7 ]\n\t *\t\t} ]\n\t *\t}\n\t * @private\n\t */\n\t_group: function ( level, rows ) {\n\t\tvar fns = Array.isArray( this.c.dataSrc ) ? this.c.dataSrc : [ this.c.dataSrc ];\n\t\tvar fn = DataTable.ext.oApi._fnGetObjectDataFn( fns[ level ] );\n\t\tvar dt = this.s.dt;\n\t\tvar group, last;\n\t\tvar data = [];\n\t\tvar that = this;\n\n\t\tfor ( var i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\tvar rowIndex = rows[i];\n\t\t\tvar rowData = dt.row( rowIndex ).data();\n\t\t\tvar group = fn( rowData );\n\n\t\t\tif ( group === null || group === undefined ) {\n\t\t\t\tgroup = that.c.emptyDataGroup;\n\t\t\t}\n\t\t\t\n\t\t\tif ( last === undefined || group !== last ) {\n\t\t\t\tdata.push( {\n\t\t\t\t\tdataPoint: group,\n\t\t\t\t\trows: []\n\t\t\t\t} );\n\n\t\t\t\tlast = group;\n\t\t\t}\n\n\t\t\tdata[ data.length-1 ].rows.push( rowIndex );\n\t\t}\n\n\t\tif ( fns[ level+1 ] !== undefined ) {\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tdata[i].children = this._group( level+1, data[i].rows );\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t * Row group display - insert the rows into the document\n\t * @param {number} level Nesting level\n\t * @param {object[]} groups Takes the nested array from `_group`\n\t * @private\n\t */\n\t_groupDisplay: function ( level, groups )\n\t{\n\t\tvar dt = this.s.dt;\n\t\tvar display;\n\t\n\t\tfor ( var i=0, ien=groups.length ; i<ien ; i++ ) {\n\t\t\tvar group = groups[i];\n\t\t\tvar groupName = group.dataPoint;\n\t\t\tvar row;\n\t\t\tvar rows = group.rows;\n\n\t\t\tif ( this.c.startRender ) {\n\t\t\t\tdisplay = this.c.startRender.call( this, dt.rows(rows), groupName, level );\n\t\t\t\trow = this._rowWrap( display, this.c.startClassName, level );\n\n\t\t\t\tif ( row ) {\n\t\t\t\t\trow.insertBefore( dt.row( rows[0] ).node() );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( this.c.endRender ) {\n\t\t\t\tdisplay = this.c.endRender.call( this, dt.rows(rows), groupName, level );\n\t\t\t\trow = this._rowWrap( display, this.c.endClassName, level );\n\n\t\t\t\tif ( row ) {\n\t\t\t\t\trow.insertAfter( dt.row( rows[ rows.length-1 ] ).node() );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( group.children ) {\n\t\t\t\tthis._groupDisplay( level+1, group.children );\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Take a rendered value from an end user and make it suitable for display\n\t * as a row, by wrapping it in a row, or detecting that it is a row.\n\t * @param {node|jQuery|string} display Display value\n\t * @param {string} className Class to add to the row\n\t * @param {array} group\n\t * @param {number} group level\n\t * @private\n\t */\n\t_rowWrap: function ( display, className, level )\n\t{\n\t\tvar row;\n\t\t\n\t\tif ( display === null || display === '' ) {\n\t\t\tdisplay = this.c.emptyDataGroup;\n\t\t}\n\n\t\tif ( display === undefined || display === null ) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif ( typeof display === 'object' && display.nodeName && display.nodeName.toLowerCase() === 'tr') {\n\t\t\trow = $(display);\n\t\t}\n\t\telse if (display instanceof $ && display.length && display[0].nodeName.toLowerCase() === 'tr') {\n\t\t\trow = display;\n\t\t}\n\t\telse {\n\t\t\trow = $('<tr/>')\n\t\t\t\t.append(\n\t\t\t\t\t$('<td/>')\n\t\t\t\t\t\t.attr( 'colspan', this._colspan() )\n\t\t\t\t\t\t.append( display  )\n\t\t\t\t);\n\t\t}\n\n\t\treturn row\n\t\t\t.addClass( this.c.className )\n\t\t\t.addClass( className )\n\t\t\t.addClass( 'dtrg-level-'+level );\n\t}\n} );\n\n\n/**\n * RowGroup default settings for initialisation\n *\n * @namespace\n * @name RowGroup.defaults\n * @static\n */\nRowGroup.defaults = {\n\t/**\n\t * Class to apply to grouping rows - applied to both the start and\n\t * end grouping rows.\n\t * @type string\n\t */\n\tclassName: 'dtrg-group',\n\n\t/**\n\t * Data property from which to read the grouping information\n\t * @type string|integer|array\n\t */\n\tdataSrc: 0,\n\n\t/**\n\t * Text to show if no data is found for a group\n\t * @type string\n\t */\n\temptyDataGroup: 'No group',\n\n\t/**\n\t * Initial enablement state\n\t * @boolean\n\t */\n\tenable: true,\n\n\t/**\n\t * Class name to give to the end grouping row\n\t * @type string\n\t */\n\tendClassName: 'dtrg-end',\n\n\t/**\n\t * End grouping label function\n\t * @function\n\t */\n\tendRender: null,\n\n\t/**\n\t * Class name to give to the start grouping row\n\t * @type string\n\t */\n\tstartClassName: 'dtrg-start',\n\n\t/**\n\t * Start grouping label function\n\t * @function\n\t */\n\tstartRender: function ( rows, group ) {\n\t\treturn group;\n\t}\n};\n\n\nRowGroup.version = \"1.1.3\";\n\n\n$.fn.dataTable.RowGroup = RowGroup;\n$.fn.DataTable.RowGroup = RowGroup;\n\n\nDataTable.Api.register( 'rowGroup()', function () {\n\treturn this;\n} );\n\nDataTable.Api.register( 'rowGroup().disable()', function () {\n\treturn this.iterator( 'table', function (ctx) {\n\t\tif ( ctx.rowGroup ) {\n\t\t\tctx.rowGroup.enable( false );\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'rowGroup().enable()', function ( opts ) {\n\treturn this.iterator( 'table', function (ctx) {\n\t\tif ( ctx.rowGroup ) {\n\t\t\tctx.rowGroup.enable( opts === undefined ? true : opts );\n\t\t}\n\t} );\n} );\n\nDataTable.Api.register( 'rowGroup().enabled()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length && ctx[0].rowGroup ?\n\t\tctx[0].rowGroup.enabled() :\n\t\tfalse;\n} );\n\nDataTable.Api.register( 'rowGroup().dataSrc()', function ( val ) {\n\tif ( val === undefined ) {\n\t\treturn this.context[0].rowGroup.dataSrc();\n\t}\n\n\treturn this.iterator( 'table', function (ctx) {\n\t\tif ( ctx.rowGroup ) {\n\t\t\tctx.rowGroup.dataSrc( val );\n\t\t}\n\t} );\n} );\n\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on( 'preInit.dt.dtrg', function (e, settings, json) {\n\tif ( e.namespace !== 'dt' ) {\n\t\treturn;\n\t}\n\n\tvar init = settings.oInit.rowGroup;\n\tvar defaults = DataTable.defaults.rowGroup;\n\n\tif ( init || defaults ) {\n\t\tvar opts = $.extend( {}, defaults, init );\n\n\t\tif ( init !== false ) {\n\t\t\tnew RowGroup( settings, opts  );\n\t\t}\n\t}\n} );\n\n\nreturn RowGroup;\n\n}));\n"]},"metadata":{},"sourceType":"script"}